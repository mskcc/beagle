# Generated by Django 2.2.11 on 2020-12-02 19:31

from django.db import migrations


def _set_parent(apps, operator_runs):
    OperatorTrigger = apps.get_model('runner', 'OperatorTrigger')
    for operator_run in operator_runs:
        parent = None
        trigger = OperatorTrigger.objects.filter(to_operator=operator_run.operator).first()
        if trigger:
            for operator_run_2 in operator_runs:
                if operator_run_2.operator.id == trigger.from_operator.id:
                    print("Parent operator %ss" % str(operator_run_2.id))
                    parent = operator_run_2
                    break
        operator_run.parent = parent
        operator_run.save()


def set_parents_for_operator_runs(apps, _):
    JobGroup = apps.get_model('notifier', 'JobGroup')
    OperatorRun = apps.get_model('runner', 'OperatorRun')
    job_groups = JobGroup.objects.all()
    for job_group in job_groups:
        operator_runs = OperatorRun.objects.filter(job_group=job_group).all()
        if operator_runs:
            _set_parent(apps, operator_runs)


def revert(apps, _):
    OperatorRun = apps.get_model('runner', 'OperatorRun')
    for operator_run in OperatorRun.objects.all():
        operator_run.parent = None
        operator_run.save()


class Migration(migrations.Migration):

    dependencies = [
        ('runner', '0038_populate_runs'),
    ]

    operations = [
        migrations.RunPython(set_parents_for_operator_runs, reverse_code=revert)
    ]
