{
    "cwlVersion": "v1.0",
    "class": "Workflow",
    "id": "pair-workflow-sv",
    "requirements": [
        {
            "class": "MultipleInputFeatureRequirement"
        },
        {
            "class": "ScatterFeatureRequirement"
        },
        {
            "class": "StepInputExpressionRequirement"
        },
        {
            "class": "SubworkflowFeatureRequirement"
        },
        {
            "class": "InlineJavascriptRequirement"
        }
    ],
    "inputs": [
        {
            "type": {
                "type": "record",
                "fields": [
                    {
                        "type": "File",
                        "name": "refseq"
                    },
                    {
                        "type": "string",
                        "name": "vep_path"
                    },
                    {
                        "type": "string",
                        "name": "custom_enst"
                    },
                    {
                        "type": "string",
                        "name": "vep_data"
                    },
                    {
                        "type": "string",
                        "name": "hotspot_list"
                    },
                    {
                        "type": "File",
                        "name": "hotspot_list_maf"
                    },
                    {
                        "type": "File",
                        "name": "delly_exclude"
                    },
                    {
                        "type": "string",
                        "name": "hotspot_vcf"
                    },
                    {
                        "type": "File",
                        "name": "facets_snps"
                    },
                    {
                        "type": "File",
                        "name": "bait_intervals"
                    },
                    {
                        "type": "File",
                        "name": "target_intervals"
                    },
                    {
                        "type": "File",
                        "name": "fp_intervals"
                    },
                    {
                        "type": "File",
                        "name": "fp_genotypes"
                    },
                    {
                        "type": "string",
                        "name": "conpair_markers"
                    },
                    {
                        "type": "string",
                        "name": "conpair_markers_bed"
                    }
                ]
            },
            "id": "db_files"
        },
        {
            "type": "File",
            "secondaryFiles": [
                ".amb",
                ".ann",
                ".bwt",
                ".pac",
                ".sa",
                ".fai",
                "^.dict"
            ],
            "id": "ref_fasta"
        },
        {
            "type": "File",
            "secondaryFiles": [
                ".amb",
                ".ann",
                ".bwt",
                ".pac",
                ".sa",
                ".fai",
                "^.dict"
            ],
            "id": "mouse_fasta"
        },
        {
            "type": "File",
            "secondaryFiles": [
                ".idx"
            ],
            "id": "hapmap"
        },
        {
            "type": "File",
            "secondaryFiles": [
                ".idx"
            ],
            "id": "dbsnp"
        },
        {
            "type": "File",
            "secondaryFiles": [
                ".idx"
            ],
            "id": "indels_1000g"
        },
        {
            "type": "File",
            "secondaryFiles": [
                ".idx"
            ],
            "id": "snps_1000g"
        },
        {
            "type": "File",
            "secondaryFiles": [
                ".idx"
            ],
            "id": "cosmic"
        },
        {
            "type": "File",
            "secondaryFiles": [
                ".tbi"
            ],
            "id": "exac_filter"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "secondaryFiles": [
                "^.bai"
            ],
            "id": "curated_bams"
        },
        {
            "type": {
                "type": "record",
                "fields": [
                    {
                        "type": "string",
                        "name": "abra_scratch"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "string"
                        },
                        "name": "covariates"
                    },
                    {
                        "type": "boolean",
                        "name": "emit_original_quals"
                    },
                    {
                        "type": "string",
                        "name": "genome"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "string"
                        },
                        "name": "intervals"
                    },
                    {
                        "type": "int",
                        "name": "mutect_dcov"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "string"
                        },
                        "name": "mutect_rf"
                    },
                    {
                        "type": "int",
                        "name": "num_cpu_threads_per_data_thread"
                    },
                    {
                        "type": "int",
                        "name": "num_threads"
                    },
                    {
                        "type": "string",
                        "name": "tmp_dir"
                    },
                    {
                        "type": "float",
                        "name": "complex_tn"
                    },
                    {
                        "type": "float",
                        "name": "complex_nn"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "string"
                        },
                        "name": "delly_type"
                    },
                    {
                        "type": "string",
                        "name": "project_prefix"
                    },
                    {
                        "type": "string",
                        "name": "assay"
                    },
                    {
                        "type": "string",
                        "name": "pi"
                    },
                    {
                        "type": "string",
                        "name": "pi_email"
                    },
                    {
                        "type": "string",
                        "name": "opt_dup_pix_dist"
                    },
                    {
                        "type": "int",
                        "name": "abra_ram_min"
                    },
                    {
                        "type": "string",
                        "name": "gatk_jar_path"
                    }
                ]
            },
            "id": "runparams"
        },
        {
            "type": {
                "type": "array",
                "items": {
                    "type": "record",
                    "fields": [
                        {
                            "type": "string",
                            "name": "CN"
                        },
                        {
                            "type": "string",
                            "name": "LB"
                        },
                        {
                            "type": "string",
                            "name": "ID"
                        },
                        {
                            "type": "string",
                            "name": "PL"
                        },
                        {
                            "type": {
                                "type": "array",
                                "items": "string"
                            },
                            "name": "PU"
                        },
                        {
                            "type": {
                                "type": "array",
                                "items": "File"
                            },
                            "name": "R1"
                        },
                        {
                            "type": {
                                "type": "array",
                                "items": "File"
                            },
                            "name": "R2"
                        },
                        {
                            "type": {
                                "type": "array",
                                "items": "File"
                            },
                            "name": "zR1"
                        },
                        {
                            "type": {
                                "type": "array",
                                "items": "File"
                            },
                            "name": "zR2"
                        },
                        {
                            "type": {
                                "type": "array",
                                "items": "File"
                            },
                            "name": "bam"
                        },
                        {
                            "type": {
                                "type": "array",
                                "items": "string"
                            },
                            "name": "RG_ID"
                        },
                        {
                            "type": "string",
                            "name": "adapter"
                        },
                        {
                            "type": "string",
                            "name": "adapter2"
                        },
                        {
                            "type": "string",
                            "name": "bwa_output"
                        }
                    ]
                }
            },
            "id": "pair"
        }
    ],
    "outputs": [
        {
            "type": "File",
            "secondaryFiles": [
                "^.bai"
            ],
            "outputSource": "format_output/normal_bam",
            "id": "normal_bam"
        },
        {
            "type": "File",
            "secondaryFiles": [
                "^.bai"
            ],
            "outputSource": "format_output/tumor_bam",
            "id": "tumor_bam"
        },
        {
            "type": {
                "type": "array",
                "items": {
                    "type": "array",
                    "items": "File"
                }
            },
            "outputSource": "alignment/clstats1",
            "id": "clstats1"
        },
        {
            "type": {
                "type": "array",
                "items": {
                    "type": "array",
                    "items": "File"
                }
            },
            "outputSource": "alignment/clstats2",
            "id": "clstats2"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/md_metrics",
            "id": "md_metrics"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/as_metrics",
            "id": "as_metrics"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/hs_metrics",
            "id": "hs_metrics"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/insert_metrics",
            "id": "insert_metrics"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/insert_pdf",
            "id": "insert_pdf"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/per_target_coverage",
            "id": "per_target_coverage"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/qual_metrics",
            "id": "qual_metrics"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/qual_pdf",
            "id": "qual_pdf"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/doc_basecounts",
            "id": "doc_basecounts"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/gcbias_pdf",
            "id": "gcbias_pdf"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/gcbias_metrics",
            "id": "gcbias_metrics"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/gcbias_summary",
            "id": "gcbias_summary"
        },
        {
            "type": {
                "type": "array",
                "items": "File"
            },
            "outputSource": "alignment/conpair_pileup",
            "id": "conpair_pileups"
        },
        {
            "type": "File",
            "outputSource": "variant_calling/mutect_vcf",
            "id": "mutect_vcf"
        },
        {
            "type": "File",
            "outputSource": "variant_calling/mutect_callstats",
            "id": "mutect_callstats"
        },
        {
            "type": "File",
            "outputSource": "variant_calling/vardict_vcf",
            "id": "vardict_vcf"
        },
        {
            "type": "File",
            "outputSource": "variant_calling/combine_vcf",
            "secondaryFiles": [
                ".tbi"
            ],
            "id": "combine_vcf"
        },
        {
            "type": "File",
            "outputSource": "variant_calling/annotate_vcf",
            "id": "annotate_vcf"
        },
        {
            "type": "File",
            "outputSource": "variant_calling/vardict_norm_vcf",
            "secondaryFiles": [
                ".tbi"
            ],
            "id": "vardict_norm_vcf"
        },
        {
            "type": "File",
            "outputSource": "variant_calling/mutect_norm_vcf",
            "secondaryFiles": [
                ".tbi"
            ],
            "id": "mutect_norm_vcf"
        },
        {
            "type": "File",
            "outputSource": "variant_calling/snp_pileup",
            "id": "snp_pileup"
        },
        {
            "type": "File",
            "outputSource": "structural_variants/merged_file_unfiltered",
            "id": "merged_file_unfiltered"
        },
        {
            "type": "File",
            "outputSource": "structural_variants/merged_file",
            "id": "merged_file"
        },
        {
            "type": "File",
            "outputSource": "structural_variants/maf_file",
            "id": "maf_file"
        },
        {
            "type": "File",
            "outputSource": "structural_variants/portal_file",
            "id": "portal_file"
        },
        {
            "type": "File",
            "outputSource": "maf_processing/maf",
            "id": "maf"
        },
        {
            "type": "string",
            "outputSource": "format_output/genome",
            "id": "genome"
        },
        {
            "type": "string",
            "outputSource": "format_output/assay",
            "id": "assay"
        },
        {
            "type": "string",
            "outputSource": "format_output/pi",
            "id": "pi"
        },
        {
            "type": "string",
            "outputSource": "format_output/project_prefix",
            "id": "project_prefix"
        },
        {
            "type": "string",
            "outputSource": "format_output/pi_email",
            "id": "pi_email"
        },
        {
            "type": "string",
            "outputSource": "format_output/normal_sample_name",
            "id": "normal_sample_name"
        },
        {
            "type": "string",
            "outputSource": "format_output/tumor_sample_name",
            "id": "tumor_sample_name"
        }
    ],
    "steps": [
        {
            "run": {
                "cwlVersion": "v1.0",
                "class": "Workflow",
                "id": "alignment-pair",
                "requirements": [
                    {
                        "class": "MultipleInputFeatureRequirement"
                    },
                    {
                        "class": "ScatterFeatureRequirement"
                    },
                    {
                        "class": "SubworkflowFeatureRequirement"
                    },
                    {
                        "class": "InlineJavascriptRequirement"
                    }
                ],
                "inputs": [
                    {
                        "type": {
                            "type": "array",
                            "items": {
                                "type": "record",
                                "fields": [
                                    {
                                        "type": "string",
                                        "name": "CN"
                                    },
                                    {
                                        "type": "string",
                                        "name": "LB"
                                    },
                                    {
                                        "type": "string",
                                        "name": "ID"
                                    },
                                    {
                                        "type": "string",
                                        "name": "PL"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "string"
                                        },
                                        "name": "PU"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "R1"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "R2"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "zR1"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "zR2"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "bam"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "string"
                                        },
                                        "name": "RG_ID"
                                    },
                                    {
                                        "type": "string",
                                        "name": "adapter"
                                    },
                                    {
                                        "type": "string",
                                        "name": "adapter2"
                                    },
                                    {
                                        "type": "string",
                                        "name": "bwa_output"
                                    }
                                ]
                            }
                        },
                        "id": "pair"
                    },
                    {
                        "type": "string",
                        "id": "genome"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "string"
                        },
                        "id": "intervals"
                    },
                    {
                        "type": "string",
                        "id": "opt_dup_pix_dist"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".idx"
                        ],
                        "id": "hapmap"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".idx"
                        ],
                        "id": "dbsnp"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".idx"
                        ],
                        "id": "indels_1000g"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".idx"
                        ],
                        "id": "snps_1000g"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "string"
                        },
                        "id": "covariates"
                    },
                    {
                        "type": "int",
                        "id": "abra_ram_min"
                    },
                    {
                        "type": "string",
                        "id": "gatk_jar_path"
                    },
                    {
                        "type": "File",
                        "id": "bait_intervals"
                    },
                    {
                        "type": "File",
                        "id": "target_intervals"
                    },
                    {
                        "type": "File",
                        "id": "fp_intervals"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".amb",
                            ".ann",
                            ".bwt",
                            ".pac",
                            ".sa",
                            ".fai",
                            "^.dict"
                        ],
                        "id": "ref_fasta"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".amb",
                            ".ann",
                            ".bwt",
                            ".pac",
                            ".sa",
                            ".fai",
                            "^.dict"
                        ],
                        "id": "mouse_fasta"
                    },
                    {
                        "type": "string",
                        "id": "conpair_markers_bed"
                    }
                ],
                "outputs": [
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "secondaryFiles": [
                            "^.bai"
                        ],
                        "outputSource": "realignment/outbams",
                        "id": "bams"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": "File"
                            }
                        },
                        "outputSource": "sample_alignment/clstats1",
                        "id": "clstats1"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": "File"
                            }
                        },
                        "outputSource": "sample_alignment/clstats2",
                        "id": "clstats2"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "sample_alignment/md_metrics",
                        "id": "md_metrics"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "sample_alignment/as_metrics",
                        "id": "as_metrics"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "sample_alignment/hs_metrics",
                        "id": "hs_metrics"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "sample_alignment/insert_metrics",
                        "id": "insert_metrics"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "sample_alignment/insert_pdf",
                        "id": "insert_pdf"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "sample_alignment/per_target_coverage",
                        "id": "per_target_coverage"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "sample_alignment/doc_basecounts",
                        "id": "doc_basecounts"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "sample_alignment/gcbias_pdf",
                        "id": "gcbias_pdf"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "sample_alignment/gcbias_metrics",
                        "id": "gcbias_metrics"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "sample_alignment/gcbias_summary",
                        "id": "gcbias_summary"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "sample_alignment/conpair_pileup",
                        "id": "conpair_pileup"
                    },
                    {
                        "type": "File",
                        "outputSource": "realignment/covint_list",
                        "id": "covint_list"
                    },
                    {
                        "type": "File",
                        "outputSource": "realignment/covint_bed",
                        "id": "bed"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "realignment/qual_metrics",
                        "id": "qual_metrics"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputSource": "realignment/qual_pdf",
                        "id": "qual_pdf"
                    }
                ],
                "steps": [
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "Workflow",
                            "id": "sample-workflow",
                            "requirements": [
                                {
                                    "class": "MultipleInputFeatureRequirement"
                                },
                                {
                                    "class": "ScatterFeatureRequirement"
                                },
                                {
                                    "class": "SubworkflowFeatureRequirement"
                                },
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "class": "StepInputExpressionRequirement"
                                }
                            ],
                            "inputs": [
                                {
                                    "type": {
                                        "type": "record",
                                        "fields": [
                                            {
                                                "type": "string",
                                                "name": "CN"
                                            },
                                            {
                                                "type": "string",
                                                "name": "LB"
                                            },
                                            {
                                                "type": "string",
                                                "name": "ID"
                                            },
                                            {
                                                "type": "string",
                                                "name": "PL"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string"
                                                },
                                                "name": "PU"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "name": "R1"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "name": "R2"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "name": "zR1"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "name": "zR2"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "name": "bam"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string"
                                                },
                                                "name": "RG_ID"
                                            },
                                            {
                                                "type": "string",
                                                "name": "adapter"
                                            },
                                            {
                                                "type": "string",
                                                "name": "adapter2"
                                            },
                                            {
                                                "type": "string",
                                                "name": "bwa_output"
                                            }
                                        ]
                                    },
                                    "id": "sample"
                                },
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        ".amb",
                                        ".ann",
                                        ".bwt",
                                        ".pac",
                                        ".sa",
                                        ".fai",
                                        "^.dict"
                                    ],
                                    "id": "ref_fasta"
                                },
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        ".amb",
                                        ".ann",
                                        ".bwt",
                                        ".pac",
                                        ".sa",
                                        ".fai",
                                        "^.dict"
                                    ],
                                    "id": "mouse_fasta"
                                },
                                {
                                    "type": "string",
                                    "id": "genome"
                                },
                                {
                                    "type": "string",
                                    "id": "opt_dup_pix_dist"
                                },
                                {
                                    "type": "File",
                                    "id": "bait_intervals"
                                },
                                {
                                    "type": "File",
                                    "id": "target_intervals"
                                },
                                {
                                    "type": "File",
                                    "id": "fp_intervals"
                                },
                                {
                                    "type": "string",
                                    "id": "conpair_markers_bed"
                                },
                                {
                                    "type": "string",
                                    "id": "gatk_jar_path"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": {
                                        "type": "array",
                                        "items": "File"
                                    },
                                    "outputSource": "align/clstats1",
                                    "id": "clstats1"
                                },
                                {
                                    "type": {
                                        "type": "array",
                                        "items": "File"
                                    },
                                    "outputSource": "align/clstats2",
                                    "id": "clstats2"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "mark_duplicates/bam",
                                    "id": "bam"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "mark_duplicates/mdmetrics",
                                    "id": "md_metrics"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "gather_metrics/as_metrics",
                                    "id": "as_metrics"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "gather_metrics/hs_metrics",
                                    "id": "hs_metrics"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "gather_metrics/insert_metrics",
                                    "id": "insert_metrics"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "gather_metrics/insert_pdf",
                                    "id": "insert_pdf"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "gather_metrics/per_target_coverage",
                                    "id": "per_target_coverage"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "gather_metrics/doc_basecounts",
                                    "id": "doc_basecounts"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "gather_metrics/gcbias_pdf",
                                    "id": "gcbias_pdf"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "gather_metrics/gcbias_metrics",
                                    "id": "gcbias_metrics"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "gather_metrics/gcbias_summary",
                                    "id": "gcbias_summary"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "gather_metrics/conpair_pileup",
                                    "id": "conpair_pileup"
                                }
                            ],
                            "steps": [
                                {
                                    "in": [
                                        {
                                            "source": "sample",
                                            "id": "sample"
                                        }
                                    ],
                                    "out": [
                                        "CN",
                                        "LB",
                                        "ID",
                                        "PL",
                                        "PU",
                                        "zPU",
                                        "R1",
                                        "R2",
                                        "zR1",
                                        "zR2",
                                        "bam",
                                        "RG_ID",
                                        "adapter",
                                        "adapter2",
                                        "bwa_output"
                                    ],
                                    "run": {
                                        "class": "ExpressionTool",
                                        "id": "get_sample_info",
                                        "inputs": [
                                            {
                                                "type": {
                                                    "type": "record",
                                                    "fields": [
                                                        {
                                                            "type": "string",
                                                            "name": "CN"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "name": "LB"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "name": "ID"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "name": "PL"
                                                        },
                                                        {
                                                            "type": {
                                                                "type": "array",
                                                                "items": "string"
                                                            },
                                                            "name": "PU"
                                                        },
                                                        {
                                                            "type": {
                                                                "type": "array",
                                                                "items": "File"
                                                            },
                                                            "name": "R1"
                                                        },
                                                        {
                                                            "type": {
                                                                "type": "array",
                                                                "items": "File"
                                                            },
                                                            "name": "R2"
                                                        },
                                                        {
                                                            "type": {
                                                                "type": "array",
                                                                "items": "File"
                                                            },
                                                            "name": "zR1"
                                                        },
                                                        {
                                                            "type": {
                                                                "type": "array",
                                                                "items": "File"
                                                            },
                                                            "name": "zR2"
                                                        },
                                                        {
                                                            "type": {
                                                                "type": "array",
                                                                "items": "File"
                                                            },
                                                            "name": "bam"
                                                        },
                                                        {
                                                            "type": {
                                                                "type": "array",
                                                                "items": "string"
                                                            },
                                                            "name": "RG_ID"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "name": "adapter"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "name": "adapter2"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "name": "bwa_output"
                                                        }
                                                    ]
                                                },
                                                "id": "sample"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "string",
                                                "id": "CN"
                                            },
                                            {
                                                "type": "string",
                                                "id": "LB"
                                            },
                                            {
                                                "type": "string",
                                                "id": "ID"
                                            },
                                            {
                                                "type": "string",
                                                "id": "PL"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string"
                                                },
                                                "id": "PU"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                },
                                                "id": "zPU"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "id": "R1"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "id": "R2"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "id": "zR1"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "id": "zR2"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "id": "bam"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string"
                                                },
                                                "id": "RG_ID"
                                            },
                                            {
                                                "type": "string",
                                                "id": "adapter"
                                            },
                                            {
                                                "type": "string",
                                                "id": "adapter2"
                                            },
                                            {
                                                "type": "string",
                                                "id": "bwa_output"
                                            }
                                        ],
                                        "expression": "${ var sample_object = {}; for(var key in inputs.sample){ sample_object[key] = inputs.sample[key] } sample_object['zPU'] = []; if(sample_object['zR1'].length != 0 && sample_object['zR2'].length != 0 ){ sample_object['zPU'] = [sample_object['PU']]; } return sample_object; }",
                                        "requirements": []
                                    },
                                    "id": "get_sample_info"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "Workflow",
                                        "id": "resolve-pdx",
                                        "requirements": [
                                            {
                                                "class": "StepInputExpressionRequirement"
                                            },
                                            {
                                                "class": "MultipleInputFeatureRequirement"
                                            },
                                            {
                                                "class": "ScatterFeatureRequirement"
                                            },
                                            {
                                                "class": "SubworkflowFeatureRequirement"
                                            },
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "id": "r1"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "id": "r2"
                                            },
                                            {
                                                "type": "string",
                                                "id": "sample_id"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string"
                                                },
                                                "id": "lane_id"
                                            },
                                            {
                                                "type": "File",
                                                "secondaryFiles": [
                                                    ".amb",
                                                    ".ann",
                                                    ".bwt",
                                                    ".pac",
                                                    ".sa",
                                                    ".fai"
                                                ],
                                                "id": "mouse_reference"
                                            },
                                            {
                                                "type": "File",
                                                "secondaryFiles": [
                                                    ".amb",
                                                    ".ann",
                                                    ".bwt",
                                                    ".pac",
                                                    ".sa",
                                                    ".fai"
                                                ],
                                                "id": "human_reference"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputSource": "run_disambiguate/disambiguate_a_bam",
                                                "id": "disambiguate_bam"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "run_disambiguate/summary",
                                                "id": "summary"
                                            }
                                        ],
                                        "steps": [
                                            {
                                                "run": {
                                                    "class": "Workflow",
                                                    "cwlVersion": "v1.0",
                                                    "id": "align_sample",
                                                    "label": "align_sample",
                                                    "inputs": [
                                                        {
                                                            "id": "reference_sequence",
                                                            "type": "File",
                                                            "secondaryFiles": [
                                                                ".amb",
                                                                ".ann",
                                                                ".bwt",
                                                                ".pac",
                                                                ".sa",
                                                                ".fai"
                                                            ]
                                                        },
                                                        {
                                                            "id": "r1",
                                                            "type": {
                                                                "type": "array",
                                                                "items": "File"
                                                            }
                                                        },
                                                        {
                                                            "id": "r2",
                                                            "type": {
                                                                "type": "array",
                                                                "items": "File"
                                                            }
                                                        },
                                                        {
                                                            "id": "sample_id",
                                                            "type": "string"
                                                        },
                                                        {
                                                            "id": "lane_id",
                                                            "type": {
                                                                "type": "array",
                                                                "items": "string"
                                                            }
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "id": "sample_id_output",
                                                            "outputSource": [
                                                                "bwa_sort/sample_id_output"
                                                            ],
                                                            "type": [
                                                                "string",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "id": "output_md_metrics",
                                                            "outputSource": [
                                                                "gatk_markduplicatesgatk/output_md_metrics"
                                                            ],
                                                            "type": "File"
                                                        },
                                                        {
                                                            "id": "output_merge_sort_bam",
                                                            "outputSource": [
                                                                "samtools_merge/output_file"
                                                            ],
                                                            "type": "File"
                                                        },
                                                        {
                                                            "id": "output_md_bam",
                                                            "outputSource": [
                                                                "gatk_markduplicatesgatk/output_md_bam"
                                                            ],
                                                            "type": "File"
                                                        }
                                                    ],
                                                    "steps": [
                                                        {
                                                            "id": "samtools_merge",
                                                            "in": [
                                                                {
                                                                    "id": "input_bams",
                                                                    "source": [
                                                                        "bwa_sort/output_file"
                                                                    ]
                                                                }
                                                            ],
                                                            "out": [
                                                                {
                                                                    "id": "output_file"
                                                                }
                                                            ],
                                                            "run": {
                                                                "class": "CommandLineTool",
                                                                "cwlVersion": "v1.0",
                                                                "baseCommand": [
                                                                    "samtools",
                                                                    "merge"
                                                                ],
                                                                "inputs": [
                                                                    {
                                                                        "id": "input_bams",
                                                                        "type": {
                                                                            "type": "array",
                                                                            "items": "File"
                                                                        },
                                                                        "inputBinding": {
                                                                            "position": 2
                                                                        },
                                                                        "doc": "Input array containing files to be merged"
                                                                    }
                                                                ],
                                                                "outputs": [
                                                                    {
                                                                        "id": "output_file",
                                                                        "type": "File",
                                                                        "outputBinding": {
                                                                            "glob": "*merged.bam"
                                                                        }
                                                                    }
                                                                ],
                                                                "arguments": [
                                                                    {
                                                                        "position": 0,
                                                                        "valueFrom": "$(inputs.input_bams[0].basename.replace('bam', 'merged.bam'))"
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "-test"
                                                                    }
                                                                ],
                                                                "requirements": [
                                                                    {
                                                                        "class": "ResourceRequirement",
                                                                        "ramMin": 32000,
                                                                        "coresMin": 4
                                                                    },
                                                                    {
                                                                        "class": "DockerRequirement",
                                                                        "dockerPull": "mjblow/samtools-1.9:latest"
                                                                    },
                                                                    {
                                                                        "class": "InlineJavascriptRequirement"
                                                                    }
                                                                ],
                                                                "dct:contributor": {
                                                                    "foaf:mbox": "mailto:bolipatc@mskcc.org",
                                                                    "foaf:name": "C. Allan Bolipata"
                                                                },
                                                                "dct:creator": {
                                                                    "foaf:mbox": "mailto:bolipatc@mskcc.org",
                                                                    "foaf:name": "C. Allan Bolipata"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "id": "bwa_sort",
                                                            "in": [
                                                                {
                                                                    "id": "r1",
                                                                    "source": "r1"
                                                                },
                                                                {
                                                                    "id": "r2",
                                                                    "source": "r2"
                                                                },
                                                                {
                                                                    "id": "reference_sequence",
                                                                    "source": "reference_sequence"
                                                                },
                                                                {
                                                                    "id": "read_pair",
                                                                    "valueFrom": "${ var data = []; data.push(inputs.r1); data.push(inputs.r2); return data; }"
                                                                },
                                                                {
                                                                    "id": "sample_id",
                                                                    "source": "sample_id"
                                                                },
                                                                {
                                                                    "id": "lane_id",
                                                                    "source": "lane_id"
                                                                }
                                                            ],
                                                            "out": [
                                                                {
                                                                    "id": "output_file"
                                                                },
                                                                {
                                                                    "id": "sample_id_output"
                                                                },
                                                                {
                                                                    "id": "lane_id_output"
                                                                }
                                                            ],
                                                            "run": {
                                                                "class": "Workflow",
                                                                "cwlVersion": "v1.0",
                                                                "id": "bwa_sort",
                                                                "label": "bwa_sort",
                                                                "inputs": [
                                                                    {
                                                                        "id": "reference_sequence",
                                                                        "type": "File",
                                                                        "secondaryFiles": [
                                                                            ".amb",
                                                                            ".ann",
                                                                            ".bwt",
                                                                            ".pac",
                                                                            ".sa",
                                                                            ".fai"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "id": "read_pair",
                                                                        "type": {
                                                                            "type": "array",
                                                                            "items": "File"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "sample_id",
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "id": "lane_id",
                                                                        "type": "string"
                                                                    }
                                                                ],
                                                                "outputs": [
                                                                    {
                                                                        "id": "output_file",
                                                                        "outputSource": [
                                                                            "samtools_sort/output_file"
                                                                        ],
                                                                        "type": "File"
                                                                    },
                                                                    {
                                                                        "id": "sample_id_output",
                                                                        "outputSource": [
                                                                            "sample_id"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "id": "lane_id_output",
                                                                        "outputSource": [
                                                                            "lane_id"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                ],
                                                                "steps": [
                                                                    {
                                                                        "id": "bwa_mem",
                                                                        "in": [
                                                                            {
                                                                                "id": "reads",
                                                                                "source": [
                                                                                    "read_pair"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "id": "reference",
                                                                                "source": "reference_sequence"
                                                                            },
                                                                            {
                                                                                "id": "sample_id",
                                                                                "source": "sample_id"
                                                                            },
                                                                            {
                                                                                "id": "lane_id",
                                                                                "source": "lane_id"
                                                                            }
                                                                        ],
                                                                        "out": [
                                                                            {
                                                                                "id": "output_sam"
                                                                            }
                                                                        ],
                                                                        "run": {
                                                                            "class": "CommandLineTool",
                                                                            "cwlVersion": "v1.0",
                                                                            "baseCommand": [
                                                                                "bwa",
                                                                                "mem"
                                                                            ],
                                                                            "inputs": [
                                                                                {
                                                                                    "id": "reads",
                                                                                    "type": {
                                                                                        "type": "array",
                                                                                        "items": "File"
                                                                                    },
                                                                                    "inputBinding": {
                                                                                        "position": 3
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "reference",
                                                                                    "type": "File",
                                                                                    "inputBinding": {
                                                                                        "position": 2
                                                                                    },
                                                                                    "secondaryFiles": [
                                                                                        ".amb",
                                                                                        ".ann",
                                                                                        ".bwt",
                                                                                        ".pac",
                                                                                        ".sa",
                                                                                        ".fai"
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "id": "sample_id",
                                                                                    "type": "string"
                                                                                },
                                                                                {
                                                                                    "id": "lane_id",
                                                                                    "type": "string"
                                                                                },
                                                                                {
                                                                                    "id": "A",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-A"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "B",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-B"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "C",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-C"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "E",
                                                                                    "type": [
                                                                                        "null",
                                                                                        {
                                                                                            "type": "array",
                                                                                            "items": "int"
                                                                                        }
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-E",
                                                                                        "itemSeparator": ","
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "L",
                                                                                    "type": [
                                                                                        "null",
                                                                                        {
                                                                                            "type": "array",
                                                                                            "items": "int"
                                                                                        }
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-L",
                                                                                        "itemSeparator": ","
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "M",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-M"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "O",
                                                                                    "type": [
                                                                                        "null",
                                                                                        {
                                                                                            "type": "array",
                                                                                            "items": "int"
                                                                                        }
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-O",
                                                                                        "itemSeparator": ","
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "P",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-P"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "S",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-S"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "T",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-T"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "U",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-U"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "a",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-a"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "c",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-c"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "d",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-d"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "k",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-k"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "output",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "id": "p",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-p"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "r",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "float"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-r"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "v",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-v"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "w",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-w"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "y",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-y"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "D",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "float"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-D"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "W",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-W"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "m",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-m"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "e",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-e"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "x",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-x"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "H",
                                                                                    "type": [
                                                                                        [
                                                                                            "null",
                                                                                            "File"
                                                                                        ],
                                                                                        [
                                                                                            "null",
                                                                                            "string"
                                                                                        ]
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-H"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "j",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-j"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "h",
                                                                                    "type": [
                                                                                        "null",
                                                                                        {
                                                                                            "type": "array",
                                                                                            "items": "int"
                                                                                        }
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-h",
                                                                                        "itemSeparator": ","
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "V",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-V"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "Y",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-Y"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "I",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-M"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "outputs": [
                                                                                {
                                                                                    "id": "output_sam",
                                                                                    "type": "File",
                                                                                    "outputBinding": {
                                                                                        "glob": "$(inputs.reads[0].basename.replace('fastq.gz', 'sam'))"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "arguments": [
                                                                                {
                                                                                    "position": 0,
                                                                                    "prefix": "-R",
                                                                                    "valueFrom": "@RG\\\\tID:$(inputs.lane_id)\\\\tSM:$(inputs.sample_id)\\\\tLB:$(inputs.sample_id)\\\\tPL:Illumina\\\\tPU:$(inputs.lane_id)"
                                                                                },
                                                                                {
                                                                                    "position": 0,
                                                                                    "prefix": "-t",
                                                                                    "valueFrom": "$(runtime.cores)"
                                                                                }
                                                                            ],
                                                                            "requirements": [
                                                                                {
                                                                                    "class": "ResourceRequirement",
                                                                                    "ramMin": 32000,
                                                                                    "coresMin": 4
                                                                                },
                                                                                {
                                                                                    "class": "DockerRequirement",
                                                                                    "dockerPull": "mskcc/bwa_mem:0.7.12"
                                                                                },
                                                                                {
                                                                                    "class": "InlineJavascriptRequirement"
                                                                                }
                                                                            ],
                                                                            "stdout": "$(inputs.reads[0].basename.replace('fastq.gz', 'sam'))"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "samtools_sort",
                                                                        "in": [
                                                                            {
                                                                                "id": "input",
                                                                                "source": "sam_to_bam/output_bam"
                                                                            }
                                                                        ],
                                                                        "out": [
                                                                            {
                                                                                "id": "output_file"
                                                                            }
                                                                        ],
                                                                        "run": {
                                                                            "class": "CommandLineTool",
                                                                            "cwlVersion": "v1.0",
                                                                            "baseCommand": [
                                                                                "/usr/bin/samtools",
                                                                                "sort"
                                                                            ],
                                                                            "id": "samtools-sort",
                                                                            "inputs": [
                                                                                {
                                                                                    "id": "compression_level",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-l"
                                                                                    },
                                                                                    "doc": "Set compression level, from 0 (uncompressed) to 9 (best)\n"
                                                                                },
                                                                                {
                                                                                    "id": "input",
                                                                                    "type": "File",
                                                                                    "inputBinding": {
                                                                                        "position": 1
                                                                                    },
                                                                                    "doc": "Input bam file."
                                                                                },
                                                                                {
                                                                                    "id": "memory",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-m"
                                                                                    },
                                                                                    "doc": "Set maximum memory per thread; suffix K/M/G recognized [768M]\n"
                                                                                },
                                                                                {
                                                                                    "id": "sort_by_name",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-n"
                                                                                    },
                                                                                    "doc": "Sort by read names (i.e., the QNAME field) rather than by chromosomal coordinates."
                                                                                },
                                                                                {
                                                                                    "id": "reference",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "--reference"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "output_format",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-O"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "outputs": [
                                                                                {
                                                                                    "id": "output_file",
                                                                                    "type": "File",
                                                                                    "outputBinding": {
                                                                                        "glob": "$(inputs.input.basename.replace('bam', 'sorted.bam'))"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "doc": "Sort alignments by leftmost coordinates, or by read name when -n is used. An appropriate @HD-SO sort order header tag will be added or an existing one updated if necessary.\n\nUsage: samtools sort [-l level] [-m maxMem] [-o out.bam] [-O format] [-n] -T out.prefix [-@ threads] [in.bam]\n\nOptions:\n-l INT\nSet the desired compression level for the final output file, ranging from 0 (uncompressed) or 1 (fastest but minimal compression) to 9 (best compression but slowest to write), similarly to gzip(1)'s compression level setting.\n\nIf -l is not used, the default compression level will apply.\n\n-m INT\nApproximately the maximum required memory per thread, specified either in bytes or with a K, M, or G suffix. [768 MiB]\n\n-n\nSort by read names (i.e., the QNAME field) rather than by chromosomal coordinates.\n\n-o FILE\nWrite the final sorted output to FILE, rather than to standard output.\n\n-O FORMAT\nWrite the final output as sam, bam, or cram.\n\nBy default, samtools tries to select a format based on the -o filename extension; if output is to standard output or no format can be deduced, -O must be used.\n\n-T PREFIX\nWrite temporary files to PREFIX.nnnn.bam. This option is required.\n\n-@ INT\nSet number of sorting and compression threads. By default, operation is single-threaded\n",
                                                                            "arguments": [
                                                                                {
                                                                                    "position": 0,
                                                                                    "prefix": "-o",
                                                                                    "valueFrom": "$(inputs.input.basename.replace('bam', 'sorted.bam'))"
                                                                                },
                                                                                {
                                                                                    "position": 0,
                                                                                    "prefix": "-@",
                                                                                    "valueFrom": "$(runtime.cores)"
                                                                                }
                                                                            ],
                                                                            "requirements": [
                                                                                {
                                                                                    "class": "ResourceRequirement",
                                                                                    "ramMin": 32000,
                                                                                    "coresMin": 4
                                                                                },
                                                                                {
                                                                                    "class": "DockerRequirement",
                                                                                    "dockerPull": "mskcc/roslin-variant-samtools:1.3.1"
                                                                                },
                                                                                {
                                                                                    "class": "InlineJavascriptRequirement"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "sam_to_bam",
                                                                        "in": [
                                                                            {
                                                                                "id": "input",
                                                                                "source": "bwa_mem/output_sam"
                                                                            }
                                                                        ],
                                                                        "out": [
                                                                            {
                                                                                "id": "output_bam"
                                                                            }
                                                                        ],
                                                                        "run": {
                                                                            "class": "CommandLineTool",
                                                                            "cwlVersion": "v1.0",
                                                                            "baseCommand": [
                                                                                "/usr/bin/samtools",
                                                                                "view"
                                                                            ],
                                                                            "id": "samtools-view",
                                                                            "inputs": [
                                                                                {
                                                                                    "id": "bedoverlap",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-L"
                                                                                    },
                                                                                    "doc": "only include reads overlapping this BED FILE [null]\n"
                                                                                },
                                                                                {
                                                                                    "id": "cigar",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-m"
                                                                                    },
                                                                                    "doc": "only include reads with number of CIGAR operations\nconsuming query sequence >= INT [0]\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "collapsecigar",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-B"
                                                                                    },
                                                                                    "doc": "collapse the backward CIGAR operation\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "count",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-c"
                                                                                    },
                                                                                    "doc": "print only the count of matching records\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "fastcompression",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-1"
                                                                                    },
                                                                                    "doc": "use fast BAM compression (implies -b)\n"
                                                                                },
                                                                                {
                                                                                    "id": "input",
                                                                                    "type": "File",
                                                                                    "inputBinding": {
                                                                                        "position": 4
                                                                                    },
                                                                                    "doc": "Input bam file.\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "isbam",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 2,
                                                                                        "prefix": "-b"
                                                                                    },
                                                                                    "doc": "output in BAM format\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "iscram",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 2,
                                                                                        "prefix": "-C"
                                                                                    },
                                                                                    "doc": "output in CRAM format\n"
                                                                                },
                                                                                {
                                                                                    "id": "randomseed",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "float"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-s"
                                                                                    },
                                                                                    "doc": "integer part sets seed of random number generator [0];\nrest sets fraction of templates to subsample [no subsampling]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readsingroup",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-r"
                                                                                    },
                                                                                    "doc": "only include reads in read group STR [null]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readsingroupfile",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-R"
                                                                                    },
                                                                                    "doc": "only include reads with read group listed in FILE [null]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readsinlibrary",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-l"
                                                                                    },
                                                                                    "doc": "only include reads in library STR [null]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readsquality",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-q"
                                                                                    },
                                                                                    "doc": "only include reads with mapping quality >= INT [0]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readswithbits",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-f"
                                                                                    },
                                                                                    "doc": "only include reads with all bits set in INT set in FLAG [0]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readswithoutbits",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-F"
                                                                                    },
                                                                                    "doc": "only include reads with none of the bits set in INT set in FLAG [0]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readtagtostrip",
                                                                                    "type": [
                                                                                        "null",
                                                                                        {
                                                                                            "type": "array",
                                                                                            "items": "string"
                                                                                        }
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-x"
                                                                                    },
                                                                                    "doc": "read tag to strip (repeatable) [null]\n"
                                                                                },
                                                                                {
                                                                                    "id": "referencefasta",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-T"
                                                                                    },
                                                                                    "doc": "reference sequence FASTA FILE [null]\n"
                                                                                },
                                                                                {
                                                                                    "id": "region",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 5
                                                                                    },
                                                                                    "doc": "[region ...]\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "samheader",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-h"
                                                                                    },
                                                                                    "doc": "include header in SAM output\n"
                                                                                },
                                                                                {
                                                                                    "id": "threads",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-@"
                                                                                    },
                                                                                    "doc": "number of BAM compression threads [0]\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "uncompressed",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-u"
                                                                                    },
                                                                                    "doc": "uncompressed BAM output (implies -b)\n"
                                                                                },
                                                                                {
                                                                                    "id": "samheaderonly",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-H"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "outputreadsnotselectedbyfilters",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-U"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "listingreferencenamesandlengths",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-t"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "readtagtostri",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-x"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "output_format",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-O"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "outputs": [
                                                                                {
                                                                                    "id": "output_bam",
                                                                                    "type": "File",
                                                                                    "outputBinding": {
                                                                                        "glob": "$(inputs.input.basename.replace('sam', 'bam'))"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "doc": "Prints alignments in the specified input alignment file.\n\nWith no options or regions specified, prints all alignments in the specified input alignment file (in SAM, BAM, or CRAM format) to standard output in SAM format (with no header).\n\nYou may specify one or more space-separated region specifications after the input filename to restrict output to only those alignments which overlap the specified region(s). Use of region specifications requires a coordinate-sorted and indexed input file (in BAM or CRAM format).\n\nThe -b, -C, -1, -u, -h, -H, and -c options change the output format from the default of headerless SAM, and the -o and -U options set the output file name(s).\n\nThe -t and -T options provide additional reference data. One of these two options is required when SAM input does not contain @SQ headers, and the -T option is required whenever writing CRAM output.\n\nThe -L, -r, -R, -q, -l, -m, -f, and -F options filter the alignments that will be included in the output to only those alignments that match certain criteria.\n\nThe -x, -B, and -s options modify the data which is contained in each alignment.\n\nFinally, the -@ option can be used to allocate additional threads to be used for compression, and the -? option requests a long help message.\n\nUsage: samtools view [options] in.bam|in.sam|in.cram [region...]\n\nRegions can be specified as: RNAME[:STARTPOS[-ENDPOS]] and all position coordinates are 1-based.\n\nImportant note: when multiple regions are given, some alignments may be output multiple times if they overlap more than one of the specified regions.\n\nExamples of region specifications:\n\n`chr1'\nOutput all alignments mapped to the reference sequence named `chr1' (i.e. @SQ SN:chr1) .\n\n`chr2:1000000'\nThe region on chr2 beginning at base position 1,000,000 and ending at the end of the chromosome.\n\n`chr3:1000-2000'\nThe 1001bp region on chr3 beginning at base position 1,000 and ending at base position 2,000 (including both end positions).\n\nOPTIONS:\n\n-b\nOutput in the BAM format.\n\n-C\nOutput in the CRAM format (requires -T).\n\n-1\nEnable fast BAM compression (implies -b).\n\n-u\nOutput uncompressed BAM. This option saves time spent on compression/decompression and is thus preferred when the output is piped to another samtools command.\n\n-h\nInclude the header in the output.\n\n-H\nOutput the header only.\n\n-c\nInstead of printing the alignments, only count them and print the total number. All filter options, such as -f, -F, and -q, are taken into account.\n\n-?\nOutput long help and exit immediately.\n\n-o FILE\nOutput to FILE [stdout].\n\n-U FILE\nWrite alignments that are not selected by the various filter options to FILE. When this option is used, all alignments (or all alignments intersecting the regions specified) are written to either the output file or this file, but never both.\n\n-t FILE\nA tab-delimited FILE. Each line must contain the reference name in the first column and the length of the reference in the second column, with one line for each distinct reference. Any additional fields beyond the second column are ignored. This file also defines the order of the reference sequences in sorting. If you run: `samtools faidx <ref.fa>', the resulting index file <ref.fa>.fai can be used as this FILE.\n\n-T FILE\nA FASTA format reference FILE, optionally compressed by bgzip and ideally indexed by samtools faidx. If an index is not present, one will be generated for you.\n\n-L FILE\nOnly output alignments overlapping the input BED FILE [null].\n\n-r STR\nOnly output alignments in read group STR [null].\n\n-R FILE\nOutput alignments in read groups listed in FILE [null].\n\n-q INT\nSkip alignments with MAPQ smaller than INT [0].\n\n-l STR\nOnly output alignments in library STR [null].\n\n-m INT\nOnly output alignments with number of CIGAR bases consuming query sequence \ufffd\ufffd\ufffd INT [0]\n\n-f INT\nOnly output alignments with all bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x' (i.e. /^0x[0-9A-F]+/) or in octal by beginning with `0' (i.e. /^0[0-7]+/) [0].\n\n-F INT\nDo not output alignments with any bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x' (i.e. /^0x[0-9A-F]+/) or in octal by beginning with `0' (i.e. /^0[0-7]+/) [0].\n\n-x STR\nRead tag to exclude from output (repeatable) [null]\n\n-B\nCollapse the backward CIGAR operation.\n\n-s FLOAT\nInteger part is used to seed the random number generator [0]. Part after the decimal point sets the fraction of templates/pairs to subsample [no subsampling].\n\n-@ INT\nNumber of BAM compression threads to use in addition to main thread [0].\n\n-S\nIgnored for compatibility with previous samtools versions. Previously this option was required if input was in SAM format, but now the correct format is automatically detected by examining the first few characters of input.\n",
                                                                            "arguments": [
                                                                                {
                                                                                    "position": 0,
                                                                                    "prefix": "-o",
                                                                                    "valueFrom": "$(inputs.input.basename.replace('sam', 'bam'))"
                                                                                },
                                                                                {
                                                                                    "position": 0,
                                                                                    "prefix": "--threads",
                                                                                    "valueFrom": "$(runtime.cores)"
                                                                                }
                                                                            ],
                                                                            "requirements": [
                                                                                {
                                                                                    "class": "ResourceRequirement",
                                                                                    "ramMin": 32000,
                                                                                    "coresMin": 4
                                                                                },
                                                                                {
                                                                                    "class": "DockerRequirement",
                                                                                    "dockerPull": "mskcc/roslin-variant-samtools:1.3.1"
                                                                                },
                                                                                {
                                                                                    "class": "InlineJavascriptRequirement"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ],
                                                                "requirements": []
                                                            },
                                                            "label": "bwa_sort",
                                                            "scatter": [
                                                                "r1",
                                                                "r2",
                                                                "lane_id"
                                                            ],
                                                            "scatterMethod": "dotproduct"
                                                        },
                                                        {
                                                            "id": "gatk_markduplicatesgatk",
                                                            "in": [
                                                                {
                                                                    "id": "input",
                                                                    "source": "samtools_merge/output_file"
                                                                }
                                                            ],
                                                            "out": [
                                                                {
                                                                    "id": "output_md_bam"
                                                                },
                                                                {
                                                                    "id": "output_md_metrics"
                                                                }
                                                            ],
                                                            "run": {
                                                                "class": "CommandLineTool",
                                                                "cwlVersion": "v1.0",
                                                                "id": "gatk_markduplicates",
                                                                "baseCommand": [
                                                                    "gatk",
                                                                    "MarkDuplicates"
                                                                ],
                                                                "inputs": [
                                                                    {
                                                                        "id": "input",
                                                                        "type": "File",
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--INPUT"
                                                                        },
                                                                        "doc": "Input BAM file"
                                                                    },
                                                                    {
                                                                        "id": "arguments_file",
                                                                        "type": [
                                                                            "null",
                                                                            "File"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--arguments_file"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "assume_sort_order",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--ASSUME_SORT_ORDER"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "assume_sorted",
                                                                        "type": [
                                                                            "null",
                                                                            "boolean"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--ASSUME_SORTED"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "barcode_tag",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--BARCODE_TAG"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "clear_dt",
                                                                        "type": [
                                                                            "null",
                                                                            "boolean"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--CLEAR_DT"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "comment",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--COMMENT"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "duplex_umi",
                                                                        "type": [
                                                                            "null",
                                                                            "boolean"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--DUPLEX_UMI"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "duplicate_scoring_strategy",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--DUPLICATE_SCORING_STRATEGY"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "max_file_hendles_for_read_ends_map",
                                                                        "type": [
                                                                            "null",
                                                                            "int"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--MAX_FILE_HANDLES_FOR_READ_ENDS_MAP"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "max_optical_duplicate_set_size",
                                                                        "type": [
                                                                            "null",
                                                                            "float"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--MAX_OPTICAL_DUPLICATE_SET_SIZE"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "max_sequences_for_disk_read_ends_map",
                                                                        "type": [
                                                                            "null",
                                                                            "int"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "molecular_identifier_tag",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--MOLECULAR_IDENTIFIER_TAG"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "optical_duplicate_pixel_distance",
                                                                        "type": [
                                                                            "null",
                                                                            "int"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--OPTICAL_DUPLICATE_PIXEL_DISTANCE"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "program_group_command_line",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--PROGRAM_GROUP_COMMAND_LINE"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "program_group_name",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--PROGRAM_GROUP_NAME"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "program_group_version",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--PROGRAM_GROUP_VERSION"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "program_record_id",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--PROGRAM_RECORD_ID"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "read_name_regex",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--READ_NAME_REGEX"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "read_one_barcode_tag",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--READ_ONE_BARCODE_TAG"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "read_two_barcode_tag",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--READ_TWO_BARCODE_TAG"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "remove_duplicates",
                                                                        "type": [
                                                                            "null",
                                                                            "boolean"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--REMOVE_DUPLICATES"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "remove_sequencing_duplicates",
                                                                        "type": [
                                                                            "null",
                                                                            "boolean"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--REMOVE_SEQUENCING_DUPLICATES"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "sorting_collection_size_ratio",
                                                                        "type": [
                                                                            "null",
                                                                            "float"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--SORTING_COLLECTION_SIZE_RATIO"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "tag_duplicate_set_members",
                                                                        "type": [
                                                                            "null",
                                                                            "boolean"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--TAG_DUPLICATE_SET_MEMBERS"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "tagging_policy",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--TAGGING_POLICY"
                                                                        }
                                                                    }
                                                                ],
                                                                "outputs": [
                                                                    {
                                                                        "id": "output_md_bam",
                                                                        "doc": "Output marked duplicate bam",
                                                                        "type": "File",
                                                                        "outputBinding": {
                                                                            "glob": "$(inputs.input.basename.replace('md.bam', 'bam'))"
                                                                        },
                                                                        "secondaryFiles": [
                                                                            "^.bai"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "id": "output_md_metrics",
                                                                        "doc": "Output marked duplicate metrics",
                                                                        "type": "File",
                                                                        "outputBinding": {
                                                                            "glob": "$(inputs.input.basename.replace('bam', 'md.metrics'))"
                                                                        }
                                                                    }
                                                                ],
                                                                "label": "GATK MarkDuplicates",
                                                                "arguments": [
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--OUTPUT",
                                                                        "valueFrom": "$(inputs.input.basename.replace('md.bam', 'bam'))"
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--METRICS_FILE",
                                                                        "valueFrom": "$(inputs.input.basename.replace('bam', 'md.metrics'))"
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--TMP_DIR",
                                                                        "valueFrom": "."
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--ASSUME_SORT_ORDER",
                                                                        "valueFrom": "coordinate"
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--CREATE_INDEX",
                                                                        "valueFrom": "true"
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--MAX_RECORDS_IN_RAM",
                                                                        "valueFrom": "50000"
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--java-options",
                                                                        "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G -Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G"
                                                                    }
                                                                ],
                                                                "requirements": [
                                                                    {
                                                                        "class": "ResourceRequirement",
                                                                        "ramMin": 42000,
                                                                        "coresMin": 1
                                                                    },
                                                                    {
                                                                        "class": "DockerRequirement",
                                                                        "dockerPull": "broadinstitute/gatk:4.1.0.0"
                                                                    },
                                                                    {
                                                                        "class": "InlineJavascriptRequirement"
                                                                    }
                                                                ]
                                                            },
                                                            "label": "GATK MarkDuplicates"
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "SubworkflowFeatureRequirement"
                                                        },
                                                        {
                                                            "class": "ScatterFeatureRequirement"
                                                        },
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "class": "StepInputExpressionRequirement"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "sample_id",
                                                        "id": "prefix"
                                                    },
                                                    {
                                                        "source": "human_reference",
                                                        "id": "reference_sequence"
                                                    },
                                                    {
                                                        "source": "r1",
                                                        "id": "r1"
                                                    },
                                                    {
                                                        "source": "r2",
                                                        "id": "r2"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.prefix + \"_human\"; }",
                                                        "id": "sample_id"
                                                    },
                                                    {
                                                        "source": "lane_id",
                                                        "id": "lane_id"
                                                    }
                                                ],
                                                "out": [
                                                    "output_merge_sort_bam"
                                                ],
                                                "id": "align_to_human"
                                            },
                                            {
                                                "run": {
                                                    "class": "Workflow",
                                                    "cwlVersion": "v1.0",
                                                    "id": "align_sample",
                                                    "label": "align_sample",
                                                    "inputs": [
                                                        {
                                                            "id": "reference_sequence",
                                                            "type": "File",
                                                            "secondaryFiles": [
                                                                ".amb",
                                                                ".ann",
                                                                ".bwt",
                                                                ".pac",
                                                                ".sa",
                                                                ".fai"
                                                            ]
                                                        },
                                                        {
                                                            "id": "r1",
                                                            "type": {
                                                                "type": "array",
                                                                "items": "File"
                                                            }
                                                        },
                                                        {
                                                            "id": "r2",
                                                            "type": {
                                                                "type": "array",
                                                                "items": "File"
                                                            }
                                                        },
                                                        {
                                                            "id": "sample_id",
                                                            "type": "string"
                                                        },
                                                        {
                                                            "id": "lane_id",
                                                            "type": {
                                                                "type": "array",
                                                                "items": "string"
                                                            }
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "id": "sample_id_output",
                                                            "outputSource": [
                                                                "bwa_sort/sample_id_output"
                                                            ],
                                                            "type": [
                                                                "string",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "id": "output_md_metrics",
                                                            "outputSource": [
                                                                "gatk_markduplicatesgatk/output_md_metrics"
                                                            ],
                                                            "type": "File"
                                                        },
                                                        {
                                                            "id": "output_merge_sort_bam",
                                                            "outputSource": [
                                                                "samtools_merge/output_file"
                                                            ],
                                                            "type": "File"
                                                        },
                                                        {
                                                            "id": "output_md_bam",
                                                            "outputSource": [
                                                                "gatk_markduplicatesgatk/output_md_bam"
                                                            ],
                                                            "type": "File"
                                                        }
                                                    ],
                                                    "steps": [
                                                        {
                                                            "id": "samtools_merge",
                                                            "in": [
                                                                {
                                                                    "id": "input_bams",
                                                                    "source": [
                                                                        "bwa_sort/output_file"
                                                                    ]
                                                                }
                                                            ],
                                                            "out": [
                                                                {
                                                                    "id": "output_file"
                                                                }
                                                            ],
                                                            "run": {
                                                                "class": "CommandLineTool",
                                                                "cwlVersion": "v1.0",
                                                                "baseCommand": [
                                                                    "samtools",
                                                                    "merge"
                                                                ],
                                                                "inputs": [
                                                                    {
                                                                        "id": "input_bams",
                                                                        "type": {
                                                                            "type": "array",
                                                                            "items": "File"
                                                                        },
                                                                        "inputBinding": {
                                                                            "position": 2
                                                                        },
                                                                        "doc": "Input array containing files to be merged"
                                                                    }
                                                                ],
                                                                "outputs": [
                                                                    {
                                                                        "id": "output_file",
                                                                        "type": "File",
                                                                        "outputBinding": {
                                                                            "glob": "*merged.bam"
                                                                        }
                                                                    }
                                                                ],
                                                                "arguments": [
                                                                    {
                                                                        "position": 0,
                                                                        "valueFrom": "$(inputs.input_bams[0].basename.replace('bam', 'merged.bam'))"
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "-test"
                                                                    }
                                                                ],
                                                                "requirements": [
                                                                    {
                                                                        "class": "ResourceRequirement",
                                                                        "ramMin": 32000,
                                                                        "coresMin": 4
                                                                    },
                                                                    {
                                                                        "class": "DockerRequirement",
                                                                        "dockerPull": "mjblow/samtools-1.9:latest"
                                                                    },
                                                                    {
                                                                        "class": "InlineJavascriptRequirement"
                                                                    }
                                                                ],
                                                                "dct:contributor": {
                                                                    "foaf:mbox": "mailto:bolipatc@mskcc.org",
                                                                    "foaf:name": "C. Allan Bolipata"
                                                                },
                                                                "dct:creator": {
                                                                    "foaf:mbox": "mailto:bolipatc@mskcc.org",
                                                                    "foaf:name": "C. Allan Bolipata"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "id": "bwa_sort",
                                                            "in": [
                                                                {
                                                                    "id": "r1",
                                                                    "source": "r1"
                                                                },
                                                                {
                                                                    "id": "r2",
                                                                    "source": "r2"
                                                                },
                                                                {
                                                                    "id": "reference_sequence",
                                                                    "source": "reference_sequence"
                                                                },
                                                                {
                                                                    "id": "read_pair",
                                                                    "valueFrom": "${ var data = []; data.push(inputs.r1); data.push(inputs.r2); return data; }"
                                                                },
                                                                {
                                                                    "id": "sample_id",
                                                                    "source": "sample_id"
                                                                },
                                                                {
                                                                    "id": "lane_id",
                                                                    "source": "lane_id"
                                                                }
                                                            ],
                                                            "out": [
                                                                {
                                                                    "id": "output_file"
                                                                },
                                                                {
                                                                    "id": "sample_id_output"
                                                                },
                                                                {
                                                                    "id": "lane_id_output"
                                                                }
                                                            ],
                                                            "run": {
                                                                "class": "Workflow",
                                                                "cwlVersion": "v1.0",
                                                                "id": "bwa_sort",
                                                                "label": "bwa_sort",
                                                                "inputs": [
                                                                    {
                                                                        "id": "reference_sequence",
                                                                        "type": "File",
                                                                        "secondaryFiles": [
                                                                            ".amb",
                                                                            ".ann",
                                                                            ".bwt",
                                                                            ".pac",
                                                                            ".sa",
                                                                            ".fai"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "id": "read_pair",
                                                                        "type": {
                                                                            "type": "array",
                                                                            "items": "File"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "sample_id",
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "id": "lane_id",
                                                                        "type": "string"
                                                                    }
                                                                ],
                                                                "outputs": [
                                                                    {
                                                                        "id": "output_file",
                                                                        "outputSource": [
                                                                            "samtools_sort/output_file"
                                                                        ],
                                                                        "type": "File"
                                                                    },
                                                                    {
                                                                        "id": "sample_id_output",
                                                                        "outputSource": [
                                                                            "sample_id"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    {
                                                                        "id": "lane_id_output",
                                                                        "outputSource": [
                                                                            "lane_id"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                ],
                                                                "steps": [
                                                                    {
                                                                        "id": "bwa_mem",
                                                                        "in": [
                                                                            {
                                                                                "id": "reads",
                                                                                "source": [
                                                                                    "read_pair"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "id": "reference",
                                                                                "source": "reference_sequence"
                                                                            },
                                                                            {
                                                                                "id": "sample_id",
                                                                                "source": "sample_id"
                                                                            },
                                                                            {
                                                                                "id": "lane_id",
                                                                                "source": "lane_id"
                                                                            }
                                                                        ],
                                                                        "out": [
                                                                            {
                                                                                "id": "output_sam"
                                                                            }
                                                                        ],
                                                                        "run": {
                                                                            "class": "CommandLineTool",
                                                                            "cwlVersion": "v1.0",
                                                                            "baseCommand": [
                                                                                "bwa",
                                                                                "mem"
                                                                            ],
                                                                            "inputs": [
                                                                                {
                                                                                    "id": "reads",
                                                                                    "type": {
                                                                                        "type": "array",
                                                                                        "items": "File"
                                                                                    },
                                                                                    "inputBinding": {
                                                                                        "position": 3
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "reference",
                                                                                    "type": "File",
                                                                                    "inputBinding": {
                                                                                        "position": 2
                                                                                    },
                                                                                    "secondaryFiles": [
                                                                                        ".amb",
                                                                                        ".ann",
                                                                                        ".bwt",
                                                                                        ".pac",
                                                                                        ".sa",
                                                                                        ".fai"
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "id": "sample_id",
                                                                                    "type": "string"
                                                                                },
                                                                                {
                                                                                    "id": "lane_id",
                                                                                    "type": "string"
                                                                                },
                                                                                {
                                                                                    "id": "A",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-A"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "B",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-B"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "C",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-C"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "E",
                                                                                    "type": [
                                                                                        "null",
                                                                                        {
                                                                                            "type": "array",
                                                                                            "items": "int"
                                                                                        }
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-E",
                                                                                        "itemSeparator": ","
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "L",
                                                                                    "type": [
                                                                                        "null",
                                                                                        {
                                                                                            "type": "array",
                                                                                            "items": "int"
                                                                                        }
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-L",
                                                                                        "itemSeparator": ","
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "M",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-M"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "O",
                                                                                    "type": [
                                                                                        "null",
                                                                                        {
                                                                                            "type": "array",
                                                                                            "items": "int"
                                                                                        }
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-O",
                                                                                        "itemSeparator": ","
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "P",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-P"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "S",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-S"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "T",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-T"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "U",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-U"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "a",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-a"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "c",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-c"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "d",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-d"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "k",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-k"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "output",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "id": "p",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-p"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "r",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "float"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-r"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "v",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-v"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "w",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-w"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "y",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-y"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "D",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "float"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-D"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "W",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-W"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "m",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-m"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "e",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-e"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "x",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-x"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "H",
                                                                                    "type": [
                                                                                        [
                                                                                            "null",
                                                                                            "File"
                                                                                        ],
                                                                                        [
                                                                                            "null",
                                                                                            "string"
                                                                                        ]
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-H"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "j",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-j"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "h",
                                                                                    "type": [
                                                                                        "null",
                                                                                        {
                                                                                            "type": "array",
                                                                                            "items": "int"
                                                                                        }
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-h",
                                                                                        "itemSeparator": ","
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "V",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-V"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "Y",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-Y"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "I",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-M"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "outputs": [
                                                                                {
                                                                                    "id": "output_sam",
                                                                                    "type": "File",
                                                                                    "outputBinding": {
                                                                                        "glob": "$(inputs.reads[0].basename.replace('fastq.gz', 'sam'))"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "arguments": [
                                                                                {
                                                                                    "position": 0,
                                                                                    "prefix": "-R",
                                                                                    "valueFrom": "@RG\\\\tID:$(inputs.lane_id)\\\\tSM:$(inputs.sample_id)\\\\tLB:$(inputs.sample_id)\\\\tPL:Illumina\\\\tPU:$(inputs.lane_id)"
                                                                                },
                                                                                {
                                                                                    "position": 0,
                                                                                    "prefix": "-t",
                                                                                    "valueFrom": "$(runtime.cores)"
                                                                                }
                                                                            ],
                                                                            "requirements": [
                                                                                {
                                                                                    "class": "ResourceRequirement",
                                                                                    "ramMin": 32000,
                                                                                    "coresMin": 4
                                                                                },
                                                                                {
                                                                                    "class": "DockerRequirement",
                                                                                    "dockerPull": "mskcc/bwa_mem:0.7.12"
                                                                                },
                                                                                {
                                                                                    "class": "InlineJavascriptRequirement"
                                                                                }
                                                                            ],
                                                                            "stdout": "$(inputs.reads[0].basename.replace('fastq.gz', 'sam'))"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "samtools_sort",
                                                                        "in": [
                                                                            {
                                                                                "id": "input",
                                                                                "source": "sam_to_bam/output_bam"
                                                                            }
                                                                        ],
                                                                        "out": [
                                                                            {
                                                                                "id": "output_file"
                                                                            }
                                                                        ],
                                                                        "run": {
                                                                            "class": "CommandLineTool",
                                                                            "cwlVersion": "v1.0",
                                                                            "baseCommand": [
                                                                                "/usr/bin/samtools",
                                                                                "sort"
                                                                            ],
                                                                            "id": "samtools-sort",
                                                                            "inputs": [
                                                                                {
                                                                                    "id": "compression_level",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-l"
                                                                                    },
                                                                                    "doc": "Set compression level, from 0 (uncompressed) to 9 (best)\n"
                                                                                },
                                                                                {
                                                                                    "id": "input",
                                                                                    "type": "File",
                                                                                    "inputBinding": {
                                                                                        "position": 1
                                                                                    },
                                                                                    "doc": "Input bam file."
                                                                                },
                                                                                {
                                                                                    "id": "memory",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-m"
                                                                                    },
                                                                                    "doc": "Set maximum memory per thread; suffix K/M/G recognized [768M]\n"
                                                                                },
                                                                                {
                                                                                    "id": "sort_by_name",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-n"
                                                                                    },
                                                                                    "doc": "Sort by read names (i.e., the QNAME field) rather than by chromosomal coordinates."
                                                                                },
                                                                                {
                                                                                    "id": "reference",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "--reference"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "output_format",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-O"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "outputs": [
                                                                                {
                                                                                    "id": "output_file",
                                                                                    "type": "File",
                                                                                    "outputBinding": {
                                                                                        "glob": "$(inputs.input.basename.replace('bam', 'sorted.bam'))"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "doc": "Sort alignments by leftmost coordinates, or by read name when -n is used. An appropriate @HD-SO sort order header tag will be added or an existing one updated if necessary.\n\nUsage: samtools sort [-l level] [-m maxMem] [-o out.bam] [-O format] [-n] -T out.prefix [-@ threads] [in.bam]\n\nOptions:\n-l INT\nSet the desired compression level for the final output file, ranging from 0 (uncompressed) or 1 (fastest but minimal compression) to 9 (best compression but slowest to write), similarly to gzip(1)'s compression level setting.\n\nIf -l is not used, the default compression level will apply.\n\n-m INT\nApproximately the maximum required memory per thread, specified either in bytes or with a K, M, or G suffix. [768 MiB]\n\n-n\nSort by read names (i.e., the QNAME field) rather than by chromosomal coordinates.\n\n-o FILE\nWrite the final sorted output to FILE, rather than to standard output.\n\n-O FORMAT\nWrite the final output as sam, bam, or cram.\n\nBy default, samtools tries to select a format based on the -o filename extension; if output is to standard output or no format can be deduced, -O must be used.\n\n-T PREFIX\nWrite temporary files to PREFIX.nnnn.bam. This option is required.\n\n-@ INT\nSet number of sorting and compression threads. By default, operation is single-threaded\n",
                                                                            "arguments": [
                                                                                {
                                                                                    "position": 0,
                                                                                    "prefix": "-o",
                                                                                    "valueFrom": "$(inputs.input.basename.replace('bam', 'sorted.bam'))"
                                                                                },
                                                                                {
                                                                                    "position": 0,
                                                                                    "prefix": "-@",
                                                                                    "valueFrom": "$(runtime.cores)"
                                                                                }
                                                                            ],
                                                                            "requirements": [
                                                                                {
                                                                                    "class": "ResourceRequirement",
                                                                                    "ramMin": 32000,
                                                                                    "coresMin": 4
                                                                                },
                                                                                {
                                                                                    "class": "DockerRequirement",
                                                                                    "dockerPull": "mskcc/roslin-variant-samtools:1.3.1"
                                                                                },
                                                                                {
                                                                                    "class": "InlineJavascriptRequirement"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "sam_to_bam",
                                                                        "in": [
                                                                            {
                                                                                "id": "input",
                                                                                "source": "bwa_mem/output_sam"
                                                                            }
                                                                        ],
                                                                        "out": [
                                                                            {
                                                                                "id": "output_bam"
                                                                            }
                                                                        ],
                                                                        "run": {
                                                                            "class": "CommandLineTool",
                                                                            "cwlVersion": "v1.0",
                                                                            "baseCommand": [
                                                                                "/usr/bin/samtools",
                                                                                "view"
                                                                            ],
                                                                            "id": "samtools-view",
                                                                            "inputs": [
                                                                                {
                                                                                    "id": "bedoverlap",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-L"
                                                                                    },
                                                                                    "doc": "only include reads overlapping this BED FILE [null]\n"
                                                                                },
                                                                                {
                                                                                    "id": "cigar",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-m"
                                                                                    },
                                                                                    "doc": "only include reads with number of CIGAR operations\nconsuming query sequence >= INT [0]\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "collapsecigar",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-B"
                                                                                    },
                                                                                    "doc": "collapse the backward CIGAR operation\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "count",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-c"
                                                                                    },
                                                                                    "doc": "print only the count of matching records\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "fastcompression",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-1"
                                                                                    },
                                                                                    "doc": "use fast BAM compression (implies -b)\n"
                                                                                },
                                                                                {
                                                                                    "id": "input",
                                                                                    "type": "File",
                                                                                    "inputBinding": {
                                                                                        "position": 4
                                                                                    },
                                                                                    "doc": "Input bam file.\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "isbam",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 2,
                                                                                        "prefix": "-b"
                                                                                    },
                                                                                    "doc": "output in BAM format\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "iscram",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 2,
                                                                                        "prefix": "-C"
                                                                                    },
                                                                                    "doc": "output in CRAM format\n"
                                                                                },
                                                                                {
                                                                                    "id": "randomseed",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "float"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-s"
                                                                                    },
                                                                                    "doc": "integer part sets seed of random number generator [0];\nrest sets fraction of templates to subsample [no subsampling]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readsingroup",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-r"
                                                                                    },
                                                                                    "doc": "only include reads in read group STR [null]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readsingroupfile",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-R"
                                                                                    },
                                                                                    "doc": "only include reads with read group listed in FILE [null]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readsinlibrary",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-l"
                                                                                    },
                                                                                    "doc": "only include reads in library STR [null]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readsquality",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-q"
                                                                                    },
                                                                                    "doc": "only include reads with mapping quality >= INT [0]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readswithbits",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-f"
                                                                                    },
                                                                                    "doc": "only include reads with all bits set in INT set in FLAG [0]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readswithoutbits",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-F"
                                                                                    },
                                                                                    "doc": "only include reads with none of the bits set in INT set in FLAG [0]\n"
                                                                                },
                                                                                {
                                                                                    "id": "readtagtostrip",
                                                                                    "type": [
                                                                                        "null",
                                                                                        {
                                                                                            "type": "array",
                                                                                            "items": "string"
                                                                                        }
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-x"
                                                                                    },
                                                                                    "doc": "read tag to strip (repeatable) [null]\n"
                                                                                },
                                                                                {
                                                                                    "id": "referencefasta",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-T"
                                                                                    },
                                                                                    "doc": "reference sequence FASTA FILE [null]\n"
                                                                                },
                                                                                {
                                                                                    "id": "region",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 5
                                                                                    },
                                                                                    "doc": "[region ...]\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "samheader",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-h"
                                                                                    },
                                                                                    "doc": "include header in SAM output\n"
                                                                                },
                                                                                {
                                                                                    "id": "threads",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "int"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-@"
                                                                                    },
                                                                                    "doc": "number of BAM compression threads [0]\n"
                                                                                },
                                                                                {
                                                                                    "default": false,
                                                                                    "id": "uncompressed",
                                                                                    "type": "boolean",
                                                                                    "inputBinding": {
                                                                                        "position": 1,
                                                                                        "prefix": "-u"
                                                                                    },
                                                                                    "doc": "uncompressed BAM output (implies -b)\n"
                                                                                },
                                                                                {
                                                                                    "id": "samheaderonly",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "boolean"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-H"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "outputreadsnotselectedbyfilters",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-U"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "listingreferencenamesandlengths",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-t"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "readtagtostri",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "File"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-x"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "id": "output_format",
                                                                                    "type": [
                                                                                        "null",
                                                                                        "string"
                                                                                    ],
                                                                                    "inputBinding": {
                                                                                        "position": 0,
                                                                                        "prefix": "-O"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "outputs": [
                                                                                {
                                                                                    "id": "output_bam",
                                                                                    "type": "File",
                                                                                    "outputBinding": {
                                                                                        "glob": "$(inputs.input.basename.replace('sam', 'bam'))"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "doc": "Prints alignments in the specified input alignment file.\n\nWith no options or regions specified, prints all alignments in the specified input alignment file (in SAM, BAM, or CRAM format) to standard output in SAM format (with no header).\n\nYou may specify one or more space-separated region specifications after the input filename to restrict output to only those alignments which overlap the specified region(s). Use of region specifications requires a coordinate-sorted and indexed input file (in BAM or CRAM format).\n\nThe -b, -C, -1, -u, -h, -H, and -c options change the output format from the default of headerless SAM, and the -o and -U options set the output file name(s).\n\nThe -t and -T options provide additional reference data. One of these two options is required when SAM input does not contain @SQ headers, and the -T option is required whenever writing CRAM output.\n\nThe -L, -r, -R, -q, -l, -m, -f, and -F options filter the alignments that will be included in the output to only those alignments that match certain criteria.\n\nThe -x, -B, and -s options modify the data which is contained in each alignment.\n\nFinally, the -@ option can be used to allocate additional threads to be used for compression, and the -? option requests a long help message.\n\nUsage: samtools view [options] in.bam|in.sam|in.cram [region...]\n\nRegions can be specified as: RNAME[:STARTPOS[-ENDPOS]] and all position coordinates are 1-based.\n\nImportant note: when multiple regions are given, some alignments may be output multiple times if they overlap more than one of the specified regions.\n\nExamples of region specifications:\n\n`chr1'\nOutput all alignments mapped to the reference sequence named `chr1' (i.e. @SQ SN:chr1) .\n\n`chr2:1000000'\nThe region on chr2 beginning at base position 1,000,000 and ending at the end of the chromosome.\n\n`chr3:1000-2000'\nThe 1001bp region on chr3 beginning at base position 1,000 and ending at base position 2,000 (including both end positions).\n\nOPTIONS:\n\n-b\nOutput in the BAM format.\n\n-C\nOutput in the CRAM format (requires -T).\n\n-1\nEnable fast BAM compression (implies -b).\n\n-u\nOutput uncompressed BAM. This option saves time spent on compression/decompression and is thus preferred when the output is piped to another samtools command.\n\n-h\nInclude the header in the output.\n\n-H\nOutput the header only.\n\n-c\nInstead of printing the alignments, only count them and print the total number. All filter options, such as -f, -F, and -q, are taken into account.\n\n-?\nOutput long help and exit immediately.\n\n-o FILE\nOutput to FILE [stdout].\n\n-U FILE\nWrite alignments that are not selected by the various filter options to FILE. When this option is used, all alignments (or all alignments intersecting the regions specified) are written to either the output file or this file, but never both.\n\n-t FILE\nA tab-delimited FILE. Each line must contain the reference name in the first column and the length of the reference in the second column, with one line for each distinct reference. Any additional fields beyond the second column are ignored. This file also defines the order of the reference sequences in sorting. If you run: `samtools faidx <ref.fa>', the resulting index file <ref.fa>.fai can be used as this FILE.\n\n-T FILE\nA FASTA format reference FILE, optionally compressed by bgzip and ideally indexed by samtools faidx. If an index is not present, one will be generated for you.\n\n-L FILE\nOnly output alignments overlapping the input BED FILE [null].\n\n-r STR\nOnly output alignments in read group STR [null].\n\n-R FILE\nOutput alignments in read groups listed in FILE [null].\n\n-q INT\nSkip alignments with MAPQ smaller than INT [0].\n\n-l STR\nOnly output alignments in library STR [null].\n\n-m INT\nOnly output alignments with number of CIGAR bases consuming query sequence \ufffd\ufffd\ufffd INT [0]\n\n-f INT\nOnly output alignments with all bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x' (i.e. /^0x[0-9A-F]+/) or in octal by beginning with `0' (i.e. /^0[0-7]+/) [0].\n\n-F INT\nDo not output alignments with any bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x' (i.e. /^0x[0-9A-F]+/) or in octal by beginning with `0' (i.e. /^0[0-7]+/) [0].\n\n-x STR\nRead tag to exclude from output (repeatable) [null]\n\n-B\nCollapse the backward CIGAR operation.\n\n-s FLOAT\nInteger part is used to seed the random number generator [0]. Part after the decimal point sets the fraction of templates/pairs to subsample [no subsampling].\n\n-@ INT\nNumber of BAM compression threads to use in addition to main thread [0].\n\n-S\nIgnored for compatibility with previous samtools versions. Previously this option was required if input was in SAM format, but now the correct format is automatically detected by examining the first few characters of input.\n",
                                                                            "arguments": [
                                                                                {
                                                                                    "position": 0,
                                                                                    "prefix": "-o",
                                                                                    "valueFrom": "$(inputs.input.basename.replace('sam', 'bam'))"
                                                                                },
                                                                                {
                                                                                    "position": 0,
                                                                                    "prefix": "--threads",
                                                                                    "valueFrom": "$(runtime.cores)"
                                                                                }
                                                                            ],
                                                                            "requirements": [
                                                                                {
                                                                                    "class": "ResourceRequirement",
                                                                                    "ramMin": 32000,
                                                                                    "coresMin": 4
                                                                                },
                                                                                {
                                                                                    "class": "DockerRequirement",
                                                                                    "dockerPull": "mskcc/roslin-variant-samtools:1.3.1"
                                                                                },
                                                                                {
                                                                                    "class": "InlineJavascriptRequirement"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ],
                                                                "requirements": []
                                                            },
                                                            "label": "bwa_sort",
                                                            "scatter": [
                                                                "r1",
                                                                "r2",
                                                                "lane_id"
                                                            ],
                                                            "scatterMethod": "dotproduct"
                                                        },
                                                        {
                                                            "id": "gatk_markduplicatesgatk",
                                                            "in": [
                                                                {
                                                                    "id": "input",
                                                                    "source": "samtools_merge/output_file"
                                                                }
                                                            ],
                                                            "out": [
                                                                {
                                                                    "id": "output_md_bam"
                                                                },
                                                                {
                                                                    "id": "output_md_metrics"
                                                                }
                                                            ],
                                                            "run": {
                                                                "class": "CommandLineTool",
                                                                "cwlVersion": "v1.0",
                                                                "id": "gatk_markduplicates",
                                                                "baseCommand": [
                                                                    "gatk",
                                                                    "MarkDuplicates"
                                                                ],
                                                                "inputs": [
                                                                    {
                                                                        "id": "input",
                                                                        "type": "File",
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--INPUT"
                                                                        },
                                                                        "doc": "Input BAM file"
                                                                    },
                                                                    {
                                                                        "id": "arguments_file",
                                                                        "type": [
                                                                            "null",
                                                                            "File"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--arguments_file"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "assume_sort_order",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--ASSUME_SORT_ORDER"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "assume_sorted",
                                                                        "type": [
                                                                            "null",
                                                                            "boolean"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--ASSUME_SORTED"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "barcode_tag",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--BARCODE_TAG"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "clear_dt",
                                                                        "type": [
                                                                            "null",
                                                                            "boolean"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--CLEAR_DT"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "comment",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--COMMENT"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "duplex_umi",
                                                                        "type": [
                                                                            "null",
                                                                            "boolean"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--DUPLEX_UMI"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "duplicate_scoring_strategy",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--DUPLICATE_SCORING_STRATEGY"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "max_file_hendles_for_read_ends_map",
                                                                        "type": [
                                                                            "null",
                                                                            "int"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--MAX_FILE_HANDLES_FOR_READ_ENDS_MAP"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "max_optical_duplicate_set_size",
                                                                        "type": [
                                                                            "null",
                                                                            "float"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--MAX_OPTICAL_DUPLICATE_SET_SIZE"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "max_sequences_for_disk_read_ends_map",
                                                                        "type": [
                                                                            "null",
                                                                            "int"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "molecular_identifier_tag",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--MOLECULAR_IDENTIFIER_TAG"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "optical_duplicate_pixel_distance",
                                                                        "type": [
                                                                            "null",
                                                                            "int"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--OPTICAL_DUPLICATE_PIXEL_DISTANCE"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "program_group_command_line",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--PROGRAM_GROUP_COMMAND_LINE"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "program_group_name",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--PROGRAM_GROUP_NAME"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "program_group_version",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--PROGRAM_GROUP_VERSION"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "program_record_id",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--PROGRAM_RECORD_ID"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "read_name_regex",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--READ_NAME_REGEX"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "read_one_barcode_tag",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--READ_ONE_BARCODE_TAG"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "read_two_barcode_tag",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--READ_TWO_BARCODE_TAG"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "remove_duplicates",
                                                                        "type": [
                                                                            "null",
                                                                            "boolean"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--REMOVE_DUPLICATES"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "remove_sequencing_duplicates",
                                                                        "type": [
                                                                            "null",
                                                                            "boolean"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--REMOVE_SEQUENCING_DUPLICATES"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "sorting_collection_size_ratio",
                                                                        "type": [
                                                                            "null",
                                                                            "float"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--SORTING_COLLECTION_SIZE_RATIO"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "tag_duplicate_set_members",
                                                                        "type": [
                                                                            "null",
                                                                            "boolean"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--TAG_DUPLICATE_SET_MEMBERS"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": "tagging_policy",
                                                                        "type": [
                                                                            "null",
                                                                            "string"
                                                                        ],
                                                                        "inputBinding": {
                                                                            "position": 0,
                                                                            "prefix": "--TAGGING_POLICY"
                                                                        }
                                                                    }
                                                                ],
                                                                "outputs": [
                                                                    {
                                                                        "id": "output_md_bam",
                                                                        "doc": "Output marked duplicate bam",
                                                                        "type": "File",
                                                                        "outputBinding": {
                                                                            "glob": "$(inputs.input.basename.replace('md.bam', 'bam'))"
                                                                        },
                                                                        "secondaryFiles": [
                                                                            "^.bai"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "id": "output_md_metrics",
                                                                        "doc": "Output marked duplicate metrics",
                                                                        "type": "File",
                                                                        "outputBinding": {
                                                                            "glob": "$(inputs.input.basename.replace('bam', 'md.metrics'))"
                                                                        }
                                                                    }
                                                                ],
                                                                "label": "GATK MarkDuplicates",
                                                                "arguments": [
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--OUTPUT",
                                                                        "valueFrom": "$(inputs.input.basename.replace('md.bam', 'bam'))"
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--METRICS_FILE",
                                                                        "valueFrom": "$(inputs.input.basename.replace('bam', 'md.metrics'))"
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--TMP_DIR",
                                                                        "valueFrom": "."
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--ASSUME_SORT_ORDER",
                                                                        "valueFrom": "coordinate"
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--CREATE_INDEX",
                                                                        "valueFrom": "true"
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--MAX_RECORDS_IN_RAM",
                                                                        "valueFrom": "50000"
                                                                    },
                                                                    {
                                                                        "position": 0,
                                                                        "prefix": "--java-options",
                                                                        "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G -Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G"
                                                                    }
                                                                ],
                                                                "requirements": [
                                                                    {
                                                                        "class": "ResourceRequirement",
                                                                        "ramMin": 42000,
                                                                        "coresMin": 1
                                                                    },
                                                                    {
                                                                        "class": "DockerRequirement",
                                                                        "dockerPull": "broadinstitute/gatk:4.1.0.0"
                                                                    },
                                                                    {
                                                                        "class": "InlineJavascriptRequirement"
                                                                    }
                                                                ]
                                                            },
                                                            "label": "GATK MarkDuplicates"
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "SubworkflowFeatureRequirement"
                                                        },
                                                        {
                                                            "class": "ScatterFeatureRequirement"
                                                        },
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "class": "StepInputExpressionRequirement"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "sample_id",
                                                        "id": "prefix"
                                                    },
                                                    {
                                                        "source": "mouse_reference",
                                                        "id": "reference_sequence"
                                                    },
                                                    {
                                                        "source": "r1",
                                                        "id": "r1"
                                                    },
                                                    {
                                                        "source": "r2",
                                                        "id": "r2"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.prefix + \"_mouse\"; }",
                                                        "id": "sample_id"
                                                    },
                                                    {
                                                        "source": "lane_id",
                                                        "id": "lane_id"
                                                    }
                                                ],
                                                "out": [
                                                    "output_merge_sort_bam"
                                                ],
                                                "id": "align_to_mouse"
                                            },
                                            {
                                                "run": {
                                                    "class": "CommandLineTool",
                                                    "cwlVersion": "v1.0",
                                                    "baseCommand": [
                                                        "/usr/bin/samtools",
                                                        "sort"
                                                    ],
                                                    "id": "samtools-sort",
                                                    "inputs": [
                                                        {
                                                            "id": "compression_level",
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-l"
                                                            },
                                                            "doc": "Set compression level, from 0 (uncompressed) to 9 (best)\n"
                                                        },
                                                        {
                                                            "id": "input",
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "position": 1
                                                            },
                                                            "doc": "Input bam file."
                                                        },
                                                        {
                                                            "id": "memory",
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-m"
                                                            },
                                                            "doc": "Set maximum memory per thread; suffix K/M/G recognized [768M]\n"
                                                        },
                                                        {
                                                            "id": "sort_by_name",
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-n"
                                                            },
                                                            "doc": "Sort by read names (i.e., the QNAME field) rather than by chromosomal coordinates."
                                                        },
                                                        {
                                                            "id": "reference",
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "--reference"
                                                            }
                                                        },
                                                        {
                                                            "id": "output_format",
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-O"
                                                            }
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "id": "output_file",
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "$(inputs.input.basename.replace('bam', 'sorted.bam'))"
                                                            }
                                                        }
                                                    ],
                                                    "doc": "Sort alignments by leftmost coordinates, or by read name when -n is used. An appropriate @HD-SO sort order header tag will be added or an existing one updated if necessary.\n\nUsage: samtools sort [-l level] [-m maxMem] [-o out.bam] [-O format] [-n] -T out.prefix [-@ threads] [in.bam]\n\nOptions:\n-l INT\nSet the desired compression level for the final output file, ranging from 0 (uncompressed) or 1 (fastest but minimal compression) to 9 (best compression but slowest to write), similarly to gzip(1)'s compression level setting.\n\nIf -l is not used, the default compression level will apply.\n\n-m INT\nApproximately the maximum required memory per thread, specified either in bytes or with a K, M, or G suffix. [768 MiB]\n\n-n\nSort by read names (i.e., the QNAME field) rather than by chromosomal coordinates.\n\n-o FILE\nWrite the final sorted output to FILE, rather than to standard output.\n\n-O FORMAT\nWrite the final output as sam, bam, or cram.\n\nBy default, samtools tries to select a format based on the -o filename extension; if output is to standard output or no format can be deduced, -O must be used.\n\n-T PREFIX\nWrite temporary files to PREFIX.nnnn.bam. This option is required.\n\n-@ INT\nSet number of sorting and compression threads. By default, operation is single-threaded\n",
                                                    "arguments": [
                                                        {
                                                            "position": 0,
                                                            "prefix": "-o",
                                                            "valueFrom": "$(inputs.input.basename.replace('bam', 'sorted.bam'))"
                                                        },
                                                        {
                                                            "position": 0,
                                                            "prefix": "-@",
                                                            "valueFrom": "$(runtime.cores)"
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "ResourceRequirement",
                                                            "ramMin": 32000,
                                                            "coresMin": 4
                                                        },
                                                        {
                                                            "class": "DockerRequirement",
                                                            "dockerPull": "mskcc/roslin-variant-samtools:1.3.1"
                                                        },
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "align_to_human/output_merge_sort_bam",
                                                        "id": "input"
                                                    },
                                                    {
                                                        "valueFrom": "${ return true; }",
                                                        "id": "sort_by_name"
                                                    }
                                                ],
                                                "out": [
                                                    "output_file"
                                                ],
                                                "id": "name_sort_human"
                                            },
                                            {
                                                "run": {
                                                    "class": "CommandLineTool",
                                                    "cwlVersion": "v1.0",
                                                    "baseCommand": [
                                                        "/usr/bin/samtools",
                                                        "sort"
                                                    ],
                                                    "id": "samtools-sort",
                                                    "inputs": [
                                                        {
                                                            "id": "compression_level",
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-l"
                                                            },
                                                            "doc": "Set compression level, from 0 (uncompressed) to 9 (best)\n"
                                                        },
                                                        {
                                                            "id": "input",
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "position": 1
                                                            },
                                                            "doc": "Input bam file."
                                                        },
                                                        {
                                                            "id": "memory",
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-m"
                                                            },
                                                            "doc": "Set maximum memory per thread; suffix K/M/G recognized [768M]\n"
                                                        },
                                                        {
                                                            "id": "sort_by_name",
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-n"
                                                            },
                                                            "doc": "Sort by read names (i.e., the QNAME field) rather than by chromosomal coordinates."
                                                        },
                                                        {
                                                            "id": "reference",
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "--reference"
                                                            }
                                                        },
                                                        {
                                                            "id": "output_format",
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-O"
                                                            }
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "id": "output_file",
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "$(inputs.input.basename.replace('bam', 'sorted.bam'))"
                                                            }
                                                        }
                                                    ],
                                                    "doc": "Sort alignments by leftmost coordinates, or by read name when -n is used. An appropriate @HD-SO sort order header tag will be added or an existing one updated if necessary.\n\nUsage: samtools sort [-l level] [-m maxMem] [-o out.bam] [-O format] [-n] -T out.prefix [-@ threads] [in.bam]\n\nOptions:\n-l INT\nSet the desired compression level for the final output file, ranging from 0 (uncompressed) or 1 (fastest but minimal compression) to 9 (best compression but slowest to write), similarly to gzip(1)'s compression level setting.\n\nIf -l is not used, the default compression level will apply.\n\n-m INT\nApproximately the maximum required memory per thread, specified either in bytes or with a K, M, or G suffix. [768 MiB]\n\n-n\nSort by read names (i.e., the QNAME field) rather than by chromosomal coordinates.\n\n-o FILE\nWrite the final sorted output to FILE, rather than to standard output.\n\n-O FORMAT\nWrite the final output as sam, bam, or cram.\n\nBy default, samtools tries to select a format based on the -o filename extension; if output is to standard output or no format can be deduced, -O must be used.\n\n-T PREFIX\nWrite temporary files to PREFIX.nnnn.bam. This option is required.\n\n-@ INT\nSet number of sorting and compression threads. By default, operation is single-threaded\n",
                                                    "arguments": [
                                                        {
                                                            "position": 0,
                                                            "prefix": "-o",
                                                            "valueFrom": "$(inputs.input.basename.replace('bam', 'sorted.bam'))"
                                                        },
                                                        {
                                                            "position": 0,
                                                            "prefix": "-@",
                                                            "valueFrom": "$(runtime.cores)"
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "ResourceRequirement",
                                                            "ramMin": 32000,
                                                            "coresMin": 4
                                                        },
                                                        {
                                                            "class": "DockerRequirement",
                                                            "dockerPull": "mskcc/roslin-variant-samtools:1.3.1"
                                                        },
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "align_to_mouse/output_merge_sort_bam",
                                                        "id": "input"
                                                    },
                                                    {
                                                        "valueFrom": "${ return true; }",
                                                        "id": "sort_by_name"
                                                    }
                                                ],
                                                "out": [
                                                    "output_file"
                                                ],
                                                "id": "name_sort_mouse"
                                            },
                                            {
                                                "run": {
                                                    "class": "CommandLineTool",
                                                    "cwlVersion": "v1.0",
                                                    "baseCommand": [
                                                        "ngs_disambiguate"
                                                    ],
                                                    "id": "disambiguate",
                                                    "inputs": [
                                                        {
                                                            "id": "no_sort",
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "--no-sort"
                                                            }
                                                        },
                                                        {
                                                            "id": "prefix",
                                                            "type": "string",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "--prefix"
                                                            }
                                                        },
                                                        {
                                                            "id": "output_dir",
                                                            "type": "string",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "--output-dir"
                                                            }
                                                        },
                                                        {
                                                            "id": "aligner",
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "--aligner"
                                                            },
                                                            "default": "bwa"
                                                        },
                                                        {
                                                            "id": "species_a_bam",
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "position": 1
                                                            }
                                                        },
                                                        {
                                                            "id": "species_b_bam",
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "position": 2
                                                            }
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "id": "disambiguate_a_bam",
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n    return inputs.output_dir.concat('/*.disambiguatedSpeciesA.bam');\n}\n"
                                                            }
                                                        },
                                                        {
                                                            "id": "disambiguate_b_bam",
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n    return inputs.output_dir.concat('/*.disambiguatedSpeciesB.bam');\n}\n"
                                                            }
                                                        },
                                                        {
                                                            "id": "summary",
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n    return inputs.output_dir.concat('/*_summary.txt');\n}\n"
                                                            }
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "ResourceRequirement",
                                                            "ramMin": 32000,
                                                            "coresMin": 4
                                                        },
                                                        {
                                                            "class": "DockerRequirement",
                                                            "dockerPull": "mskcc/disambiguate:1.0.0"
                                                        },
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "sample_id",
                                                        "id": "prefix"
                                                    },
                                                    {
                                                        "valueFrom": "${ return \"bwa\"; }",
                                                        "id": "aligner"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.prefix + \"_disambiguated\"; }",
                                                        "id": "output_dir"
                                                    },
                                                    {
                                                        "source": "name_sort_human/output_file",
                                                        "id": "species_a_bam"
                                                    },
                                                    {
                                                        "source": "name_sort_mouse/output_file",
                                                        "id": "species_b_bam"
                                                    }
                                                ],
                                                "out": [
                                                    "disambiguate_a_bam",
                                                    "disambiguate_b_bam",
                                                    "summary"
                                                ],
                                                "id": "run_disambiguate"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "ref_fasta",
                                            "id": "human_reference"
                                        },
                                        {
                                            "source": "mouse_fasta",
                                            "id": "mouse_reference"
                                        },
                                        {
                                            "source": "get_sample_info/ID",
                                            "id": "sample_id"
                                        },
                                        {
                                            "source": "get_sample_info/zPU",
                                            "id": "lane_id"
                                        },
                                        {
                                            "source": "get_sample_info/zR1",
                                            "id": "r1"
                                        },
                                        {
                                            "source": "get_sample_info/zR2",
                                            "id": "r2"
                                        }
                                    ],
                                    "out": [
                                        "disambiguate_bam",
                                        "summary"
                                    ],
                                    "scatter": [
                                        "lane_id"
                                    ],
                                    "scatterMethod": "dotproduct",
                                    "id": "resolve_pdx"
                                },
                                {
                                    "run": {
                                        "class": "CommandLineTool",
                                        "cwlVersion": "v1.0",
                                        "id": "unpack-bam",
                                        "baseCommand": [
                                            "perl",
                                            "/opt/unpack_bam.pl"
                                        ],
                                        "arguments": [
                                            {
                                                "valueFrom": "$(runtime.tmpdir)",
                                                "position": 0,
                                                "prefix": "--tmp-dir",
                                                "shellQuote": false
                                            }
                                        ],
                                        "requirements": [
                                            {
                                                "dockerPull": "mskcc/unpack_bam:0.1.0",
                                                "class": "DockerRequirement"
                                            },
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 16000,
                                                "coresMin": 2,
                                                "class": "ResourceRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "id": "input_bam",
                                                "type": "File",
                                                "inputBinding": {
                                                    "position": 0,
                                                    "prefix": "--input-bam"
                                                }
                                            },
                                            {
                                                "id": "sample_id",
                                                "type": "string",
                                                "inputBinding": {
                                                    "position": 0,
                                                    "prefix": "--sample-id"
                                                }
                                            },
                                            {
                                                "id": "picard_jar",
                                                "type": "string",
                                                "default": "/opt/common/CentOS_6-dev/picard/v2.13/picard.jar",
                                                "inputBinding": {
                                                    "position": 0,
                                                    "prefix": "--picard-jar"
                                                }
                                            },
                                            {
                                                "id": "output_dir",
                                                "type": "string",
                                                "default": "fastqs",
                                                "inputBinding": {
                                                    "position": 0,
                                                    "prefix": "--output-dir"
                                                }
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "id": "rg_output",
                                                "type": "Directory",
                                                "outputBinding": {
                                                    "glob": "${\n  return inputs.output_dir;\n }\n"
                                                }
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": [
                                                "resolve_pdx/disambiguate_bam",
                                                "get_sample_info/bam"
                                            ],
                                            "linkMerge": "merge_flattened",
                                            "id": "input_bam"
                                        },
                                        {
                                            "source": "get_sample_info/ID",
                                            "id": "sample_id"
                                        }
                                    ],
                                    "out": [
                                        "rg_output"
                                    ],
                                    "scatter": [
                                        "input_bam"
                                    ],
                                    "scatterMethod": "dotproduct",
                                    "id": "unpack_bam"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "ExpressionTool",
                                        "id": "flatten-array-directory",
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "Directory"
                                                },
                                                "id": "directory_list"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "Directory",
                                                "id": "output_directory"
                                            }
                                        ],
                                        "expression": "${ if (inputs.directory_list.length != 0) { return {'output_directory':inputs.directory_list[0]}; } else { return { 'output_directory': {'class': 'Directory','basename': 'empty','listing': []} }}; }"
                                    },
                                    "in": [
                                        {
                                            "source": "unpack_bam/rg_output",
                                            "id": "directory_list"
                                        }
                                    ],
                                    "out": [
                                        "output_directory"
                                    ],
                                    "id": "flatten_dir"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "ExpressionTool",
                                        "id": "consolidate-reads",
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": "Directory",
                                                "id": "reads_dir"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "id": "r1"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "id": "r2"
                                            }
                                        ],
                                        "expression": "${\n  var r1_files = [];\n  var r2_files = [];\n\n  for (var i = 0; i < inputs.reads_dir.listing.length; i++) {\n    var current_file_obj = inputs.reads_dir.listing[i];\n    if (current_file_obj.class == \"Directory\"){\n      for (var j = 0; j < current_file_obj.listing.length; j++) {\n        var current_fastq = current_file_obj.listing[j];\n        if ( current_fastq.basename.includes(\"_R1_\")){\n          r1_files.push(current_fastq);\n        }\n        else if ( current_fastq.basename.includes(\"_R2_\")){\n          r2_files.push(current_fastq);\n        }\n      }\n    }\n  }\n\n  return {\n    'r1': r1_files,\n    'r2': r2_files\n  };\n}\n"
                                    },
                                    "in": [
                                        {
                                            "source": "flatten_dir/output_directory",
                                            "id": "reads_dir"
                                        }
                                    ],
                                    "out": [
                                        "r1",
                                        "r2"
                                    ],
                                    "id": "consolidate_reads"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "baseCommand": [
                                            "cmo_split_reads"
                                        ],
                                        "id": "cmo-split-reads",
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 24000,
                                                "coresMin": 1,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-cmo-utils:1.9.15",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "split files into chunks based on filesize\n",
                                        "inputs": [
                                            {
                                                "type": "File",
                                                "doc": "filename to split",
                                                "inputBinding": {
                                                    "prefix": "--fastq1"
                                                },
                                                "id": "fastq1"
                                            },
                                            {
                                                "type": "File",
                                                "doc": "filename2 to split",
                                                "inputBinding": {
                                                    "prefix": "--fastq2"
                                                },
                                                "id": "fastq2"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "RG/PU ID",
                                                "inputBinding": {
                                                    "prefix": "--platform-unit"
                                                },
                                                "id": "platform_unit"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "outputBinding": {
                                                    "glob": "${\n  var pattern = inputs.platform_unit + \"-\" + inputs.fastq1.basename.split(\".\",1)[0].split('_').slice(1).join(\"-\") + \".chunk*\";\n  return pattern\n}\n"
                                                },
                                                "id": "chunks1"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "outputBinding": {
                                                    "glob": "${\n  var pattern = inputs.platform_unit + \"-\" + inputs.fastq2.basename.split(\".\",1)[0].split('_').slice(1).join(\"-\") + \".chunk*\";\n  return pattern\n}\n"
                                                },
                                                "id": "chunks2"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": [
                                                "get_sample_info/R1",
                                                "consolidate_reads/r1"
                                            ],
                                            "linkMerge": "merge_flattened",
                                            "id": "fastq1"
                                        },
                                        {
                                            "source": [
                                                "get_sample_info/R2",
                                                "consolidate_reads/r2"
                                            ],
                                            "linkMerge": "merge_flattened",
                                            "id": "fastq2"
                                        },
                                        {
                                            "source": "get_sample_info/PU",
                                            "id": "platform_unit"
                                        }
                                    ],
                                    "out": [
                                        "chunks1",
                                        "chunks2"
                                    ],
                                    "scatter": [
                                        "fastq1",
                                        "fastq2",
                                        "platform_unit"
                                    ],
                                    "scatterMethod": "dotproduct",
                                    "id": "chunking"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "ExpressionTool",
                                        "id": "flatten-array-fastq",
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": [
                                                    "File",
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "array",
                                                            "items": "File"
                                                        }
                                                    }
                                                ],
                                                "id": "fastq1"
                                            },
                                            {
                                                "type": [
                                                    "File",
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "array",
                                                            "items": "File"
                                                        }
                                                    }
                                                ],
                                                "id": "fastq2"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string"
                                                },
                                                "id": "add_rg_ID"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string"
                                                },
                                                "id": "add_rg_PU"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "id": "chunks1"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "id": "chunks2"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string"
                                                },
                                                "id": "rg_ID"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string"
                                                },
                                                "id": "rg_PU"
                                            }
                                        ],
                                        "expression": "${ var fastq1 = []; var fastq2 =[]; var add_rg_ID = []; var add_rg_PU = []; for (var i = 0; i < inputs.fastq1.length; i++) { for (var j =0; j < inputs.fastq1[i].length; j++) { fastq1.push(inputs.fastq1[i][j]); fastq2.push(inputs.fastq2[i][j]); } } fastq1 = fastq1.sort(function(a,b) {  if (a['basename']< b['basename']) { return -1; } else if(a['basename'] > b['basename']) { return 1; } else { return 0; } }); fastq2 = fastq2.sort(function(a,b) { if (a['basename']< b['basename']) { return -1; } else if(a['basename'] > b['basename']) { return 1; } else { return 0; }}); for (var i =0; i < fastq1.length; i++) { for(var j=0; j < inputs.add_rg_PU.length; j++) { if (fastq1[i].basename.includes(inputs.add_rg_PU[j])) { add_rg_ID.push(inputs.add_rg_ID[j]); add_rg_PU.push(inputs.add_rg_PU[j]); } } } var returnobj = {}; returnobj['chunks1'] = fastq1; returnobj['chunks2'] = fastq2; returnobj['rg_ID']= add_rg_ID; returnobj['rg_PU']= add_rg_PU; return returnobj; }"
                                    },
                                    "in": [
                                        {
                                            "source": "chunking/chunks1",
                                            "id": "fastq1"
                                        },
                                        {
                                            "source": "chunking/chunks2",
                                            "id": "fastq2"
                                        },
                                        {
                                            "source": "get_sample_info/RG_ID",
                                            "id": "add_rg_ID"
                                        },
                                        {
                                            "source": "get_sample_info/PU",
                                            "id": "add_rg_PU"
                                        }
                                    ],
                                    "out": [
                                        "chunks1",
                                        "chunks2",
                                        "rg_ID",
                                        "rg_PU"
                                    ],
                                    "id": "flatten"
                                },
                                {
                                    "in": [
                                        {
                                            "source": "ref_fasta",
                                            "id": "ref_fasta"
                                        },
                                        {
                                            "source": "flatten/chunks1",
                                            "id": "chunkfastq1"
                                        },
                                        {
                                            "source": "flatten/chunks2",
                                            "id": "chunkfastq2"
                                        },
                                        {
                                            "source": "get_sample_info/adapter",
                                            "id": "adapter"
                                        },
                                        {
                                            "source": "get_sample_info/adapter2",
                                            "id": "adapter2"
                                        },
                                        {
                                            "source": "genome",
                                            "id": "genome"
                                        },
                                        {
                                            "source": "get_sample_info/bwa_output",
                                            "id": "bwa_output"
                                        },
                                        {
                                            "source": "get_sample_info/LB",
                                            "id": "add_rg_LB"
                                        },
                                        {
                                            "source": "get_sample_info/PL",
                                            "id": "add_rg_PL"
                                        },
                                        {
                                            "source": "flatten/rg_ID",
                                            "id": "add_rg_ID"
                                        },
                                        {
                                            "source": "flatten/rg_PU",
                                            "id": "add_rg_PU"
                                        },
                                        {
                                            "source": "get_sample_info/ID",
                                            "id": "add_rg_SM"
                                        },
                                        {
                                            "source": "get_sample_info/CN",
                                            "id": "add_rg_CN"
                                        }
                                    ],
                                    "scatter": [
                                        "chunkfastq1",
                                        "chunkfastq2",
                                        "add_rg_ID",
                                        "add_rg_PU"
                                    ],
                                    "scatterMethod": "dotproduct",
                                    "out": [
                                        "clstats1",
                                        "clstats2",
                                        "bam"
                                    ],
                                    "run": {
                                        "class": "Workflow",
                                        "id": "alignment_sample",
                                        "inputs": [
                                            {
                                                "type": "File",
                                                "id": "ref_fasta"
                                            },
                                            {
                                                "type": "File",
                                                "id": "chunkfastq1"
                                            },
                                            {
                                                "type": "File",
                                                "id": "chunkfastq2"
                                            },
                                            {
                                                "type": "string",
                                                "id": "adapter"
                                            },
                                            {
                                                "type": "string",
                                                "id": "genome"
                                            },
                                            {
                                                "type": "string",
                                                "id": "adapter2"
                                            },
                                            {
                                                "type": "string",
                                                "id": "bwa_output"
                                            },
                                            {
                                                "type": "string",
                                                "id": "add_rg_LB"
                                            },
                                            {
                                                "type": "string",
                                                "id": "add_rg_PL"
                                            },
                                            {
                                                "type": "string",
                                                "id": "add_rg_ID"
                                            },
                                            {
                                                "type": "string",
                                                "id": "add_rg_PU"
                                            },
                                            {
                                                "type": "string",
                                                "id": "add_rg_SM"
                                            },
                                            {
                                                "type": "string",
                                                "id": "add_rg_CN"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputSource": "trim_galore/clstats1",
                                                "id": "clstats1"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "trim_galore/clstats2",
                                                "id": "clstats2"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "add_rg_id/bam",
                                                "id": "bam"
                                            }
                                        ],
                                        "steps": [
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "baseCommand": [
                                                        "/usr/bin/trim_galore"
                                                    ],
                                                    "id": "trimgalore",
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement",
                                                            "expressionLib": [
                                                                "var getBaseName = function(inputFile) { return inputFile.basename; };"
                                                            ]
                                                        },
                                                        {
                                                            "class": "ResourceRequirement",
                                                            "ramMin": 12000,
                                                            "coresMin": 1
                                                        },
                                                        {
                                                            "class": "DockerRequirement",
                                                            "dockerPull": "mskcc/roslin-variant-trimgalore:0.2.5.mod"
                                                        }
                                                    ],
                                                    "doc": "None\n",
                                                    "inputs": [
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "default": "1",
                                                            "doc": "Trim low-quality ends from reads in addition to adapter removal. For RRBS samples, quality trimming will be performed first, and adapter trimming is carried in a second round. Other files are quality and adapter trimmed in a single pass. The algorithm is the same as the one used by BWA (Subtract INT from all qualities; compute partial sums from all indices to the end of the sequence; cut sequence at the index at which the sum is minimal). Default Phred score - 20.",
                                                            "inputBinding": {
                                                                "prefix": "--quality"
                                                            },
                                                            "id": "quality"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Instructs Cutadapt to use ASCII+33 quality scores as Phred scores (Sanger/Illumina 1.9+ encoding) for quality trimming. Default - ON.",
                                                            "inputBinding": {
                                                                "prefix": "--phred33"
                                                            },
                                                            "id": "phred33"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Instructs Cutadapt to use ASCII+64 quality scores as Phred scores (Illumina 1.5 encoding) for quality trimming.",
                                                            "inputBinding": {
                                                                "prefix": "--phred64"
                                                            },
                                                            "id": "phred64"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Run FastQC in the default mode on the FastQ file once trimming is complete.--fastqc_args \"<ARGS>\" Passes extra arguments to FastQC. If more than one argument is to be passed to FastQC they must be in the form \"arg1 arg2 etc.\". An example would be - --fastqc_args \"--nogroup --outdir /home/\". Passing extra arguments will automatically invoke FastQC, so --fastqc does not have to be specified separately.",
                                                            "inputBinding": {
                                                                "prefix": "--fastqc"
                                                            },
                                                            "id": "fastqc"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Adapter sequence to be trimmed. If not specified explicitely, the first 13 bp of the Illumina adapter 'AGATCGGAAGAGC' will be used by default.",
                                                            "inputBinding": {
                                                                "prefix": "--adapter"
                                                            },
                                                            "id": "adapter"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Optional adapter sequence to be trimmed off read 2 of paired-end files. This option requires '--paired' to be specified as well.",
                                                            "inputBinding": {
                                                                "prefix": "--adapter2"
                                                            },
                                                            "id": "adapter2"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Overlap with adapter sequence required to trim a sequence. Defaults to a very stringent setting of '1', i.e. even a single bp of overlapping sequence will be trimmed of the 3' end of any read.-e <ERROR RATE> Maximum allowed error rate (no. of errors divided by the length of the matching region) (default - 0.1)",
                                                            "inputBinding": {
                                                                "prefix": "--stringency"
                                                            },
                                                            "id": "stringency"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Compress the output file with gzip. If the input files are gzip-compressed the output files will be automatically gzip compressed as well.",
                                                            "inputBinding": {
                                                                "prefix": "--gzip"
                                                            },
                                                            "id": "gzip"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "default": "25",
                                                            "doc": "Discard reads that became shorter than length INT because of either quality or adapter trimming. A value of '0' effectively disables this behaviour. Default - 20 bp. For paired-end files, both reads of a read-pair need to be longer than <INT> bp to be printed out to validated paired-end files (see option --paired). If only one read became too short there is the possibility of keeping such unpaired single-end reads (see --retain_unpaired). Default pair-cutoff - 20 bp.",
                                                            "inputBinding": {
                                                                "prefix": "--length"
                                                            },
                                                            "id": "length"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "If specified all output will be written to this directory instead of the current directory.",
                                                            "inputBinding": {
                                                                "prefix": "--output_dir"
                                                            },
                                                            "id": "output_dir"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "If specified no report file will be generated.",
                                                            "inputBinding": {
                                                                "prefix": "--no_report_file"
                                                            },
                                                            "id": "no_report_file"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": true,
                                                            "doc": "If specified any output to STDOUT or STDERR will be suppressed.RRBS-specific options (MspI digested material) -",
                                                            "inputBinding": {
                                                                "prefix": "--suppress_warn"
                                                            },
                                                            "id": "suppress_warn"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Specifies that the input file was an MspI digested RRBS sample (recognition site - CCGG). Sequences which were adapter-trimmed will have a further 2 bp removed from their 3' end. This is to avoid that the filled-in C close to the second MspI site in a sequence is used for methylation calls. Sequences which were merely trimmed because of poor quality will not be shortened further.",
                                                            "inputBinding": {
                                                                "prefix": "--rrbs"
                                                            },
                                                            "id": "rrbs"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Selecting this option for non-directional RRBS libraries will screen quality-trimmed sequences for 'CAA' or 'CGA' at the start of the read and, if found, removes the first two basepairs. Like with the option '--rrbs' this avoids using cytosine positions that were filled-in during the end-repair step. '--non_directional' requires '--rrbs' to be specified as well.",
                                                            "inputBinding": {
                                                                "prefix": "--non_directional"
                                                            },
                                                            "id": "non_directional"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Keep the quality trimmed intermediate file. Default - off, which means the temporary file is being deleted after adapter trimming. Only has an effect for RRBS samples since other FastQ files are not trimmed for poor qualities separately.Note for RRBS using MseI -If your DNA material was digested with MseI (recognition motif - TTAA) instead of MspI it is NOT necessaryto specify --rrbs or --non_directional since virtually all reads should start with the sequence'TAA', and this holds true for both directional and non-directional libraries. As the end-repair of 'TAA'restricted sites does not involve any cytosines it does not need to be treated especially. Instead, simplyrun Trim Galore! in the standard (i.e. non-RRBS) mode.Paired-end specific options -",
                                                            "inputBinding": {
                                                                "prefix": "--keep"
                                                            },
                                                            "id": "keep"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": true,
                                                            "doc": "This option performs length trimming of quality/adapter/RRBS trimmed reads for paired-end files. To pass the validation test, both sequences of a sequence pair are required to have a certain minimum length which is governed by the option --length (see above). If only one read passes this length threshold the other read can be rescued (see option --retain_unpaired). Using this option lets you discard too short read pairs without disturbing the sequence-by-sequence order of FastQ files which is required by many aligners. Trim Galore! expects paired-end files to be supplied in a pairwise fashion, e.g. file1_1.fq file1_2.fq SRR2_1.fq.gz SRR2_2.fq.gz ... .",
                                                            "inputBinding": {
                                                                "prefix": "--paired"
                                                            },
                                                            "id": "paired"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Trims 1 bp off every read from its 3' end. This may be needed for FastQ files that are to be aligned as paired-end data with Bowtie. This is because Bowtie (1) regards alignments like this - R1 ---------------------------> or this - -----------------------> R1 R2 <--------------------------- <----------------- R2 as invalid (whenever a start/end coordinate is contained within the other read).",
                                                            "inputBinding": {
                                                                "prefix": "--trim1"
                                                            },
                                                            "id": "trim1"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "If only one of the two paired-end reads became too short, the longer read will be written to either '.unpaired_1.fq' or '.unpaired_2.fq' output files. The length cutoff for unpaired single-end reads is governed by the parameters -r1/--length_1 and -r2/--length_2. Default - OFF.",
                                                            "inputBinding": {
                                                                "prefix": "--retain_unpaired"
                                                            },
                                                            "id": "retain_unpaired"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Unpaired single-end read length cutoff needed for read 1 to be written to '.unpaired_1.fq' output file. These reads may be mapped in single-end mode. Default - 35 bp.",
                                                            "inputBinding": {
                                                                "prefix": "--length_1"
                                                            },
                                                            "id": "length_1"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Unpaired single-end read length cutoff needed for read 2 to be written to '.unpaired_2.fq' output file. These reads may be mapped in single-end mode. Default - 35 bp.Last modified on 18 Oct 2012.",
                                                            "inputBinding": {
                                                                "prefix": "--length_2"
                                                            },
                                                            "id": "length_2"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "position": 1
                                                            },
                                                            "id": "fastq1"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "position": 2
                                                            },
                                                            "id": "fastq2"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "log stderr to file",
                                                            "inputBinding": {
                                                                "prefix": "--stderr"
                                                            },
                                                            "id": "stderr"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "log stdout to file",
                                                            "inputBinding": {
                                                                "prefix": "--stdout"
                                                            },
                                                            "id": "stdout"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.paired && inputs.fastq1)\n    return getBaseName(inputs.fastq1).replace(\".fastq.gz\", \"_cl.fastq.gz\");\n  return null;\n}\n"
                                                            },
                                                            "id": "clfastq1"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.paired && inputs.fastq2)\n    return getBaseName(inputs.fastq2).replace(\".fastq.gz\", \"_cl.fastq.gz\");\n  return null;\n}\n"
                                                            },
                                                            "id": "clfastq2"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.paired && inputs.fastq1)\n    return getBaseName(inputs.fastq1).replace(\".fastq.gz\", \"_cl.stats\");\n  return null;\n}\n"
                                                            },
                                                            "id": "clstats1"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.paired && inputs.fastq2)\n    return getBaseName(inputs.fastq2).replace(\".fastq.gz\", \"_cl.stats\");\n  return null;\n}"
                                                            },
                                                            "id": "clstats2"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "chunkfastq1",
                                                        "id": "fastq1"
                                                    },
                                                    {
                                                        "source": "chunkfastq2",
                                                        "id": "fastq2"
                                                    },
                                                    {
                                                        "source": "adapter",
                                                        "id": "adapter"
                                                    },
                                                    {
                                                        "source": "adapter2",
                                                        "id": "adapter2"
                                                    }
                                                ],
                                                "out": [
                                                    "clfastq1",
                                                    "clfastq2",
                                                    "clstats1",
                                                    "clstats2"
                                                ],
                                                "id": "trim_galore"
                                            },
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "baseCommand": [
                                                        "/usr/bin/bwa",
                                                        "mem"
                                                    ],
                                                    "id": "bwa-mem",
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "ramMin": 32000,
                                                            "coresMin": 4,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/bwa_mem:0.7.12",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "label": "run bwa mem -t 6 -M",
                                                    "doc": "bwa mem\n  args set:\n    -M\n    -t 6\n",
                                                    "inputs": [
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "position": 1
                                                            },
                                                            "secondaryFiles": [
                                                                ".amb",
                                                                ".ann",
                                                                ".bwt",
                                                                ".pac",
                                                                ".sa",
                                                                ".fai",
                                                                "^.dict"
                                                            ],
                                                            "id": "reference"
                                                        },
                                                        {
                                                            "type": [
                                                                "string",
                                                                "File"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 2
                                                            },
                                                            "id": "fastq1"
                                                        },
                                                        {
                                                            "type": [
                                                                "string",
                                                                "File"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 2
                                                            },
                                                            "id": "fastq2"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "id": "output"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": true,
                                                            "doc": "mark shorter split hits as secondary (for Picard/GATK compatibility)",
                                                            "inputBinding": {
                                                                "prefix": "-M",
                                                                "position": 0
                                                            },
                                                            "id": "M"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT number of threads [1]",
                                                            "inputBinding": {
                                                                "prefix": "-t",
                                                                "position": 0
                                                            },
                                                            "default": "6",
                                                            "id": "t"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT gap extension penalty; a gap of size k cost {-O} + {-E}*k [1]",
                                                            "inputBinding": {
                                                                "prefix": "-E",
                                                                "position": 0
                                                            },
                                                            "id": "E"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT off-diagonal X-dropoff [100]",
                                                            "inputBinding": {
                                                                "prefix": "-d",
                                                                "position": 0
                                                            },
                                                            "id": "d"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT score for a sequence match [1]",
                                                            "inputBinding": {
                                                                "prefix": "-A",
                                                                "position": 0
                                                            },
                                                            "id": "A"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "append FASTA/FASTQ comment to SAM output",
                                                            "inputBinding": {
                                                                "prefix": "-C",
                                                                "position": 0
                                                            },
                                                            "id": "C"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT skip seeds with more than INT occurrences [10000]",
                                                            "inputBinding": {
                                                                "prefix": "-c",
                                                                "position": 0
                                                            },
                                                            "id": "c"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT penalty for a mismatch [4]",
                                                            "inputBinding": {
                                                                "prefix": "-B",
                                                                "position": 0
                                                            },
                                                            "id": "B"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT penalty for clipping [5]",
                                                            "inputBinding": {
                                                                "prefix": "-L",
                                                                "position": 0
                                                            },
                                                            "id": "L"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT gap open penalty [6]",
                                                            "inputBinding": {
                                                                "prefix": "-O",
                                                                "position": 0
                                                            },
                                                            "id": "O"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "STR read group header line such as '@RG\\tID -foo\\tSM -bar' [null]",
                                                            "inputBinding": {
                                                                "prefix": "-R",
                                                                "position": 0
                                                            },
                                                            "id": "R"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT minimum seed length [19]",
                                                            "inputBinding": {
                                                                "prefix": "-k",
                                                                "position": 0
                                                            },
                                                            "id": "k"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT penalty for an unpaired read pair [17]",
                                                            "inputBinding": {
                                                                "prefix": "-U",
                                                                "position": 0
                                                            },
                                                            "id": "U"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT band width for banded alignment [100]",
                                                            "inputBinding": {
                                                                "prefix": "-w",
                                                                "position": 0
                                                            },
                                                            "id": "w"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT verbose level - 1=error, 2=warning, 3=message, 4+=debugging [3]",
                                                            "inputBinding": {
                                                                "prefix": "-v",
                                                                "position": 0
                                                            },
                                                            "id": "v"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "INT minimum score to output [30]",
                                                            "inputBinding": {
                                                                "prefix": "-T",
                                                                "position": 0
                                                            },
                                                            "id": "T"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "skip pairing; mate rescue performed unless -S also in use",
                                                            "inputBinding": {
                                                                "prefix": "-P",
                                                                "position": 0
                                                            },
                                                            "id": "P"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "skip mate rescue",
                                                            "inputBinding": {
                                                                "prefix": "-S",
                                                                "position": 0
                                                            },
                                                            "id": "S"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "FLOAT look for internal seeds inside a seed longer than {-k} * FLOAT [1.5]",
                                                            "inputBinding": {
                                                                "prefix": "-r",
                                                                "position": 0
                                                            },
                                                            "id": "r"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "output all alignments for SE or unpaired PE",
                                                            "inputBinding": {
                                                                "prefix": "-a",
                                                                "position": 0
                                                            },
                                                            "id": "a"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "first query file consists of interleaved paired-end sequences",
                                                            "inputBinding": {
                                                                "prefix": "-p",
                                                                "position": 0
                                                            },
                                                            "id": "p"
                                                        }
                                                    ],
                                                    "stdout": "$(inputs.output)",
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.output)\n    return inputs.output;\n  return null;\n}"
                                                            },
                                                            "id": "sam"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "ref_fasta",
                                                        "id": "reference"
                                                    },
                                                    {
                                                        "source": "trim_galore/clfastq1",
                                                        "id": "fastq1"
                                                    },
                                                    {
                                                        "source": "trim_galore/clfastq2",
                                                        "id": "fastq2"
                                                    },
                                                    {
                                                        "source": "bwa_output",
                                                        "id": "basebamname"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.basebamname.replace(\".bam\", \".\" + inputs.fastq1.basename.match(/chunk\\d\\d\\d/)[0] + \".sam\");}",
                                                        "id": "output"
                                                    },
                                                    {
                                                        "source": "genome",
                                                        "id": "genome"
                                                    }
                                                ],
                                                "out": [
                                                    "sam"
                                                ],
                                                "id": "bwa"
                                            },
                                            {
                                                "run": {
                                                    "class": "CommandLineTool",
                                                    "cwlVersion": "v1.0",
                                                    "baseCommand": [
                                                        "/usr/bin/samtools",
                                                        "view"
                                                    ],
                                                    "id": "samtools-view",
                                                    "inputs": [
                                                        {
                                                            "id": "bedoverlap",
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-L"
                                                            },
                                                            "doc": "only include reads overlapping this BED FILE [null]\n"
                                                        },
                                                        {
                                                            "id": "cigar",
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-m"
                                                            },
                                                            "doc": "only include reads with number of CIGAR operations\nconsuming query sequence >= INT [0]\n"
                                                        },
                                                        {
                                                            "default": false,
                                                            "id": "collapsecigar",
                                                            "type": "boolean",
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-B"
                                                            },
                                                            "doc": "collapse the backward CIGAR operation\n"
                                                        },
                                                        {
                                                            "default": false,
                                                            "id": "count",
                                                            "type": "boolean",
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-c"
                                                            },
                                                            "doc": "print only the count of matching records\n"
                                                        },
                                                        {
                                                            "default": false,
                                                            "id": "fastcompression",
                                                            "type": "boolean",
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-1"
                                                            },
                                                            "doc": "use fast BAM compression (implies -b)\n"
                                                        },
                                                        {
                                                            "id": "input",
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "position": 4
                                                            },
                                                            "doc": "Input bam file.\n"
                                                        },
                                                        {
                                                            "default": false,
                                                            "id": "isbam",
                                                            "type": "boolean",
                                                            "inputBinding": {
                                                                "position": 2,
                                                                "prefix": "-b"
                                                            },
                                                            "doc": "output in BAM format\n"
                                                        },
                                                        {
                                                            "default": false,
                                                            "id": "iscram",
                                                            "type": "boolean",
                                                            "inputBinding": {
                                                                "position": 2,
                                                                "prefix": "-C"
                                                            },
                                                            "doc": "output in CRAM format\n"
                                                        },
                                                        {
                                                            "id": "randomseed",
                                                            "type": [
                                                                "null",
                                                                "float"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-s"
                                                            },
                                                            "doc": "integer part sets seed of random number generator [0];\nrest sets fraction of templates to subsample [no subsampling]\n"
                                                        },
                                                        {
                                                            "id": "readsingroup",
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-r"
                                                            },
                                                            "doc": "only include reads in read group STR [null]\n"
                                                        },
                                                        {
                                                            "id": "readsingroupfile",
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-R"
                                                            },
                                                            "doc": "only include reads with read group listed in FILE [null]\n"
                                                        },
                                                        {
                                                            "id": "readsinlibrary",
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-l"
                                                            },
                                                            "doc": "only include reads in library STR [null]\n"
                                                        },
                                                        {
                                                            "id": "readsquality",
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-q"
                                                            },
                                                            "doc": "only include reads with mapping quality >= INT [0]\n"
                                                        },
                                                        {
                                                            "id": "readswithbits",
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-f"
                                                            },
                                                            "doc": "only include reads with all bits set in INT set in FLAG [0]\n"
                                                        },
                                                        {
                                                            "id": "readswithoutbits",
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-F"
                                                            },
                                                            "doc": "only include reads with none of the bits set in INT set in FLAG [0]\n"
                                                        },
                                                        {
                                                            "id": "readtagtostrip",
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-x"
                                                            },
                                                            "doc": "read tag to strip (repeatable) [null]\n"
                                                        },
                                                        {
                                                            "id": "referencefasta",
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-T"
                                                            },
                                                            "doc": "reference sequence FASTA FILE [null]\n"
                                                        },
                                                        {
                                                            "id": "region",
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 5
                                                            },
                                                            "doc": "[region ...]\n"
                                                        },
                                                        {
                                                            "default": false,
                                                            "id": "samheader",
                                                            "type": "boolean",
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-h"
                                                            },
                                                            "doc": "include header in SAM output\n"
                                                        },
                                                        {
                                                            "id": "threads",
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-@"
                                                            },
                                                            "doc": "number of BAM compression threads [0]\n"
                                                        },
                                                        {
                                                            "default": false,
                                                            "id": "uncompressed",
                                                            "type": "boolean",
                                                            "inputBinding": {
                                                                "position": 1,
                                                                "prefix": "-u"
                                                            },
                                                            "doc": "uncompressed BAM output (implies -b)\n"
                                                        },
                                                        {
                                                            "id": "samheaderonly",
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-H"
                                                            }
                                                        },
                                                        {
                                                            "id": "outputreadsnotselectedbyfilters",
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-U"
                                                            }
                                                        },
                                                        {
                                                            "id": "listingreferencenamesandlengths",
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-t"
                                                            }
                                                        },
                                                        {
                                                            "id": "readtagtostri",
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-x"
                                                            }
                                                        },
                                                        {
                                                            "id": "output_format",
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-O"
                                                            }
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "id": "output_bam",
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "$(inputs.input.basename.replace('sam', 'bam'))"
                                                            }
                                                        }
                                                    ],
                                                    "doc": "Prints alignments in the specified input alignment file.\n\nWith no options or regions specified, prints all alignments in the specified input alignment file (in SAM, BAM, or CRAM format) to standard output in SAM format (with no header).\n\nYou may specify one or more space-separated region specifications after the input filename to restrict output to only those alignments which overlap the specified region(s). Use of region specifications requires a coordinate-sorted and indexed input file (in BAM or CRAM format).\n\nThe -b, -C, -1, -u, -h, -H, and -c options change the output format from the default of headerless SAM, and the -o and -U options set the output file name(s).\n\nThe -t and -T options provide additional reference data. One of these two options is required when SAM input does not contain @SQ headers, and the -T option is required whenever writing CRAM output.\n\nThe -L, -r, -R, -q, -l, -m, -f, and -F options filter the alignments that will be included in the output to only those alignments that match certain criteria.\n\nThe -x, -B, and -s options modify the data which is contained in each alignment.\n\nFinally, the -@ option can be used to allocate additional threads to be used for compression, and the -? option requests a long help message.\n\nUsage: samtools view [options] in.bam|in.sam|in.cram [region...]\n\nRegions can be specified as: RNAME[:STARTPOS[-ENDPOS]] and all position coordinates are 1-based.\n\nImportant note: when multiple regions are given, some alignments may be output multiple times if they overlap more than one of the specified regions.\n\nExamples of region specifications:\n\n`chr1'\nOutput all alignments mapped to the reference sequence named `chr1' (i.e. @SQ SN:chr1) .\n\n`chr2:1000000'\nThe region on chr2 beginning at base position 1,000,000 and ending at the end of the chromosome.\n\n`chr3:1000-2000'\nThe 1001bp region on chr3 beginning at base position 1,000 and ending at base position 2,000 (including both end positions).\n\nOPTIONS:\n\n-b\nOutput in the BAM format.\n\n-C\nOutput in the CRAM format (requires -T).\n\n-1\nEnable fast BAM compression (implies -b).\n\n-u\nOutput uncompressed BAM. This option saves time spent on compression/decompression and is thus preferred when the output is piped to another samtools command.\n\n-h\nInclude the header in the output.\n\n-H\nOutput the header only.\n\n-c\nInstead of printing the alignments, only count them and print the total number. All filter options, such as -f, -F, and -q, are taken into account.\n\n-?\nOutput long help and exit immediately.\n\n-o FILE\nOutput to FILE [stdout].\n\n-U FILE\nWrite alignments that are not selected by the various filter options to FILE. When this option is used, all alignments (or all alignments intersecting the regions specified) are written to either the output file or this file, but never both.\n\n-t FILE\nA tab-delimited FILE. Each line must contain the reference name in the first column and the length of the reference in the second column, with one line for each distinct reference. Any additional fields beyond the second column are ignored. This file also defines the order of the reference sequences in sorting. If you run: `samtools faidx <ref.fa>', the resulting index file <ref.fa>.fai can be used as this FILE.\n\n-T FILE\nA FASTA format reference FILE, optionally compressed by bgzip and ideally indexed by samtools faidx. If an index is not present, one will be generated for you.\n\n-L FILE\nOnly output alignments overlapping the input BED FILE [null].\n\n-r STR\nOnly output alignments in read group STR [null].\n\n-R FILE\nOutput alignments in read groups listed in FILE [null].\n\n-q INT\nSkip alignments with MAPQ smaller than INT [0].\n\n-l STR\nOnly output alignments in library STR [null].\n\n-m INT\nOnly output alignments with number of CIGAR bases consuming query sequence \ufffd\ufffd\ufffd INT [0]\n\n-f INT\nOnly output alignments with all bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x' (i.e. /^0x[0-9A-F]+/) or in octal by beginning with `0' (i.e. /^0[0-7]+/) [0].\n\n-F INT\nDo not output alignments with any bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x' (i.e. /^0x[0-9A-F]+/) or in octal by beginning with `0' (i.e. /^0[0-7]+/) [0].\n\n-x STR\nRead tag to exclude from output (repeatable) [null]\n\n-B\nCollapse the backward CIGAR operation.\n\n-s FLOAT\nInteger part is used to seed the random number generator [0]. Part after the decimal point sets the fraction of templates/pairs to subsample [no subsampling].\n\n-@ INT\nNumber of BAM compression threads to use in addition to main thread [0].\n\n-S\nIgnored for compatibility with previous samtools versions. Previously this option was required if input was in SAM format, but now the correct format is automatically detected by examining the first few characters of input.\n",
                                                    "arguments": [
                                                        {
                                                            "position": 0,
                                                            "prefix": "-o",
                                                            "valueFrom": "$(inputs.input.basename.replace('sam', 'bam'))"
                                                        },
                                                        {
                                                            "position": 0,
                                                            "prefix": "--threads",
                                                            "valueFrom": "$(runtime.cores)"
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "ResourceRequirement",
                                                            "ramMin": 32000,
                                                            "coresMin": 4
                                                        },
                                                        {
                                                            "class": "DockerRequirement",
                                                            "dockerPull": "mskcc/roslin-variant-samtools:1.3.1"
                                                        },
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "bwa/sam",
                                                        "id": "input"
                                                    },
                                                    {
                                                        "valueFrom": "${ return true; }",
                                                        "id": "isbam"
                                                    },
                                                    {
                                                        "valueFrom": "${ return true; }",
                                                        "id": "samheader"
                                                    }
                                                ],
                                                "out": [
                                                    "output_bam"
                                                ],
                                                "id": "sam_to_bam"
                                            },
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "id": "picard-AddOrReplaceReadGroups",
                                                    "baseCommand": [
                                                        "java"
                                                    ],
                                                    "arguments": [
                                                        {
                                                            "valueFrom": "/usr/bin/picard-tools/picard.jar",
                                                            "prefix": "-jar",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "AddOrReplaceReadGroups",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-XX:-UseGCOverheadLimit",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "TMP_DIR=$(runtime.tmpdir)",
                                                            "position": 2,
                                                            "shellQuote": false
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "ramMin": 25000,
                                                            "coresMin": 1,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-picard:2.9",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "doc": "None\n",
                                                    "inputs": [
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "I=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "I"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "Output file (BAM or SAM). Required.",
                                                            "inputBinding": {
                                                                "prefix": "O=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "O"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Optional sort order to output in. If not supplied OUTPUT is in the same order as INPUT. Default value - null. Possible values - {unsorted, queryname, coordinate, duplicate, unknown}",
                                                            "inputBinding": {
                                                                "prefix": "SO=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "SO"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Read Group ID Default value - 1. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "ID=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "ID"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "Read Group library Required.",
                                                            "inputBinding": {
                                                                "prefix": "LB=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "LB"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "Read Group platform (e.g. illumina, solid) Required.",
                                                            "inputBinding": {
                                                                "prefix": "PL=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "PL"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "Read Group platform unit (eg. run barcode) Required.",
                                                            "inputBinding": {
                                                                "prefix": "PU=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "PU"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "Read Group sample name Required.",
                                                            "inputBinding": {
                                                                "prefix": "SM=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "SM"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Read Group sequencing center name Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "CN=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "CN"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Read Group description Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "DS=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "DS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Read Group run date Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "DT=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "DT"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Read Group key sequence Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "KS=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "KS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Read Group flow order Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "FO=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "FO"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Read Group predicted insert size Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "PI=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "PI"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Read Group program group Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "PG=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "PG"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Read Group platform model Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "PM=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "PM"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "QUIET=True",
                                                                "position": 2
                                                            },
                                                            "id": "QUIET"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_MD5_FILE=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_MD5_FILE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": true,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_INDEX=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_INDEX"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "VERBOSITY=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "VERBOSITY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "VALIDATION_STRINGENCY=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "VALIDATION_STRINGENCY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "COMPRESSION_LEVEL=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "COMPRESSION_LEVEL"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "MAX_RECORDS_IN_RAM=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "MAX_RECORDS_IN_RAM"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.O)\n    return inputs.O;\n  return null;\n}\n"
                                                            },
                                                            "id": "bam"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.O)\n    return inputs.O.replace(/^.*[\\\\\\/]/, '').replace(/\\.[^/.]+$/, '').replace(/\\.bam/,'') + \".bai\";\n  return null;\n}"
                                                            },
                                                            "id": "bai"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "sam_to_bam/output_bam",
                                                        "id": "I"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.I.basename.replace(\".bam\", \".rg.bam\") }",
                                                        "id": "O"
                                                    },
                                                    {
                                                        "source": "add_rg_LB",
                                                        "id": "LB"
                                                    },
                                                    {
                                                        "source": "add_rg_PL",
                                                        "id": "PL"
                                                    },
                                                    {
                                                        "source": "add_rg_ID",
                                                        "id": "ID"
                                                    },
                                                    {
                                                        "source": "add_rg_PU",
                                                        "id": "PU"
                                                    },
                                                    {
                                                        "source": "add_rg_SM",
                                                        "id": "SM"
                                                    },
                                                    {
                                                        "source": "add_rg_CN",
                                                        "id": "CN"
                                                    },
                                                    {
                                                        "default": "coordinate",
                                                        "id": "SO"
                                                    }
                                                ],
                                                "out": [
                                                    "bam",
                                                    "bai"
                                                ],
                                                "id": "add_rg_id"
                                            }
                                        ],
                                        "requirements": []
                                    },
                                    "id": "align"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "id": "picard-MarkDuplicates",
                                        "baseCommand": [
                                            "java"
                                        ],
                                        "arguments": [
                                            {
                                                "valueFrom": "/usr/bin/picard-tools/picard.jar",
                                                "prefix": "-jar",
                                                "position": 1,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "MarkDuplicates",
                                                "position": 1,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-XX:-UseGCOverheadLimit",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "TMP_DIR=$(runtime.tmpdir)",
                                                "position": 2,
                                                "shellQuote": false
                                            }
                                        ],
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 42000,
                                                "coresMin": 1,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-picard:2.9",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "None\n",
                                        "inputs": [
                                            {
                                                "type": [
                                                    {
                                                        "type": "array",
                                                        "items": "File",
                                                        "inputBinding": {
                                                            "prefix": "I=",
                                                            "separate": false
                                                        }
                                                    }
                                                ],
                                                "inputBinding": {
                                                    "position": 2
                                                },
                                                "id": "I"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "This option is obsolete. ReadEnds will always be spilled to disk. Default value - 50000. This option can be set to 'null' to clear the default value.",
                                                "inputBinding": {
                                                    "prefix": "MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "MAX_SEQS"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Maximum number of file handles to keep open when spilling read ends to disk. Set this number a little lower than the per-process maximum number of file that may be open. This number can be found by executing the 'ulimit -n' command on a Unix system. Default value - 8000. This option can be set to 'null' to clear the default value.",
                                                "inputBinding": {
                                                    "prefix": "MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "MAX_FILE_HANDLES"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "This number, plus the maximum RAM available to the JVM, determine the memory footprint used by some of the sorting collections. If you are running out of memory, try reducing this number. Default value - 0.25. This option can be set to 'null' to clear the default value.",
                                                "inputBinding": {
                                                    "prefix": "SORTING_COLLECTION_SIZE_RATIO=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "SORTING_COLLECTION_SIZE_RATIO"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Barcode SAM tag (ex. BC for 10X Genomics) Default value - null.",
                                                "inputBinding": {
                                                    "prefix": "BARCODE_TAG=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "BARCODE_TAG"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Read one barcode SAM tag (ex. BX for 10X Genomics) Default value - null.",
                                                "inputBinding": {
                                                    "prefix": "READ_ONE_BARCODE_TAG=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "READ_ONE_BARCODE_TAG"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Read two barcode SAM tag (ex. BX for 10X Genomics) Default value - null.",
                                                "inputBinding": {
                                                    "prefix": "READ_TWO_BARCODE_TAG=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "READ_TWO_BARCODE_TAG"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "If a read appears in a duplicate set, add two tags. The first tag, DUPLICATE_SET_SIZE_TAG (DS), indicates the size of the duplicate set. The smallest possible DS value is 2 which occurs when two reads map to the same portion of the reference only one of which is marked as duplicate. The second tag, DUPLICATE_SET_INDEX_TAG (DI), represents a unique identifier for the duplicate set to which the record belongs. This identifier is the index-in-file of the representative read that was selected out of the duplicate set. Default value - false. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                "inputBinding": {
                                                    "prefix": "TAG_DUPLICATE_SET_MEMBERS=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "TAG_DUPLICATE_SET_MEMBERS"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "If true remove 'optical' duplicates and other duplicates that appear to have arisen from the sequencing process instead of the library preparation process, even if REMOVE_DUPLICATES is false. If REMOVE_DUPLICATES is true, all duplicates are removed and this option is ignored. Default value - false. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                "inputBinding": {
                                                    "prefix": "REMOVE_SEQUENCING_DUPLICATES=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "REMOVE_SEQUENCING_DUPLICATES"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Determines how duplicate types are recorded in the DT optional attribute. Default value - DontTag. This option can be set to 'null' to clear the default value. Possible values - {DontTag, OpticalOnly, All}",
                                                "inputBinding": {
                                                    "prefix": "TAGGING_POLICY=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "TAGGING_POLICY"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Clear DT tag from input SAM records. Should be set to false if input SAM doesn't have this tag. Default true Default value - true. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                "inputBinding": {
                                                    "prefix": "CLEAR_DT=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "CLEAR_DT"
                                            },
                                            {
                                                "type": "string",
                                                "doc": "The output file to write marked records to Required.",
                                                "inputBinding": {
                                                    "prefix": "O=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "O"
                                            },
                                            {
                                                "type": "string",
                                                "doc": "File to write duplication metrics to Required.",
                                                "inputBinding": {
                                                    "prefix": "METRICS_FILE=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "M"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "doc": "If true do not write duplicates to the output file instead of writing them with appropriate flags set. Default value - false. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                "inputBinding": {
                                                    "prefix": "REMOVE_DUPLICATES=True",
                                                    "position": 2
                                                },
                                                "id": "REMOVE_DUPLICATES"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "If not null, assume that the input file has this order even if the header says otherwise. Default value - null. Possible values - {unsorted, queryname, coordinate, duplicate, unknown} Cannot be used in conjuction with option(s) ASSUME_SORTED (AS)",
                                                "inputBinding": {
                                                    "prefix": "ASSUME_SORT_ORDER=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "ASO"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "The scoring strategy for choosing the non-duplicate among candidates. Default value - SUM_OF_BASE_QUALITIES. This option can be set to 'null' to clear the default value. Possible values - {SUM_OF_BASE_QUALITIES, TOTAL_MAPPED_REFERENCE_LENGTH, RANDOM}",
                                                "inputBinding": {
                                                    "prefix": "DUPLICATE_SCORING_STRATEGY=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "DS"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "The program record ID for the @PG record(s) created by this program. Set to null to disable PG record creation. This string may have a suffix appended to avoid collision with other program record IDs. Default value - MarkDuplicates. This option can be set to 'null' to clear the default value.",
                                                "inputBinding": {
                                                    "prefix": "PROGRAM_RECORD_ID=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "PG"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Value of VN tag of PG record to be created. If not specified, the version will be detected automatically. Default value - null.",
                                                "inputBinding": {
                                                    "prefix": "PROGRAM_GROUP_VERSION=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "PG_VERSION"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Value of CL tag of PG record to be created. If not supplied the command line will be detected automatically. Default value - null.",
                                                "inputBinding": {
                                                    "prefix": "PROGRAM_GROUP_COMMAND_LINE=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "PG_COMMAND"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Value of PN tag of PG record to be created. Default value - MarkDuplicates. This option can be set to 'null' to clear the default value.",
                                                "inputBinding": {
                                                    "prefix": "PROGRAM_GROUP_NAME=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "PG_NAME"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Comment(s) to include in the output file's header. Default value - null. This option may be specified 0 or more times.",
                                                "inputBinding": {
                                                    "prefix": "COMMENT=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "CO"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Regular expression that can be used to parse read names in the incoming SAM file. Read names are parsed to extract three variables - tile/region, x coordinate and y coordinate. These values are used to estimate the rate of optical duplication in order to give a more accurate estimated library size. Set this option to null to disable optical duplicate detection, e.g. for RNA-seq or other data where duplicate sets are extremely large and estimating library complexity is not an aim. Note that without optical duplicate counts, library size estimation will be inaccurate. The regular expression should contain three capture groups for the three variables, in order. It must match the entire read name. Note that if the default regex is specified, a regex match is not actually done, but instead the read name is split on colon character. For 5 element names, the 3rd, 4th and 5th elements are assumed to be tile, x and y values. For 7 element names (CASAVA 1.8), the 5th, 6th, and 7th elements are assumed to be tile, x and y values. Default value - <optimized capture of last three ' -' separated fields as numeric values>. This option can be set to 'null' to clear the default value.",
                                                "inputBinding": {
                                                    "prefix": "READ_NAME_REGEX=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "READ_NAME_REGEX"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "The maximum offset between two duplicate clusters in order to consider them optical duplicates. The default is appropriate for unpatterned versions of the Illumina platform. For the patterned flowcell models, 2500 is moreappropriate. For other platforms and models, users should experiment to find what works best. Default value - 100. This option can be set to 'null' to clear the default value.",
                                                "inputBinding": {
                                                    "prefix": "OPTICAL_DUPLICATE_PIXEL_DISTANCE=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "OPTICAL_DUPLICATE_PIXEL_DISTANCE"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "This number is the maximum size of a set of duplicate reads for which we will attempt to determine which are optical duplicates. Please be aware that if you raise this value too high and do encounter a very large set of duplicate reads, it will severely affect the runtime of this tool. To completely disable this check, set the value to -1. Default value - 300000. This option can be set to 'null' to clear the default value.",
                                                "inputBinding": {
                                                    "prefix": "MAX_OPTICAL_DUPLICATE_SET_SIZE=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "MAX_OPTICAL_DUPLICATE_SET_SIZE"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "doc": "If true (default), then the sort order in the header file will be ignored. Default value - true. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                "inputBinding": {
                                                    "prefix": "ASSUME_SORTED=True",
                                                    "separate": false,
                                                    "position": 2
                                                },
                                                "id": "AS"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Stop after processing N reads, mainly for debugging. Default value - 0. This option can be set to 'null' to clear the default value.",
                                                "inputBinding": {
                                                    "prefix": "STOP_AFTER=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "STOP_AFTER"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "inputBinding": {
                                                    "prefix": "QUIET=True",
                                                    "position": 2
                                                },
                                                "id": "QUIET"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "inputBinding": {
                                                    "prefix": "CREATE_MD5_FILE=True",
                                                    "position": 2
                                                },
                                                "id": "CREATE_MD5_FILE"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": true,
                                                "inputBinding": {
                                                    "prefix": "CREATE_INDEX=True",
                                                    "position": 2
                                                },
                                                "id": "CREATE_INDEX"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "inputBinding": {
                                                    "prefix": "VERBOSITY=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "VERBOSITY"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "inputBinding": {
                                                    "prefix": "VALIDATION_STRINGENCY=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "VALIDATION_STRINGENCY"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "inputBinding": {
                                                    "prefix": "COMPRESSION_LEVEL=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "COMPRESSION_LEVEL"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "inputBinding": {
                                                    "prefix": "MAX_RECORDS_IN_RAM=",
                                                    "position": 2,
                                                    "separate": false
                                                },
                                                "id": "MAX_RECORDS_IN_RAM"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "secondaryFiles": [
                                                    "^.bai"
                                                ],
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.O)\n    return inputs.O;\n  return null;\n}\n"
                                                },
                                                "id": "bam"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "File"
                                                ],
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.O)\n    return inputs.O.replace(/^.*[\\\\\\/]/, '').replace(/\\.[^/.]+$/, '').replace(/\\.bam/,'') + \".bai\";\n  return null;\n}\n"
                                                },
                                                "id": "bai"
                                            },
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.M)\n    return inputs.M;\n  return null;\n}\n"
                                                },
                                                "id": "mdmetrics"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "opt_dup_pix_dist",
                                            "id": "OPTICAL_DUPLICATE_PIXEL_DISTANCE"
                                        },
                                        {
                                            "source": "align/bam",
                                            "id": "I"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.I[0].basename.replace(/\\.chunk\\d\\d\\d\\.rg\\.bam/, \".rg.md.bam\") }",
                                            "id": "O"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.I[0].basename.replace(/\\.chunk\\d\\d\\d\\.rg\\.bam/, \".rg.md_metrics\") }",
                                            "id": "M"
                                        }
                                    ],
                                    "out": [
                                        "bam",
                                        "bai",
                                        "mdmetrics"
                                    ],
                                    "id": "mark_duplicates"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "Workflow",
                                        "id": "gather-metrics-sample",
                                        "requirements": [
                                            {
                                                "class": "MultipleInputFeatureRequirement"
                                            },
                                            {
                                                "class": "ScatterFeatureRequirement"
                                            },
                                            {
                                                "class": "SubworkflowFeatureRequirement"
                                            },
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "class": "StepInputExpressionRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": "File",
                                                "id": "bam"
                                            },
                                            {
                                                "type": "string",
                                                "id": "genome"
                                            },
                                            {
                                                "type": "File",
                                                "id": "bait_intervals"
                                            },
                                            {
                                                "type": "File",
                                                "id": "target_intervals"
                                            },
                                            {
                                                "type": "File",
                                                "id": "fp_intervals"
                                            },
                                            {
                                                "type": "string",
                                                "id": "gatk_jar_path"
                                            },
                                            {
                                                "type": "string",
                                                "id": "conpair_markers_bed"
                                            },
                                            {
                                                "type": "File",
                                                "secondaryFiles": [
                                                    ".amb",
                                                    ".ann",
                                                    ".bwt",
                                                    ".pac",
                                                    ".sa",
                                                    ".fai",
                                                    "^.dict"
                                                ],
                                                "id": "ref_fasta"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputSource": "gcbias_metrics/pdf",
                                                "id": "gcbias_pdf"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "gcbias_metrics/out_file",
                                                "id": "gcbias_metrics"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "gcbias_metrics/summary",
                                                "id": "gcbias_summary"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "as_metrics/out_file",
                                                "id": "as_metrics"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "hs_metrics/out_file",
                                                "id": "hs_metrics"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "hst_metrics/per_target_out",
                                                "id": "per_target_coverage"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "insert_metrics/is_file",
                                                "id": "insert_metrics"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "insert_metrics/is_hist",
                                                "id": "insert_pdf"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "doc/out_file",
                                                "id": "doc_basecounts"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "pileup/out_file",
                                                "id": "conpair_pileup"
                                            }
                                        ],
                                        "steps": [
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "id": "picard-CollectAlignmentSummaryMetrics",
                                                    "baseCommand": [
                                                        "java"
                                                    ],
                                                    "arguments": [
                                                        {
                                                            "valueFrom": "/usr/bin/picard-tools/picard.jar",
                                                            "prefix": "-jar",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "CollectAlignmentSummaryMetrics",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-XX:-UseGCOverheadLimit",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "TMP_DIR=$(runtime.tmpdir)",
                                                            "position": 2,
                                                            "shellQuote": false
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "ramMin": 16000,
                                                            "coresMin": 1,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-picard:2.9",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "doc": "None\n",
                                                    "inputs": [
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "I=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "I"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Paired-end reads above this insert size will be considered chimeric along with inter-chromosomal pairs. Default value - 100000. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "MAX_INSERT_SIZE=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "MAX_INSERT_SIZE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Paired-end reads that do not have this expected orientation will be considered chimeric. Default value - [FR]. This option can be set to 'null' to clear the default value. Possible values - {FR, RF, TANDEM} This option may be specified 0 or more times. This option can be set to 'null' to clear the default list.",
                                                            "inputBinding": {
                                                                "prefix": "EXPECTED_PAIR_ORIENTATIONS=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "EXPECTED_PAIR_ORIENTATIONS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "List of adapter sequences to use when processing the alignment metrics. Default value - [AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT, AGATCGGAAGAGCTCGTATGCCGTCTTCTGCTTG, AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT, AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG, AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT, AGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNNNATCTCGTATGCCGTCTTCTGCTTG]. This option can be set to 'null' to clear the default value. This option may be specified 0 or more times. This option can be set to 'null' to clear the default list.",
                                                            "inputBinding": {
                                                                "prefix": "ADAPTER_SEQUENCE=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "ADAPTER_SEQUENCE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string",
                                                                    "inputBinding": {
                                                                        "prefix": "LEVEL=",
                                                                        "separate": false
                                                                    }
                                                                }
                                                            ],
                                                            "inputBinding": {
                                                                "position": 2
                                                            },
                                                            "id": "LEVEL"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Whether the SAM or BAM file consists of bisulfite sequenced reads. Default value - false. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                            "inputBinding": {
                                                                "prefix": "IS_BISULFITE_SEQUENCED=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "BS"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "File to write the output to. Required.",
                                                            "inputBinding": {
                                                                "prefix": "O=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "O"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "If true (default), then the sort order in the header file will be ignored. Default value - true. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                            "inputBinding": {
                                                                "prefix": "ASSUME_SORTED=True",
                                                                "position": 2
                                                            },
                                                            "id": "AS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Stop after processing N reads, mainly for debugging. Default value - 0. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "STOP_AFTER=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "STOP_AFTER"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "REFERENCE_SEQUENCE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "REFERENCE_SEQUENCE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "QUIET=True",
                                                                "position": 2
                                                            },
                                                            "id": "QUIET"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_MD5_FILE=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_MD5_FILE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_INDEX=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_INDEX"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "VERBOSITY=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "VERBOSITY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "default": "SILENT",
                                                            "inputBinding": {
                                                                "prefix": "VALIDATION_STRINGENCY=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "VALIDATION_STRINGENCY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "COMPRESSION_LEVEL=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "COMPRESSION_LEVEL"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "MAX_RECORDS_IN_RAM=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "MAX_RECORDS_IN_RAM"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n    if (inputs.O)\n        return inputs.O;\n    return null;\n}\n"
                                                            },
                                                            "id": "out_file"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "bam",
                                                        "id": "I"
                                                    },
                                                    {
                                                        "source": "ref_fasta",
                                                        "id": "REFERENCE_SEQUENCE"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.I.basename.replace(\".bam\", \".asmetrics\")}",
                                                        "id": "O"
                                                    },
                                                    {
                                                        "valueFrom": "${return [\"null\", \"SAMPLE\"]}",
                                                        "id": "LEVEL"
                                                    }
                                                ],
                                                "out": [
                                                    "out_file"
                                                ],
                                                "id": "as_metrics"
                                            },
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "id": "picard-CollectHsMetrics",
                                                    "baseCommand": [
                                                        "java"
                                                    ],
                                                    "arguments": [
                                                        {
                                                            "valueFrom": "/usr/bin/picard-tools/picard.jar",
                                                            "prefix": "-jar",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "CollectHsMetrics",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-XX:-UseGCOverheadLimit",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "TMP_DIR=$(runtime.tmpdir)",
                                                            "position": 2,
                                                            "shellQuote": false
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "ramMin": 16000,
                                                            "coresMin": 1,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-picard:2.9",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "doc": "None\n",
                                                    "inputs": [
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "I=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "I"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "doc": "An interval list file that contains the locations of the baits used. Default value - null. This option must be specified at least 1 times.",
                                                            "inputBinding": {
                                                                "prefix": "BAIT_INTERVALS=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "BI"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Bait set name. If not provided it is inferred from the filename of the bait intervals. Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "BAIT_SET_NAME=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "N"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "doc": "An interval list file that contains the locations of the targets. Default value - null. This option must be specified at least 1 times.",
                                                            "inputBinding": {
                                                                "prefix": "TARGET_INTERVALS=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "TI"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "The output file to write the metrics to. Required.",
                                                            "inputBinding": {
                                                                "prefix": "O=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "O"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string",
                                                                    "inputBinding": {
                                                                        "prefix": "LEVEL=",
                                                                        "separate": false
                                                                    }
                                                                }
                                                            ],
                                                            "inputBinding": {
                                                                "position": 2
                                                            },
                                                            "id": "LEVEL"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "An optional file to output per target coverage information to. Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "PER_TARGET_COVERAGE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "PER_TARGET_COVERAGE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "An optional file to output per base coverage information to. The per-base file contains one line per target base and can grow very large. It is not recommended for use with large target sets. Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "PER_BASE_COVERAGE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "PER_BASE_COVERAGE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The maximum distance between a read and the nearest probe/bait/amplicon for the read to be considered 'near probe' and included in percent selected. Default value - 250. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "NEAR_DISTANCE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "NEAR_DISTANCE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Minimum mapping quality for a read to contribute coverage. Default value - 20. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "MINIMUM_MAPPING_QUALITY=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "MQ"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Minimum base quality for a base to contribute coverage. Default value - 20. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "MINIMUM_BASE_QUALITY=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "Q"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "if we are to clip overlapping reads, false otherwise. Default value - true. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                            "inputBinding": {
                                                                "prefix": "CLIP_OVERLAPPING_READS=True",
                                                                "position": 2
                                                            },
                                                            "id": "CLIP_OVERLAPPING_READS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Parameter to set a max coverage limit for Theoretical Sensitivity calculations. Default is 200. Default value - 200. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "COVERAGE_CAP=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "COVMAX"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Sample Size used for Theoretical Het Sensitivity sampling. Default is 10000. Default value - 10000. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "SAMPLE_SIZE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "SAMPLE_SIZE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "QUIET=True",
                                                                "position": 2
                                                            },
                                                            "id": "QUIET"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_MD5_FILE=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_MD5_FILE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_INDEX=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_INDEX"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "VERBOSITY=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "VERBOSITY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "default": "SILENT",
                                                            "inputBinding": {
                                                                "prefix": "VALIDATION_STRINGENCY=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "VALIDATION_STRINGENCY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "COMPRESSION_LEVEL=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "COMPRESSION_LEVEL"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "MAX_RECORDS_IN_RAM=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "MAX_RECORDS_IN_RAM"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "REFERENCE_SEQUENCE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "REFERENCE_SEQUENCE"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.O)\n    return inputs.O;\n  return null;\n}\n"
                                                            },
                                                            "id": "out_file"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.PER_TARGET_COVERAGE)\n    return inputs.PER_TARGET_COVERAGE;\n  return null;\n}\n"
                                                            },
                                                            "id": "per_target_out"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "bait_intervals",
                                                        "id": "BI"
                                                    },
                                                    {
                                                        "source": "target_intervals",
                                                        "id": "TI"
                                                    },
                                                    {
                                                        "source": "bam",
                                                        "id": "I"
                                                    },
                                                    {
                                                        "source": "ref_fasta",
                                                        "id": "REFERENCE_SEQUENCE"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.I.basename.replace(\".bam\", \".hsmetrics\")}",
                                                        "id": "O"
                                                    },
                                                    {
                                                        "valueFrom": "${ return [\"null\", \"SAMPLE\"];}",
                                                        "id": "LEVEL"
                                                    }
                                                ],
                                                "out": [
                                                    "out_file",
                                                    "per_target_out"
                                                ],
                                                "id": "hs_metrics"
                                            },
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "id": "picard-CollectHsMetrics",
                                                    "baseCommand": [
                                                        "java"
                                                    ],
                                                    "arguments": [
                                                        {
                                                            "valueFrom": "/usr/bin/picard-tools/picard.jar",
                                                            "prefix": "-jar",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "CollectHsMetrics",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-XX:-UseGCOverheadLimit",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "TMP_DIR=$(runtime.tmpdir)",
                                                            "position": 2,
                                                            "shellQuote": false
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "ramMin": 16000,
                                                            "coresMin": 1,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-picard:2.9",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "doc": "None\n",
                                                    "inputs": [
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "I=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "I"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "doc": "An interval list file that contains the locations of the baits used. Default value - null. This option must be specified at least 1 times.",
                                                            "inputBinding": {
                                                                "prefix": "BAIT_INTERVALS=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "BI"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Bait set name. If not provided it is inferred from the filename of the bait intervals. Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "BAIT_SET_NAME=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "N"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "doc": "An interval list file that contains the locations of the targets. Default value - null. This option must be specified at least 1 times.",
                                                            "inputBinding": {
                                                                "prefix": "TARGET_INTERVALS=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "TI"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "The output file to write the metrics to. Required.",
                                                            "inputBinding": {
                                                                "prefix": "O=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "O"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string",
                                                                    "inputBinding": {
                                                                        "prefix": "LEVEL=",
                                                                        "separate": false
                                                                    }
                                                                }
                                                            ],
                                                            "inputBinding": {
                                                                "position": 2
                                                            },
                                                            "id": "LEVEL"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "An optional file to output per target coverage information to. Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "PER_TARGET_COVERAGE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "PER_TARGET_COVERAGE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "An optional file to output per base coverage information to. The per-base file contains one line per target base and can grow very large. It is not recommended for use with large target sets. Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "PER_BASE_COVERAGE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "PER_BASE_COVERAGE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The maximum distance between a read and the nearest probe/bait/amplicon for the read to be considered 'near probe' and included in percent selected. Default value - 250. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "NEAR_DISTANCE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "NEAR_DISTANCE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Minimum mapping quality for a read to contribute coverage. Default value - 20. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "MINIMUM_MAPPING_QUALITY=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "MQ"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Minimum base quality for a base to contribute coverage. Default value - 20. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "MINIMUM_BASE_QUALITY=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "Q"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "if we are to clip overlapping reads, false otherwise. Default value - true. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                            "inputBinding": {
                                                                "prefix": "CLIP_OVERLAPPING_READS=True",
                                                                "position": 2
                                                            },
                                                            "id": "CLIP_OVERLAPPING_READS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Parameter to set a max coverage limit for Theoretical Sensitivity calculations. Default is 200. Default value - 200. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "COVERAGE_CAP=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "COVMAX"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Sample Size used for Theoretical Het Sensitivity sampling. Default is 10000. Default value - 10000. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "SAMPLE_SIZE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "SAMPLE_SIZE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "QUIET=True",
                                                                "position": 2
                                                            },
                                                            "id": "QUIET"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_MD5_FILE=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_MD5_FILE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_INDEX=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_INDEX"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "VERBOSITY=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "VERBOSITY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "default": "SILENT",
                                                            "inputBinding": {
                                                                "prefix": "VALIDATION_STRINGENCY=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "VALIDATION_STRINGENCY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "COMPRESSION_LEVEL=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "COMPRESSION_LEVEL"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "MAX_RECORDS_IN_RAM=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "MAX_RECORDS_IN_RAM"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "REFERENCE_SEQUENCE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "REFERENCE_SEQUENCE"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.O)\n    return inputs.O;\n  return null;\n}\n"
                                                            },
                                                            "id": "out_file"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.PER_TARGET_COVERAGE)\n    return inputs.PER_TARGET_COVERAGE;\n  return null;\n}\n"
                                                            },
                                                            "id": "per_target_out"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "bait_intervals",
                                                        "id": "BI"
                                                    },
                                                    {
                                                        "source": "target_intervals",
                                                        "id": "TI"
                                                    },
                                                    {
                                                        "source": "bam",
                                                        "id": "I"
                                                    },
                                                    {
                                                        "source": "ref_fasta",
                                                        "id": "REFERENCE_SEQUENCE"
                                                    },
                                                    {
                                                        "valueFrom": "${ return \"all_reads_hsmerics_dump.txt\"; }",
                                                        "id": "O"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.I.basename.replace(\".bam\", \".hstmetrics\")}",
                                                        "id": "PER_TARGET_COVERAGE"
                                                    },
                                                    {
                                                        "valueFrom": "${ return [\"ALL_READS\"];}",
                                                        "id": "LEVEL"
                                                    }
                                                ],
                                                "out": [
                                                    "per_target_out"
                                                ],
                                                "id": "hst_metrics"
                                            },
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "id": "picard-CollectInsertSizeMetrics",
                                                    "baseCommand": [
                                                        "java"
                                                    ],
                                                    "arguments": [
                                                        {
                                                            "valueFrom": "/usr/bin/picard-tools/picard.jar",
                                                            "prefix": "-jar",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "CollectInsertSizeMetrics",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-XX:-UseGCOverheadLimit",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "TMP_DIR=$(runtime.tmpdir)",
                                                            "position": 2,
                                                            "shellQuote": false
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "ramMin": 16000,
                                                            "coresMin": 1,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-picard:2.9",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "doc": "None\n",
                                                    "inputs": [
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "I=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "I"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "File to write insert size Histogram chart to. Required.",
                                                            "inputBinding": {
                                                                "prefix": "HISTOGRAM_FILE=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "H"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Generate mean, sd and plots by trimming the data down to MEDIAN + DEVIATIONS*MEDIAN_ABSOLUTE_DEVIATION. This is done because insert size data typically includes enough anomalous values from chimeras and other artifacts to make the mean and sd grossly misleading regarding the real distribution. Default value - 10.0. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "DEVIATIONS=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "DEVIATIONS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Explicitly sets the Histogram width, overriding automatic truncation of Histogram tail. Also, when calculating mean and standard deviation, only bins <= Histogram_WIDTH will be included. Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "HISTOGRAM_WIDTH=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "W"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "When generating the Histogram, discard any data categories (out of FR, TANDEM, RF) that have fewer than this percentage of overall reads. (Range - 0 to 1). Default value - 0.05. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "MINIMUM_PCT=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "M"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string",
                                                                    "inputBinding": {
                                                                        "prefix": "LEVEL=",
                                                                        "separate": false
                                                                    }
                                                                }
                                                            ],
                                                            "inputBinding": {
                                                                "position": 2
                                                            },
                                                            "id": "LEVEL"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "If true, also include reads marked as duplicates in the insert size histogram. Default value - false. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                            "inputBinding": {
                                                                "prefix": "INCLUDE_DUPLICATES=True",
                                                                "position": 2
                                                            },
                                                            "id": "INCLUDE_DUPLICATES"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "File to write the output to. Required.",
                                                            "inputBinding": {
                                                                "prefix": "O=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "O"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "If true (default), then the sort order in the header file will be ignored. Default value - true. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                            "inputBinding": {
                                                                "prefix": "ASSUME_SORTED=True",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "AS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Stop after processing N reads, mainly for debugging. Default value - 0. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "STOP_AFTER=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "STOP_AFTER"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "QUIET=True",
                                                                "position": 2
                                                            },
                                                            "id": "QUIET"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_MD5_FILE=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_MD5_FILE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_INDEX=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_INDEX"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "VERBOSITY=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "VERBOSITY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "default": "SILENT",
                                                            "inputBinding": {
                                                                "prefix": "VALIDATION_STRINGENCY=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "VALIDATION_STRINGENCY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "COMPRESSION_LEVEL=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "COMPRESSION_LEVEL"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "MAX_RECORDS_IN_RAM=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "MAX_RECORDS_IN_RAM"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.O)\n    return inputs.O;\n  return null;\n}\n"
                                                            },
                                                            "id": "is_file"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.H)\n    return inputs.H;\n  return null;\n}\n"
                                                            },
                                                            "id": "is_hist"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "bam",
                                                        "id": "I"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.I.basename.replace(\".bam\", \".ismetrics.pdf\")}",
                                                        "id": "H"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.I.basename.replace(\".bam\", \".ismetrics\")}",
                                                        "id": "O"
                                                    },
                                                    {
                                                        "valueFrom": "${ return [\"null\", \"SAMPLE\"];}",
                                                        "id": "LEVEL"
                                                    }
                                                ],
                                                "out": [
                                                    "is_file",
                                                    "is_hist"
                                                ],
                                                "id": "insert_metrics"
                                            },
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "id": "picard-CollectGcBiasMetrics",
                                                    "baseCommand": [
                                                        "java"
                                                    ],
                                                    "arguments": [
                                                        {
                                                            "valueFrom": "/usr/bin/picard-tools/picard.jar",
                                                            "prefix": "-jar",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "CollectGcBiasMetrics",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-XX:-UseGCOverheadLimit",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "TMP_DIR=$(runtime.tmpdir)",
                                                            "position": 2,
                                                            "shellQuote": false
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "ramMin": 16000,
                                                            "coresMin": 1,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-picard:2.9",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "doc": "None\n",
                                                    "inputs": [
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "I=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "I"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "REFERENCE_SEQUENCE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "REFERENCE_SEQUENCE"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "The PDF file to render the chart to. Required.",
                                                            "inputBinding": {
                                                                "prefix": "CHART_OUTPUT=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "CHART"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "The text file to write summary metrics to. Required.",
                                                            "inputBinding": {
                                                                "prefix": "SUMMARY_OUTPUT=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "S"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The size of the scanning windows on the reference genome that are used to bin reads. Default value - 100. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "SCAN_WINDOW_SIZE=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "WINDOW_SIZE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "For summary metrics, exclude GC windows that include less than this fraction of the genome. Default value - 1.0E-5. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "MINIMUM_GENOME_FRACTION=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "MGF"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "Whether the SAM or BAM file consists of bisulfite sequenced reads. Default value - false. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                            "inputBinding": {
                                                                "prefix": "IS_BISULFITE_SEQUENCED=True",
                                                                "position": 2
                                                            },
                                                            "id": "BS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "to get additional results without duplicates. This option allows to gain two plots per level at the same time - one is the usual one and the other excludes duplicates. Default value - false. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                            "inputBinding": {
                                                                "prefix": "ALSO_IGNORE_DUPLICATES=True",
                                                                "position": 2
                                                            },
                                                            "id": "ALSO_IGNORE_DUPLICATES"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "File to write the output to. Required.",
                                                            "inputBinding": {
                                                                "prefix": "O=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "O"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "If true (default), then the sort order in the header file will be ignored. Default value - true. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                            "inputBinding": {
                                                                "prefix": "ASSUME_SORTED=True",
                                                                "position": 2
                                                            },
                                                            "id": "AS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Stop after processing N reads, mainly for debugging. Default value - 0. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "STOP_AFTER=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "STOP_AFTER"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "QUIET=True",
                                                                "position": 2
                                                            },
                                                            "id": "QUIET"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_MD5_FILE=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_MD5_FILE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_INDEX=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_INDEX"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "VERBOSITY=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "VERBOSITY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "default": "SILENT",
                                                            "inputBinding": {
                                                                "prefix": "VALIDATION_STRINGENCY=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "VALIDATION_STRINGENCY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "COMPRESSION_LEVEL=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "COMPRESSION_LEVEL"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "MAX_RECORDS_IN_RAM=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "MAX_RECORDS_IN_RAM"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.CHART)\n    return inputs.CHART;\n  return null;\n}\n"
                                                            },
                                                            "id": "pdf"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.O)\n    return inputs.O;\n  return null;\n}\n"
                                                            },
                                                            "id": "out_file"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.S)\n    return inputs.S;\n  return null;\n}\n"
                                                            },
                                                            "id": "summary"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "bam",
                                                        "id": "I"
                                                    },
                                                    {
                                                        "source": "ref_fasta",
                                                        "id": "REFERENCE_SEQUENCE"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.I.basename.replace(\".bam\", \".gcbiasmetrics\") }",
                                                        "id": "O"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.I.basename.replace(\".bam\", \".gcbias.pdf\")}",
                                                        "id": "CHART"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.I.basename.replace(\".bam\", \".gcbias.summary\")}",
                                                        "id": "S"
                                                    }
                                                ],
                                                "out": [
                                                    "pdf",
                                                    "out_file",
                                                    "summary"
                                                ],
                                                "id": "gcbias_metrics"
                                            },
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "id": "gatk-DepthOfCoverage",
                                                    "baseCommand": [
                                                        "java"
                                                    ],
                                                    "arguments": [
                                                        {
                                                            "valueFrom": "/usr/bin/gatk.jar",
                                                            "prefix": "-jar",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "DepthOfCoverage",
                                                            "prefix": "-T",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-XX:-UseGCOverheadLimit",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "ramMin": 16000,
                                                            "coresMin": 1,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-gatk:3.3-0",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "doc": "None\n",
                                                    "inputs": [
                                                        {
                                                            "type": [
                                                                "string",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "An output file created by the walker. Will overwrite contents if file exists",
                                                            "inputBinding": {
                                                                "prefix": "--out",
                                                                "position": 2
                                                            },
                                                            "id": "out"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "Minimum mapping quality of reads to count towards depth",
                                                            "inputBinding": {
                                                                "prefix": "--minMappingQuality",
                                                                "position": 2
                                                            },
                                                            "id": "minMappingQuality"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Maximum mapping quality of reads to count towards",
                                                            "inputBinding": {
                                                                "prefix": "--maxMappingQuality",
                                                                "position": 2
                                                            },
                                                            "id": "maxMappingQuality"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "Minimum quality of bases to count towards depth",
                                                            "inputBinding": {
                                                                "prefix": "--minBaseQuality",
                                                                "position": 2
                                                            },
                                                            "id": "minBaseQuality"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Maximum quality of bases to count towards depth",
                                                            "inputBinding": {
                                                                "prefix": "--maxBaseQuality",
                                                                "position": 2
                                                            },
                                                            "id": "maxBaseQuality"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "How should overlapping reads from the same",
                                                            "inputBinding": {
                                                                "prefix": "--countType",
                                                                "position": 2
                                                            },
                                                            "id": "countType"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Add base counts to per-locus output",
                                                            "inputBinding": {
                                                                "prefix": "--printBaseCounts",
                                                                "position": 2
                                                            },
                                                            "id": "printBaseCounts"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Do not calculate per-sample per-depth counts of loci",
                                                            "inputBinding": {
                                                                "prefix": "--omitLocusTable",
                                                                "position": 2
                                                            },
                                                            "id": "omitLocusTable"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Do not calculate per-interval statistics",
                                                            "inputBinding": {
                                                                "prefix": "--omitIntervalStatistics",
                                                                "position": 2
                                                            },
                                                            "id": "omitIntervalStatistics"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Do not output depth of coverage at each base",
                                                            "inputBinding": {
                                                                "prefix": "--omitDepthOutputAtEachBase",
                                                                "position": 2
                                                            },
                                                            "id": "omitDepthOutputAtEachBase"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Calculate coverage statistics over this list of genes",
                                                            "inputBinding": {
                                                                "prefix": "--calculateCoverageOverGenes",
                                                                "position": 2
                                                            },
                                                            "id": "calculateCoverageOverGenes"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "The format of the output file",
                                                            "inputBinding": {
                                                                "prefix": "--outputFormat",
                                                                "position": 2
                                                            },
                                                            "id": "outputFormat"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Include sites where the reference is N",
                                                            "inputBinding": {
                                                                "prefix": "--includeRefNSites",
                                                                "position": 2
                                                            },
                                                            "id": "includeRefNSites"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Print the bin values and exit immediately",
                                                            "inputBinding": {
                                                                "prefix": "--printBinEndpointsAndExit",
                                                                "position": 2
                                                            },
                                                            "id": "printBinEndpointsAndExit"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Starting (left endpoint) for granular binning",
                                                            "inputBinding": {
                                                                "prefix": "--start",
                                                                "position": 2
                                                            },
                                                            "id": "start"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Ending (right endpoint) for granular binning",
                                                            "inputBinding": {
                                                                "prefix": "--stop",
                                                                "position": 2
                                                            },
                                                            "id": "stop"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Number of bins to use for granular binning",
                                                            "inputBinding": {
                                                                "prefix": "--nBins",
                                                                "position": 2
                                                            },
                                                            "id": "nBins"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Do not output the summary files per-sample",
                                                            "inputBinding": {
                                                                "prefix": "--omitPerSampleStats",
                                                                "position": 2
                                                            },
                                                            "id": "omitPerSampleStats"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Partition type for depth of coverage",
                                                            "inputBinding": {
                                                                "prefix": "--partitionType",
                                                                "position": 2
                                                            },
                                                            "id": "partitionType"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Include information on deletions",
                                                            "inputBinding": {
                                                                "prefix": "--includeDeletions",
                                                                "position": 2
                                                            },
                                                            "id": "includeDeletions"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Ignore sites consisting only of deletions",
                                                            "inputBinding": {
                                                                "prefix": "--ignoreDeletionSites",
                                                                "position": 2
                                                            },
                                                            "id": "ignoreDeletionSites"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Reads arguments from the specified file",
                                                            "inputBinding": {
                                                                "prefix": "--arg_file",
                                                                "position": 2
                                                            },
                                                            "id": "arg_file"
                                                        },
                                                        {
                                                            "type": [
                                                                "File",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Input file containing sequence data (SAM or BAM)",
                                                            "inputBinding": {
                                                                "prefix": "--input_file",
                                                                "position": 2
                                                            },
                                                            "id": "input_file"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Number of reads per SAM file to buffer in memory",
                                                            "inputBinding": {
                                                                "prefix": "--read_buffer_size",
                                                                "position": 2
                                                            },
                                                            "id": "read_buffer_size"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Run reporting mode (NO_ET|AWS| STDOUT)",
                                                            "inputBinding": {
                                                                "prefix": "--phone_home",
                                                                "position": 2
                                                            },
                                                            "id": "phone_home"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "GATK key file required to run with -et NO_ET",
                                                            "inputBinding": {
                                                                "prefix": "--gatk_key",
                                                                "position": 2
                                                            },
                                                            "id": "gatk_key"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Tag to identify this GATK run as part of a group of runs",
                                                            "inputBinding": {
                                                                "prefix": "--tag",
                                                                "position": 2
                                                            },
                                                            "id": "tag"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Filters to apply to reads before analysis",
                                                            "inputBinding": {
                                                                "prefix": "--read_filter",
                                                                "position": 2
                                                            },
                                                            "id": "read_filter"
                                                        },
                                                        {
                                                            "type": [
                                                                "string",
                                                                "File"
                                                            ],
                                                            "doc": "One or more genomic intervals over which to operate",
                                                            "inputBinding": {
                                                                "prefix": "--intervals",
                                                                "position": 2
                                                            },
                                                            "id": "intervals"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "One or more genomic intervals to exclude from processing",
                                                            "inputBinding": {
                                                                "prefix": "--excludeIntervals",
                                                                "position": 2
                                                            },
                                                            "id": "excludeIntervals"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Set merging approach to use for combining interval inputs (UNION|INTERSECTION)",
                                                            "inputBinding": {
                                                                "prefix": "--interval_set_rule",
                                                                "position": 2
                                                            },
                                                            "id": "interval_set_rule"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Interval merging rule for abutting intervals (ALL| OVERLAPPING_ONLY)",
                                                            "inputBinding": {
                                                                "prefix": "--interval_merging",
                                                                "position": 2
                                                            },
                                                            "id": "interval_merging"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Amount of padding (in bp) to add to each interval",
                                                            "inputBinding": {
                                                                "prefix": "--interval_padding",
                                                                "position": 2
                                                            },
                                                            "id": "interval_padding"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "secondaryFiles": [
                                                                ".amb",
                                                                ".ann",
                                                                ".bwt",
                                                                ".pac",
                                                                ".sa",
                                                                ".fai",
                                                                "^.dict"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "--reference_sequence",
                                                                "position": 2
                                                            },
                                                            "id": "reference_sequence"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Use a non-deterministic random seed",
                                                            "inputBinding": {
                                                                "prefix": "--nonDeterministicRandomSeed",
                                                                "position": 2
                                                            },
                                                            "id": "nonDeterministicRandomSeed"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Stop execution cleanly as soon as maxRuntime has been reached",
                                                            "inputBinding": {
                                                                "prefix": "--maxRuntime",
                                                                "position": 2
                                                            },
                                                            "id": "maxRuntime"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Unit of time used by maxRuntime (NANOSECONDS|MICROSECONDS| MILLISECONDS|SECONDS|MINUTES| HOURS|DAYS)",
                                                            "inputBinding": {
                                                                "prefix": "--maxRuntimeUnits",
                                                                "position": 2
                                                            },
                                                            "id": "maxRuntimeUnits"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Type of read downsampling to employ at a given locus (NONE| ALL_READS|BY_SAMPLE)",
                                                            "inputBinding": {
                                                                "prefix": "--downsampling_type",
                                                                "position": 2
                                                            },
                                                            "id": "downsampling_type"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Fraction of reads to downsample to",
                                                            "inputBinding": {
                                                                "prefix": "--downsample_to_fraction",
                                                                "position": 2
                                                            },
                                                            "id": "downsample_to_fraction"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Target coverage threshold for downsampling to coverage",
                                                            "inputBinding": {
                                                                "prefix": "--downsample_to_coverage",
                                                                "position": 2
                                                            },
                                                            "id": "downsample_to_coverage"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Type of BAQ calculation to apply in the engine (OFF| CALCULATE_AS_NECESSARY| RECALCULATE)",
                                                            "inputBinding": {
                                                                "prefix": "--baq",
                                                                "position": 2
                                                            },
                                                            "id": "baq"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "BAQ gap open penalty",
                                                            "inputBinding": {
                                                                "prefix": "--baqGapOpenPenalty",
                                                                "position": 2
                                                            },
                                                            "id": "baqGapOpenPenalty"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "refactor cigar string with NDN elements to one element",
                                                            "inputBinding": {
                                                                "prefix": "--refactor_NDN_cigar_string",
                                                                "position": 2
                                                            },
                                                            "id": "refactor_NDN_cigar_string"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Fix mis-encoded base quality scores",
                                                            "inputBinding": {
                                                                "prefix": "--fix_misencoded_quality_scores",
                                                                "position": 2
                                                            },
                                                            "id": "fix_misencoded_quality_scores"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Ignore warnings about base quality score encoding",
                                                            "inputBinding": {
                                                                "prefix": "--allow_potentially_misencoded_quality_scores",
                                                                "position": 2
                                                            },
                                                            "id": "allow_potentially_misencoded_quality_scores"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Use the base quality scores from the OQ tag",
                                                            "inputBinding": {
                                                                "prefix": "--useOriginalQualities",
                                                                "position": 2
                                                            },
                                                            "id": "useOriginalQualities"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Assign a default base quality",
                                                            "inputBinding": {
                                                                "prefix": "--defaultBaseQualities",
                                                                "position": 2
                                                            },
                                                            "id": "defaultBaseQualities"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Write GATK runtime performance log to this file",
                                                            "inputBinding": {
                                                                "prefix": "--performanceLog",
                                                                "position": 2
                                                            },
                                                            "id": "performanceLog"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Input covariates table file for on-the-fly base quality score recalibration",
                                                            "inputBinding": {
                                                                "prefix": "--BQSR",
                                                                "position": 2
                                                            },
                                                            "id": "BQSR"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Disable printing of base insertion and deletion tags (with -BQSR)",
                                                            "inputBinding": {
                                                                "prefix": "--disable_indel_quals",
                                                                "position": 2
                                                            },
                                                            "id": "disable_indel_quals"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Emit the OQ tag with the original base qualities (with -BQSR)",
                                                            "inputBinding": {
                                                                "prefix": "--emit_original_quals",
                                                                "position": 2
                                                            },
                                                            "id": "emit_original_quals"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Don't recalibrate bases with quality scores less than this threshold (with -BQSR)",
                                                            "inputBinding": {
                                                                "prefix": "--preserve_qscores_less_than",
                                                                "position": 2
                                                            },
                                                            "id": "preserve_qscores_less_than"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Global Qscore Bayesian prior to use for BQSR",
                                                            "inputBinding": {
                                                                "prefix": "--globalQScorePrior",
                                                                "position": 2
                                                            },
                                                            "id": "globalQScorePrior"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "How strict should we be with validation (STRICT|LENIENT| SILENT)",
                                                            "inputBinding": {
                                                                "prefix": "--validation_strictness",
                                                                "position": 2
                                                            },
                                                            "id": "validation_strictness"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Remove program records from the SAM header",
                                                            "inputBinding": {
                                                                "prefix": "--remove_program_records",
                                                                "position": 2
                                                            },
                                                            "id": "remove_program_records"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Keep program records in the SAM header",
                                                            "inputBinding": {
                                                                "prefix": "--keep_program_records",
                                                                "position": 2
                                                            },
                                                            "id": "keep_program_records"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Rename sample IDs on-the-fly at runtime using the provided mapping file",
                                                            "inputBinding": {
                                                                "prefix": "--sample_rename_mapping_file",
                                                                "position": 2
                                                            },
                                                            "id": "sample_rename_mapping_file"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Enable unsafe operations - nothing will be checked at runtime (ALLOW_N_CIGAR_READS| ALLOW_UNINDEXED_BAM| ALLOW_UNSET_BAM_SORT_ORDER| NO_READ_ORDER_VERIFICATION| ALLOW_SEQ_DICT_INCOMPATIBILITY| LENIENT_VCF_PROCESSING|ALL)",
                                                            "inputBinding": {
                                                                "prefix": "--unsafe",
                                                                "position": 2
                                                            },
                                                            "id": "unsafe"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Just output sites without genotypes (i.e. only the first 8 columns of the VCF)",
                                                            "inputBinding": {
                                                                "prefix": "--sites_only",
                                                                "position": 2
                                                            },
                                                            "id": "sites_only"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Always output all the records in VCF FORMAT fields, even if some are missing",
                                                            "inputBinding": {
                                                                "prefix": "--never_trim_vcf_format_field",
                                                                "position": 2
                                                            },
                                                            "id": "never_trim_vcf_format_field"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Compression level to use for writing BAM files (0 - 9, higher is more compressed)",
                                                            "inputBinding": {
                                                                "prefix": "--bam_compression",
                                                                "position": 2
                                                            },
                                                            "id": "bam_compression"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "If provided, output BAM files will be simplified to include just key reads for downstream variation discovery analyses (removing duplicates, PF-, non-primary reads), as well stripping all extended tags from the kept reads except the read group identifier",
                                                            "inputBinding": {
                                                                "prefix": "--simplifyBAM",
                                                                "position": 2
                                                            },
                                                            "id": "simplifyBAM"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Turn off on-the-fly creation of",
                                                            "inputBinding": {
                                                                "prefix": "--disable_bam_indexing",
                                                                "position": 2
                                                            },
                                                            "id": "disable_bam_indexing"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Enable on-the-fly creation of",
                                                            "inputBinding": {
                                                                "prefix": "--generate_md5",
                                                                "position": 2
                                                            },
                                                            "id": "generate_md5"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Number of data threads to allocate to this analysis",
                                                            "inputBinding": {
                                                                "prefix": "--num_threads",
                                                                "position": 2
                                                            },
                                                            "id": "num_threads"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Number of CPU threads to allocate per data thread",
                                                            "inputBinding": {
                                                                "prefix": "--num_cpu_threads_per_data_thread",
                                                                "position": 2
                                                            },
                                                            "id": "num_cpu_threads_per_data_thread"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Enable threading efficiency monitoring",
                                                            "inputBinding": {
                                                                "prefix": "--monitorThreadEfficiency",
                                                                "position": 2
                                                            },
                                                            "id": "monitorThreadEfficiency"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Total number of BAM file handles to keep open simultaneously",
                                                            "inputBinding": {
                                                                "prefix": "--num_bam_file_handles",
                                                                "position": 2
                                                            },
                                                            "id": "num_bam_file_handles"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Exclude read groups based on tags",
                                                            "inputBinding": {
                                                                "prefix": "--read_group_black_list",
                                                                "position": 2
                                                            },
                                                            "id": "read_group_black_list"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Pedigree files for samples",
                                                            "inputBinding": {
                                                                "prefix": "--pedigree",
                                                                "position": 2
                                                            },
                                                            "id": "pedigree"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Pedigree string for samples",
                                                            "inputBinding": {
                                                                "prefix": "--pedigreeString",
                                                                "position": 2
                                                            },
                                                            "id": "pedigreeString"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Validation strictness for pedigree information (STRICT| SILENT)",
                                                            "inputBinding": {
                                                                "prefix": "--pedigreeValidationType",
                                                                "position": 2
                                                            },
                                                            "id": "pedigreeValidationType"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Type of IndexCreator to use for VCF/BCF indices (DYNAMIC_SEEK| DYNAMIC_SIZE|LINEAR|INTERVAL)",
                                                            "inputBinding": {
                                                                "prefix": "--variant_index_type",
                                                                "position": 2
                                                            },
                                                            "id": "variant_index_type"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Parameter to pass to the VCF/BCF IndexCreator",
                                                            "inputBinding": {
                                                                "prefix": "--variant_index_parameter",
                                                                "position": 2
                                                            },
                                                            "id": "variant_index_parameter"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Set the minimum level of logging",
                                                            "inputBinding": {
                                                                "prefix": "--logging_level",
                                                                "position": 2
                                                            },
                                                            "id": "logging_level"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Set the logging location",
                                                            "inputBinding": {
                                                                "prefix": "--log_to_file",
                                                                "position": 2
                                                            },
                                                            "id": "log_to_file"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Coverage threshold (in percent) for summarizing statistics",
                                                            "inputBinding": {
                                                                "prefix": "--summaryCoverageThreshold",
                                                                "position": 2
                                                            },
                                                            "id": "summaryCoverageThreshold"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "filter out reads with CIGAR containing the N operator, instead of stop processing and report an error.",
                                                            "inputBinding": {
                                                                "prefix": "--filter_reads_with_N_cigar",
                                                                "position": 2
                                                            },
                                                            "id": "filter_reads_with_N_cigar"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "if a read has mismatching number of bases and base qualities, filter out the read instead of blowing up.",
                                                            "inputBinding": {
                                                                "prefix": "--filter_mismatching_base_and_quals",
                                                                "position": 2
                                                            },
                                                            "id": "filter_mismatching_base_and_quals"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "if a read has no stored bases (i.e. a '*'), filter out the read instead of blowing up.",
                                                            "inputBinding": {
                                                                "prefix": "--filter_bases_not_stored",
                                                                "position": 2
                                                            },
                                                            "id": "filter_bases_not_stored"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.out)\n    return inputs.out;\n  return null;\n}\n"
                                                            },
                                                            "id": "out_file"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "bam",
                                                        "id": "input_file"
                                                    },
                                                    {
                                                        "source": "fp_intervals",
                                                        "id": "intervals"
                                                    },
                                                    {
                                                        "source": "ref_fasta",
                                                        "id": "reference_sequence"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.input_file.basename.replace(\".bam\", \"_FP_base_counts.txt\") }",
                                                        "id": "out"
                                                    },
                                                    {
                                                        "valueFrom": "${ return true; }",
                                                        "id": "omitLocustable"
                                                    },
                                                    {
                                                        "valueFrom": "${ return true; }",
                                                        "id": "omitPerSampleStats"
                                                    },
                                                    {
                                                        "valueFrom": "${ return [\"BadCigar\"];}",
                                                        "id": "read_filter"
                                                    },
                                                    {
                                                        "valueFrom": "${ return \"10\"; }",
                                                        "id": "minMappingQuality"
                                                    },
                                                    {
                                                        "valueFrom": "${ return \"3\"; }",
                                                        "id": "minBaseQuality"
                                                    },
                                                    {
                                                        "valueFrom": "${ return true; }",
                                                        "id": "omitIntervals"
                                                    },
                                                    {
                                                        "valueFrom": "${ return true; }",
                                                        "id": "printBaseCounts"
                                                    }
                                                ],
                                                "out": [
                                                    "out_file"
                                                ],
                                                "id": "doc"
                                            },
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "baseCommand": [
                                                        "python",
                                                        "/usr/bin/conpair/scripts/run_gatk_pileup_for_sample.py"
                                                    ],
                                                    "id": "conpair-pileup",
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "ramMin": 16000,
                                                            "coresMin": 1,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-conpair:0.3.3",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "doc": "None\n",
                                                    "inputs": [
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "--reference"
                                                            },
                                                            "secondaryFiles": [
                                                                ".amb",
                                                                ".ann",
                                                                ".bwt",
                                                                ".pac",
                                                                ".sa",
                                                                ".fai",
                                                                "^.dict"
                                                            ],
                                                            "id": "ref"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "set up java -Xmx parameter",
                                                            "inputBinding": {
                                                                "prefix": "--xmx_java"
                                                            },
                                                            "id": "java_xmx"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "temporary directory to set -Djava.io.tmpdir",
                                                            "inputBinding": {
                                                                "prefix": "--temp_dir_java"
                                                            },
                                                            "id": "java_temp"
                                                        },
                                                        {
                                                            "type": [
                                                                [
                                                                    "File",
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "--gatk"
                                                            },
                                                            "id": "gatk"
                                                        },
                                                        {
                                                            "type": [
                                                                [
                                                                    "File",
                                                                    "string"
                                                                ]
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "--markers"
                                                            },
                                                            "id": "markers_bed"
                                                        },
                                                        {
                                                            "type": [
                                                                [
                                                                    "File",
                                                                    "string"
                                                                ]
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "--bam"
                                                            },
                                                            "secondaryFiles": [
                                                                "^.bai"
                                                            ],
                                                            "id": "bam"
                                                        },
                                                        {
                                                            "type": [
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "--outfile"
                                                            },
                                                            "id": "outfile"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.outfile)\n    return inputs.outfile;\n  return null;\n}\n"
                                                            },
                                                            "id": "out_file"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "bam",
                                                        "id": "bam"
                                                    },
                                                    {
                                                        "source": "ref_fasta",
                                                        "id": "ref"
                                                    },
                                                    {
                                                        "source": "gatk_jar_path",
                                                        "id": "gatk"
                                                    },
                                                    {
                                                        "source": "conpair_markers_bed",
                                                        "id": "markers_bed"
                                                    },
                                                    {
                                                        "valueFrom": "${ return [\"24g\"]; }",
                                                        "id": "java_xmx"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.bam.basename.replace(\".bam\", \".pileup\"); }",
                                                        "id": "outfile"
                                                    }
                                                ],
                                                "out": [
                                                    "out_file"
                                                ],
                                                "id": "pileup"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "bait_intervals",
                                            "id": "bait_intervals"
                                        },
                                        {
                                            "source": "target_intervals",
                                            "id": "target_intervals"
                                        },
                                        {
                                            "source": "fp_intervals",
                                            "id": "fp_intervals"
                                        },
                                        {
                                            "source": "ref_fasta",
                                            "id": "ref_fasta"
                                        },
                                        {
                                            "source": "conpair_markers_bed",
                                            "id": "conpair_markers_bed"
                                        },
                                        {
                                            "source": "genome",
                                            "id": "genome"
                                        },
                                        {
                                            "source": "gatk_jar_path",
                                            "id": "gatk_jar_path"
                                        },
                                        {
                                            "source": "mark_duplicates/bam",
                                            "id": "bam"
                                        }
                                    ],
                                    "out": [
                                        "gcbias_pdf",
                                        "gcbias_metrics",
                                        "gcbias_summary",
                                        "as_metrics",
                                        "hs_metrics",
                                        "per_target_coverage",
                                        "insert_metrics",
                                        "insert_pdf",
                                        "doc_basecounts",
                                        "conpair_pileup"
                                    ],
                                    "id": "gather_metrics"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "pair",
                                "id": "sample"
                            },
                            {
                                "source": "genome",
                                "id": "genome"
                            },
                            {
                                "source": "opt_dup_pix_dist",
                                "id": "opt_dup_pix_dist"
                            },
                            {
                                "source": "gatk_jar_path",
                                "id": "gatk_jar_path"
                            },
                            {
                                "source": "bait_intervals",
                                "id": "bait_intervals"
                            },
                            {
                                "source": "target_intervals",
                                "id": "target_intervals"
                            },
                            {
                                "source": "fp_intervals",
                                "id": "fp_intervals"
                            },
                            {
                                "source": "ref_fasta",
                                "id": "ref_fasta"
                            },
                            {
                                "source": "mouse_fasta",
                                "id": "mouse_fasta"
                            },
                            {
                                "source": "conpair_markers_bed",
                                "id": "conpair_markers_bed"
                            }
                        ],
                        "out": [
                            "clstats1",
                            "clstats2",
                            "bam",
                            "md_metrics",
                            "as_metrics",
                            "hs_metrics",
                            "insert_metrics",
                            "insert_pdf",
                            "per_target_coverage",
                            "doc_basecounts",
                            "gcbias_pdf",
                            "gcbias_metrics",
                            "gcbias_summary",
                            "conpair_pileup"
                        ],
                        "scatter": [
                            "sample"
                        ],
                        "scatterMethod": "dotproduct",
                        "id": "sample_alignment"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "Workflow",
                            "id": "realignment",
                            "requirements": [
                                {
                                    "class": "MultipleInputFeatureRequirement"
                                },
                                {
                                    "class": "ScatterFeatureRequirement"
                                },
                                {
                                    "class": "SubworkflowFeatureRequirement"
                                },
                                {
                                    "class": "InlineJavascriptRequirement"
                                }
                            ],
                            "inputs": [
                                {
                                    "type": {
                                        "type": "array",
                                        "items": "File"
                                    },
                                    "secondaryFiles": [
                                        "^.bai"
                                    ],
                                    "id": "bams"
                                },
                                {
                                    "type": {
                                        "type": "array",
                                        "items": {
                                            "type": "record",
                                            "fields": [
                                                {
                                                    "type": "string",
                                                    "name": "CN"
                                                },
                                                {
                                                    "type": "string",
                                                    "name": "LB"
                                                },
                                                {
                                                    "type": "string",
                                                    "name": "ID"
                                                },
                                                {
                                                    "type": "string",
                                                    "name": "PL"
                                                },
                                                {
                                                    "type": {
                                                        "type": "array",
                                                        "items": "string"
                                                    },
                                                    "name": "PU"
                                                },
                                                {
                                                    "type": {
                                                        "type": "array",
                                                        "items": "File"
                                                    },
                                                    "name": "R1"
                                                },
                                                {
                                                    "type": {
                                                        "type": "array",
                                                        "items": "File"
                                                    },
                                                    "name": "R2"
                                                },
                                                {
                                                    "type": {
                                                        "type": "array",
                                                        "items": "File"
                                                    },
                                                    "name": "zR1"
                                                },
                                                {
                                                    "type": {
                                                        "type": "array",
                                                        "items": "File"
                                                    },
                                                    "name": "zR2"
                                                },
                                                {
                                                    "type": {
                                                        "type": "array",
                                                        "items": "File"
                                                    },
                                                    "name": "bam"
                                                },
                                                {
                                                    "type": {
                                                        "type": "array",
                                                        "items": "string"
                                                    },
                                                    "name": "RG_ID"
                                                },
                                                {
                                                    "type": "string",
                                                    "name": "adapter"
                                                },
                                                {
                                                    "type": "string",
                                                    "name": "adapter2"
                                                },
                                                {
                                                    "type": "string",
                                                    "name": "bwa_output"
                                                }
                                            ]
                                        }
                                    },
                                    "id": "pair"
                                },
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        ".amb",
                                        ".ann",
                                        ".bwt",
                                        ".pac",
                                        ".sa",
                                        ".fai",
                                        "^.dict"
                                    ],
                                    "id": "ref_fasta"
                                },
                                {
                                    "type": {
                                        "type": "array",
                                        "items": "string"
                                    },
                                    "id": "intervals"
                                },
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        ".idx"
                                    ],
                                    "id": "hapmap"
                                },
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        ".idx"
                                    ],
                                    "id": "dbsnp"
                                },
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        ".idx"
                                    ],
                                    "id": "indels_1000g"
                                },
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        ".idx"
                                    ],
                                    "id": "snps_1000g"
                                },
                                {
                                    "type": {
                                        "type": "array",
                                        "items": "string"
                                    },
                                    "id": "covariates"
                                },
                                {
                                    "type": "int",
                                    "id": "abra_ram_min"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputSource": "combine_intervals/mergedfile",
                                    "id": "covint_list"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "list2bed/output_file",
                                    "id": "covint_bed"
                                },
                                {
                                    "type": {
                                        "type": "array",
                                        "items": "File"
                                    },
                                    "outputSource": "parallel_printreads/qual_metrics",
                                    "id": "qual_metrics"
                                },
                                {
                                    "type": {
                                        "type": "array",
                                        "items": "File"
                                    },
                                    "outputSource": "parallel_printreads/qual_pdf",
                                    "id": "qual_pdf"
                                },
                                {
                                    "type": {
                                        "type": "array",
                                        "items": "File"
                                    },
                                    "secondaryFiles": [
                                        "^.bai"
                                    ],
                                    "outputSource": "parallel_printreads/out",
                                    "id": "outbams"
                                }
                            ],
                            "steps": [
                                {
                                    "in": [
                                        {
                                            "source": "intervals",
                                            "id": "interval_list"
                                        }
                                    ],
                                    "out": [
                                        "intervals",
                                        "intervals_id"
                                    ],
                                    "run": {
                                        "class": "ExpressionTool",
                                        "id": "split_intervals",
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string"
                                                },
                                                "id": "interval_list"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                },
                                                "id": "intervals"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string"
                                                },
                                                "id": "intervals_id"
                                            }
                                        ],
                                        "expression": "${ var intervals = []; var intervals_id = []; var output_object = {}; var interval_list = inputs.interval_list; while( interval_list.length > 0 ) { var interval_split = interval_list.splice(0, 10); intervals.push(interval_split); intervals_id.push(interval_split.join('_')); } output_object['intervals'] = intervals; output_object['intervals_id'] = intervals_id; return output_object; }"
                                    },
                                    "id": "split_intervals"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "id": "gatk-FindCoveredIntervals",
                                        "baseCommand": [
                                            "java"
                                        ],
                                        "arguments": [
                                            {
                                                "valueFrom": "/usr/bin/gatk.jar",
                                                "prefix": "-jar",
                                                "position": 1,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "FindCoveredIntervals",
                                                "prefix": "-T",
                                                "position": 1,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-XX:-UseGCOverheadLimit",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                "position": 0,
                                                "shellQuote": false
                                            }
                                        ],
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 24000,
                                                "coresMin": 2,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-gatk:3.3-0",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "None\n",
                                        "inputs": [
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Reads arguments from the specified file",
                                                "inputBinding": {
                                                    "prefix": "--arg_file",
                                                    "position": 2
                                                },
                                                "id": "arg_file"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File",
                                                    "inputBinding": {
                                                        "prefix": "--input_file"
                                                    }
                                                },
                                                "inputBinding": {
                                                    "position": 2
                                                },
                                                "doc": "Input file containing sequence data (SAM or BAM)",
                                                "id": "input_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Number of reads per SAM file to buffer in memory",
                                                "inputBinding": {
                                                    "prefix": "--read_buffer_size",
                                                    "position": 2
                                                },
                                                "id": "read_buffer_size"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Run reporting mode (NO_ET|AWS| STDOUT)",
                                                "inputBinding": {
                                                    "prefix": "--phone_home",
                                                    "position": 2
                                                },
                                                "id": "phone_home"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "GATK key file required to run with -et NO_ET",
                                                "inputBinding": {
                                                    "prefix": "--gatk_key",
                                                    "position": 2
                                                },
                                                "id": "gatk_key"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Tag to identify this GATK run as part of a group of runs",
                                                "inputBinding": {
                                                    "prefix": "--tag",
                                                    "position": 2
                                                },
                                                "id": "tag"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Filters to apply to reads before analysis",
                                                "inputBinding": {
                                                    "prefix": "--read_filter",
                                                    "position": 2
                                                },
                                                "id": "read_filter"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string",
                                                    "inputBinding": {
                                                        "prefix": "--intervals",
                                                        "separate": true
                                                    }
                                                },
                                                "inputBinding": {
                                                    "position": 2
                                                },
                                                "doc": "One or more genomic intervals over which to operate",
                                                "id": "intervals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "One or more genomic intervals to exclude from processing",
                                                "inputBinding": {
                                                    "prefix": "--excludeIntervals",
                                                    "position": 2
                                                },
                                                "id": "excludeIntervals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Set merging approach to use for combining interval inputs (UNION|INTERSECTION)",
                                                "inputBinding": {
                                                    "prefix": "--interval_set_rule",
                                                    "position": 2
                                                },
                                                "id": "interval_set_rule"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Interval merging rule for abutting intervals (ALL| OVERLAPPING_ONLY)",
                                                "inputBinding": {
                                                    "prefix": "--interval_merging",
                                                    "position": 2
                                                },
                                                "id": "interval_merging"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Amount of padding (in bp) to add to each interval",
                                                "inputBinding": {
                                                    "prefix": "--interval_padding",
                                                    "position": 2
                                                },
                                                "id": "interval_padding"
                                            },
                                            {
                                                "type": "File",
                                                "secondaryFiles": [
                                                    ".amb",
                                                    ".ann",
                                                    ".bwt",
                                                    ".pac",
                                                    ".sa",
                                                    ".fai",
                                                    "^.dict"
                                                ],
                                                "inputBinding": {
                                                    "prefix": "--reference_sequence",
                                                    "position": 2
                                                },
                                                "id": "reference_sequence"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Use a non-deterministic random seed",
                                                "inputBinding": {
                                                    "prefix": "--nonDeterministicRandomSeed",
                                                    "position": 2
                                                },
                                                "id": "nonDeterministicRandomSeed"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Stop execution cleanly as soon as maxRuntime has been reached",
                                                "inputBinding": {
                                                    "prefix": "--maxRuntime",
                                                    "position": 2
                                                },
                                                "id": "maxRuntime"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Unit of time used by maxRuntime (NANOSECONDS|MICROSECONDS| MILLISECONDS|SECONDS|MINUTES| HOURS|DAYS)",
                                                "inputBinding": {
                                                    "prefix": "--maxRuntimeUnits",
                                                    "position": 2
                                                },
                                                "id": "maxRuntimeUnits"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Type of read downsampling to employ at a given locus (NONE| ALL_READS|BY_SAMPLE)",
                                                "inputBinding": {
                                                    "prefix": "--downsampling_type",
                                                    "position": 2
                                                },
                                                "id": "downsampling_type"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Fraction of reads to downsample to",
                                                "inputBinding": {
                                                    "prefix": "--downsample_to_fraction",
                                                    "position": 2
                                                },
                                                "id": "downsample_to_fraction"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Target coverage threshold for downsampling to coverage",
                                                "inputBinding": {
                                                    "prefix": "--downsample_to_coverage",
                                                    "position": 2
                                                },
                                                "id": "downsample_to_coverage"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Type of BAQ calculation to apply in the engine (OFF| CALCULATE_AS_NECESSARY| RECALCULATE)",
                                                "inputBinding": {
                                                    "prefix": "--baq",
                                                    "position": 2
                                                },
                                                "id": "baq"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "BAQ gap open penalty",
                                                "inputBinding": {
                                                    "prefix": "--baqGapOpenPenalty",
                                                    "position": 2
                                                },
                                                "id": "baqGapOpenPenalty"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "refactor cigar string with NDN elements to one element",
                                                "inputBinding": {
                                                    "prefix": "--refactor_NDN_cigar_string",
                                                    "position": 2
                                                },
                                                "id": "refactor_NDN_cigar_string"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Fix mis-encoded base quality scores",
                                                "inputBinding": {
                                                    "prefix": "--fix_misencoded_quality_scores",
                                                    "position": 2
                                                },
                                                "id": "fix_misencoded_quality_scores"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Ignore warnings about base quality score encoding",
                                                "inputBinding": {
                                                    "prefix": "--allow_potentially_misencoded_quality_scores",
                                                    "position": 2
                                                },
                                                "id": "allow_potentially_misencoded_quality_scores"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Use the base quality scores from the OQ tag",
                                                "inputBinding": {
                                                    "prefix": "--useOriginalQualities",
                                                    "position": 2
                                                },
                                                "id": "useOriginalQualities"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Assign a default base quality",
                                                "inputBinding": {
                                                    "prefix": "--defaultBaseQualities",
                                                    "position": 2
                                                },
                                                "id": "defaultBaseQualities"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Write GATK runtime performance log to this file",
                                                "inputBinding": {
                                                    "prefix": "--performanceLog",
                                                    "position": 2
                                                },
                                                "id": "performanceLog"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Input covariates table file for on-the-fly base quality score recalibration",
                                                "inputBinding": {
                                                    "prefix": "--BQSR",
                                                    "position": 2
                                                },
                                                "id": "BQSR"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Disable printing of base insertion and deletion tags (with -BQSR)",
                                                "inputBinding": {
                                                    "prefix": "--disable_indel_quals",
                                                    "position": 2
                                                },
                                                "id": "disable_indel_quals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Emit the OQ tag with the original base qualities (with -BQSR)",
                                                "inputBinding": {
                                                    "prefix": "--emit_original_quals",
                                                    "position": 2
                                                },
                                                "id": "emit_original_quals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Don't recalibrate bases with quality scores less than this threshold (with -BQSR)",
                                                "inputBinding": {
                                                    "prefix": "--preserve_qscores_less_than",
                                                    "position": 2
                                                },
                                                "id": "preserve_qscores_less_than"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Global Qscore Bayesian prior to use for BQSR",
                                                "inputBinding": {
                                                    "prefix": "--globalQScorePrior",
                                                    "position": 2
                                                },
                                                "id": "globalQScorePrior"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "How strict should we be with validation (STRICT|LENIENT| SILENT)",
                                                "inputBinding": {
                                                    "prefix": "--validation_strictness",
                                                    "position": 2
                                                },
                                                "id": "validation_strictness"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Remove program records from the SAM header",
                                                "inputBinding": {
                                                    "prefix": "--remove_program_records",
                                                    "position": 2
                                                },
                                                "id": "remove_program_records"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Keep program records in the SAM header",
                                                "inputBinding": {
                                                    "prefix": "--keep_program_records",
                                                    "position": 2
                                                },
                                                "id": "keep_program_records"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Rename sample IDs on-the-fly at runtime using the provided mapping file",
                                                "inputBinding": {
                                                    "prefix": "--sample_rename_mapping_file",
                                                    "position": 2
                                                },
                                                "id": "sample_rename_mapping_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Enable unsafe operations - nothing will be checked at runtime (ALLOW_N_CIGAR_READS| ALLOW_UNINDEXED_BAM| ALLOW_UNSET_BAM_SORT_ORDER| NO_READ_ORDER_VERIFICATION| ALLOW_SEQ_DICT_INCOMPATIBILITY| LENIENT_VCF_PROCESSING|ALL)",
                                                "inputBinding": {
                                                    "prefix": "--unsafe",
                                                    "position": 2
                                                },
                                                "id": "unsafe"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Just output sites without genotypes (i.e. only the first 8 columns of the VCF)",
                                                "inputBinding": {
                                                    "prefix": "--sites_only",
                                                    "position": 2
                                                },
                                                "id": "sites_only"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Always output all the records in VCF FORMAT fields, even if some are missing",
                                                "inputBinding": {
                                                    "prefix": "--never_trim_vcf_format_field",
                                                    "position": 2
                                                },
                                                "id": "never_trim_vcf_format_field"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Compression level to use for writing BAM files (0 - 9, higher is more compressed)",
                                                "inputBinding": {
                                                    "prefix": "--bam_compression",
                                                    "position": 2
                                                },
                                                "id": "bam_compression"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "If provided, output BAM files will be simplified to include just key reads for downstream variation discovery analyses (removing duplicates, PF-, non-primary reads), as well stripping all extended tags from the kept reads except the read group identifier",
                                                "inputBinding": {
                                                    "prefix": "--simplifyBAM",
                                                    "position": 2
                                                },
                                                "id": "simplifyBAM"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Turn off on-the-fly creation of",
                                                "inputBinding": {
                                                    "prefix": "--disable_bam_indexing",
                                                    "position": 2
                                                },
                                                "id": "disable_bam_indexing"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Enable on-the-fly creation of",
                                                "inputBinding": {
                                                    "prefix": "--generate_md5",
                                                    "position": 2
                                                },
                                                "id": "generate_md5"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Number of data threads to allocate to this analysis",
                                                "inputBinding": {
                                                    "prefix": "--num_threads",
                                                    "position": 2
                                                },
                                                "id": "num_threads"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Number of CPU threads to allocate per data thread",
                                                "inputBinding": {
                                                    "prefix": "--num_cpu_threads_per_data_thread",
                                                    "position": 2
                                                },
                                                "id": "num_cpu_threads_per_data_thread"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Enable threading efficiency monitoring",
                                                "inputBinding": {
                                                    "prefix": "--monitorThreadEfficiency",
                                                    "position": 2
                                                },
                                                "id": "monitorThreadEfficiency"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Total number of BAM file handles to keep open simultaneously",
                                                "inputBinding": {
                                                    "prefix": "--num_bam_file_handles",
                                                    "position": 2
                                                },
                                                "id": "num_bam_file_handles"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Exclude read groups based on tags",
                                                "inputBinding": {
                                                    "prefix": "--read_group_black_list",
                                                    "position": 2
                                                },
                                                "id": "read_group_black_list"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Pedigree files for samples",
                                                "inputBinding": {
                                                    "prefix": "--pedigree",
                                                    "position": 2
                                                },
                                                "id": "pedigree"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Pedigree string for samples",
                                                "inputBinding": {
                                                    "prefix": "--pedigreeString",
                                                    "position": 2
                                                },
                                                "id": "pedigreeString"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Validation strictness for pedigree information (STRICT| SILENT)",
                                                "inputBinding": {
                                                    "prefix": "--pedigreeValidationType",
                                                    "position": 2
                                                },
                                                "id": "pedigreeValidationType"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Type of IndexCreator to use for VCF/BCF indices (DYNAMIC_SEEK| DYNAMIC_SIZE|LINEAR|INTERVAL)",
                                                "inputBinding": {
                                                    "prefix": "--variant_index_type",
                                                    "position": 2
                                                },
                                                "id": "variant_index_type"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Parameter to pass to the VCF/BCF IndexCreator",
                                                "inputBinding": {
                                                    "prefix": "--variant_index_parameter",
                                                    "position": 2
                                                },
                                                "id": "variant_index_parameter"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Set the minimum level of logging",
                                                "inputBinding": {
                                                    "prefix": "--logging_level",
                                                    "position": 2
                                                },
                                                "id": "logging_level"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Set the logging location",
                                                "inputBinding": {
                                                    "prefix": "--log_to_file",
                                                    "position": 2
                                                },
                                                "id": "log_to_file"
                                            },
                                            {
                                                "type": "string",
                                                "doc": "An output file created by the walker. Will overwrite contents if file exists",
                                                "inputBinding": {
                                                    "prefix": "--out",
                                                    "position": 2
                                                },
                                                "id": "out"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "output intervals that fail the coverage threshold instead",
                                                "inputBinding": {
                                                    "prefix": "--uncovered",
                                                    "position": 2
                                                },
                                                "id": "uncovered"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "The minimum allowable coverage to be considered covered",
                                                "inputBinding": {
                                                    "prefix": "--coverage_threshold",
                                                    "position": 2
                                                },
                                                "id": "coverage_threshold"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "The minimum allowable base quality score to be counted for coverage",
                                                "inputBinding": {
                                                    "prefix": "--minBaseQuality",
                                                    "position": 2
                                                },
                                                "id": "minBaseQuality"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "The minimum allowable mapping quality score to be counted for coverage",
                                                "inputBinding": {
                                                    "prefix": "--minMappingQuality",
                                                    "position": 2
                                                },
                                                "id": "minMappingQuality"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Output the raw activity profile results in IGV format",
                                                "inputBinding": {
                                                    "prefix": "--activityProfileOut",
                                                    "position": 2
                                                },
                                                "id": "activityProfileOut"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Output the active region to this IGV formatted file",
                                                "inputBinding": {
                                                    "prefix": "--activeRegionOut",
                                                    "position": 2
                                                },
                                                "id": "activeRegionOut"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Use this interval list file as the active regions to process",
                                                "inputBinding": {
                                                    "prefix": "--activeRegionIn",
                                                    "position": 2
                                                },
                                                "id": "activeRegionIn"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "The active region extension; if not provided defaults to Walker annotated default",
                                                "inputBinding": {
                                                    "prefix": "--activeRegionExtension",
                                                    "position": 2
                                                },
                                                "id": "activeRegionExtension"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "If provided, all bases will be tagged as active",
                                                "inputBinding": {
                                                    "prefix": "--forceActive",
                                                    "position": 2
                                                },
                                                "id": "forceActive"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "The active region maximum size; if not provided defaults to Walker annotated default",
                                                "inputBinding": {
                                                    "prefix": "--activeRegionMaxSize",
                                                    "position": 2
                                                },
                                                "id": "activeRegionMaxSize"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "The sigma of the band pass filter Gaussian kernel; if not provided defaults to Walker annotated default",
                                                "inputBinding": {
                                                    "prefix": "--bandPassSigma",
                                                    "position": 2
                                                },
                                                "id": "bandPassSigma"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Threshold for the probability of a profile state being active.",
                                                "inputBinding": {
                                                    "prefix": "--activeProbabilityThreshold",
                                                    "position": 2
                                                },
                                                "id": "activeProbabilityThreshold"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "filter out reads with CIGAR containing the N operator, instead of stop processing and report an error.",
                                                "inputBinding": {
                                                    "prefix": "--filter_reads_with_N_cigar",
                                                    "position": 2
                                                },
                                                "id": "filter_reads_with_N_cigar"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "if a read has mismatching number of bases and base qualities, filter out the read instead of blowing up.",
                                                "inputBinding": {
                                                    "prefix": "--filter_mismatching_base_and_quals",
                                                    "position": 2
                                                },
                                                "id": "filter_mismatching_base_and_quals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "if a read has no stored bases (i.e. a '*'), filter out the read instead of blowing up.",
                                                "inputBinding": {
                                                    "prefix": "--filter_bases_not_stored",
                                                    "position": 2
                                                },
                                                "id": "filter_bases_not_stored"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.out)\n    return inputs.out;\n  return null;\n}\n"
                                                },
                                                "id": "fci_list"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "pair",
                                            "id": "pair"
                                        },
                                        {
                                            "source": "intervals",
                                            "id": "intervals_list"
                                        },
                                        {
                                            "source": "ref_fasta",
                                            "id": "reference_sequence"
                                        },
                                        {
                                            "valueFrom": "${ return [\"3\"];}",
                                            "id": "coverage_threshold"
                                        },
                                        {
                                            "valueFrom": "${ return [\"20\"];}",
                                            "id": "minBaseQuality"
                                        },
                                        {
                                            "source": "split_intervals/intervals",
                                            "id": "intervals"
                                        },
                                        {
                                            "source": "bams",
                                            "id": "input_file"
                                        },
                                        {
                                            "source": "split_intervals/intervals_id",
                                            "id": "out"
                                        }
                                    ],
                                    "scatter": [
                                        "intervals",
                                        "out"
                                    ],
                                    "scatterMethod": "dotproduct",
                                    "out": [
                                        "fci_list"
                                    ],
                                    "id": "gatk_find_covered_intervals"
                                },
                                {
                                    "in": [
                                        {
                                            "source": "gatk_find_covered_intervals/fci_list",
                                            "id": "files"
                                        },
                                        {
                                            "source": "pair",
                                            "id": "pair"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.pair[0].ID + \".\" + inputs.pair[1].ID + \".fci.list\"; }",
                                            "id": "output_filename"
                                        }
                                    ],
                                    "out": [
                                        "mergedfile"
                                    ],
                                    "run": {
                                        "class": "CommandLineTool",
                                        "baseCommand": [
                                            "cat"
                                        ],
                                        "id": "combine_intervals",
                                        "stdout": "$(inputs.output_filename)",
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "class": "MultipleInputFeatureRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "inputBinding": {
                                                    "position": 1
                                                },
                                                "id": "files"
                                            },
                                            {
                                                "type": "string",
                                                "id": "output_filename"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "stdout",
                                                "id": "mergedfile"
                                            }
                                        ]
                                    },
                                    "id": "combine_intervals"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "id": "list2bed",
                                        "baseCommand": [
                                            "python",
                                            "/usr/bin/list2bed.py"
                                        ],
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 2000,
                                                "coresMin": 1,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-list2bed:1.0.1",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "Convert a Picard interval list file to a UCSC BED format\n",
                                        "inputs": [
                                            {
                                                "type": [
                                                    "string",
                                                    "File",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "picard interval list",
                                                "inputBinding": {
                                                    "prefix": "--input_file"
                                                },
                                                "id": "input_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": true,
                                                "doc": "sort bed file output",
                                                "inputBinding": {
                                                    "prefix": "--no_sort"
                                                },
                                                "id": "no_sort"
                                            },
                                            {
                                                "type": "string",
                                                "doc": "output bed file",
                                                "inputBinding": {
                                                    "prefix": "--output_file"
                                                },
                                                "id": "output_filename"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.output_filename)\n    return inputs.output_filename;\n  return null;\n}\n"
                                                },
                                                "id": "output_file"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "combine_intervals/mergedfile",
                                            "id": "input_file"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.input_file.basename.replace(\".list\", \".bed\"); }",
                                            "id": "output_filename"
                                        }
                                    ],
                                    "out": [
                                        "output_file"
                                    ],
                                    "id": "list2bed"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "id": "abra",
                                        "baseCommand": [
                                            "java"
                                        ],
                                        "arguments": [
                                            {
                                                "valueFrom": "/usr/bin/abra.jar",
                                                "prefix": "-jar",
                                                "position": 1,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "$(runtime.tmpdir)",
                                                "position": 2,
                                                "prefix": "--tmpdir",
                                                "shellQuote": false
                                            }
                                        ],
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": "$(inputs.abra_ram_min)",
                                                "coresMin": 16,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-abra:2.17",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "None\n",
                                        "inputs": [
                                            {
                                                "type": "int",
                                                "id": "abra_ram_min"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Number of threads (default - 16)",
                                                "inputBinding": {
                                                    "prefix": "--threads",
                                                    "position": 2
                                                },
                                                "default": "16",
                                                "id": "threads"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "bwa ref",
                                                "inputBinding": {
                                                    "prefix": "--bwa-ref",
                                                    "position": 2
                                                },
                                                "id": "bwa_ref"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Max allowed mismatch rate when mapping reads back to contigs (default - 0.05)",
                                                "inputBinding": {
                                                    "prefix": "--mmr",
                                                    "position": 2
                                                },
                                                "id": "mmr"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Optional assembly kmer size(delimit with commas if multiple sizes specified)",
                                                "inputBinding": {
                                                    "prefix": "--kmer",
                                                    "position": 2
                                                },
                                                "id": "kmer"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "If no target specified, skip realignment of chromosomes matching specified regex. Skipped reads are output without modification. Specify none to disable. (default - GL.*|hs37d5|chr.*random|chrUn. *|chrEBV|CMV|HBV|HCV.*|HIV. *|KSHV|HTLV.*|MCV|SV40|HPV.*)",
                                                "inputBinding": {
                                                    "prefix": "--skip",
                                                    "position": 2
                                                },
                                                "id": "skip"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Do not use unmapped reads anchored by mate to trigger assembly. These reads are still eligible to contribute to assembly",
                                                "inputBinding": {
                                                    "prefix": "--sua",
                                                    "position": 2
                                                },
                                                "id": "sua"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Optional file to which assembled contigs are written",
                                                "inputBinding": {
                                                    "prefix": "--contigs",
                                                    "position": 2
                                                },
                                                "id": "contigs"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Skip usage of soft clipped sequences as putative contigs",
                                                "inputBinding": {
                                                    "prefix": "--ssc",
                                                    "position": 2
                                                },
                                                "id": "ssc"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Do not delete the temporary directory",
                                                "inputBinding": {
                                                    "prefix": "--keep-tmp",
                                                    "position": 2
                                                },
                                                "id": "keep_tmp"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "GTF file defining exons and transcripts",
                                                "inputBinding": {
                                                    "prefix": "--gtf",
                                                    "position": 2
                                                },
                                                "id": "gtf"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Minimum mapping quality for a read to be used in assembly and be eligible for realignment (default - 20)",
                                                "inputBinding": {
                                                    "prefix": "--mapq",
                                                    "position": 2
                                                },
                                                "id": "mapq"
                                            },
                                            {
                                                "type": "File",
                                                "inputBinding": {
                                                    "prefix": "--ref",
                                                    "position": 2
                                                },
                                                "id": "ref"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Enable BAM index generation when outputting sorted alignments (may require additonal memory)",
                                                "inputBinding": {
                                                    "prefix": "--index",
                                                    "position": 2
                                                },
                                                "id": "index"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string"
                                                },
                                                "doc": "Required list of output sam or bam file (s) separated by comma",
                                                "inputBinding": {
                                                    "itemSeparator": ",",
                                                    "prefix": "--out",
                                                    "position": 2
                                                },
                                                "id": "out"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Scoring used for contig alignments (match, mismatch_penalty, gap_open_penalty, gap_extend_penalty) (default - 8,32,48,1)",
                                                "inputBinding": {
                                                    "prefix": "--sga",
                                                    "position": 2
                                                },
                                                "id": "sga"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Minimum base quality for inclusion in assembly. This value is compared against the sum of base qualities per kmer position (default - 20)",
                                                "inputBinding": {
                                                    "prefix": "--mbq",
                                                    "position": 2
                                                },
                                                "id": "mbq"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Assembly minimum node frequency (default - 1)",
                                                "inputBinding": {
                                                    "prefix": "--mnf",
                                                    "position": 2
                                                },
                                                "id": "mnf"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Use positional consensus sequence when aligning high quality soft clipping",
                                                "inputBinding": {
                                                    "prefix": "--cons",
                                                    "position": 2
                                                },
                                                "id": "cons"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Max reads to keep in memory per sample during the sort phase. When this value is exceeded, sort spills to disk (default - 1000000)",
                                                "inputBinding": {
                                                    "prefix": "--msr",
                                                    "position": 2
                                                },
                                                "id": "msr"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Do not attempt to sort final output",
                                                "inputBinding": {
                                                    "prefix": "--nosort",
                                                    "position": 2
                                                },
                                                "id": "nosort"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "doc": "Required list of input sam or bam file (s) separated by comma",
                                                "inputBinding": {
                                                    "itemSeparator": ",",
                                                    "prefix": "--in",
                                                    "position": 2
                                                },
                                                "secondaryFiles": [
                                                    "^.bai"
                                                ],
                                                "id": "in"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Contig anchor [M_bases_at_contig_edge, max_mismatches_near_edge] (default - 10,2)",
                                                "inputBinding": {
                                                    "prefix": "--ca",
                                                    "position": 2
                                                },
                                                "id": "ca"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Minimum read candidate fraction for triggering assembly (default - 0.01)",
                                                "inputBinding": {
                                                    "prefix": "--rcf",
                                                    "position": 2
                                                },
                                                "id": "rcf"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "If specified, use GKL Intel Deflater (experimental)",
                                                "inputBinding": {
                                                    "prefix": "--gkl",
                                                    "position": 2
                                                },
                                                "id": "gkl"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Maximum pre-pruned nodes in regional assembly (default - 150000)",
                                                "inputBinding": {
                                                    "prefix": "--maxn",
                                                    "position": 2
                                                },
                                                "id": "maxn"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Unset duplicate flag",
                                                "inputBinding": {
                                                    "prefix": "--undup",
                                                    "position": 2
                                                },
                                                "id": "undup"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Compression level of output bam file (s) (default - 5)",
                                                "inputBinding": {
                                                    "prefix": "--cl",
                                                    "position": 2
                                                },
                                                "id": "cl"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Soft clip contig args [max_contigs, min_base_qual,frac_high_qual_bases, min_soft_clip_len] (default - 16,13,80,15)",
                                                "inputBinding": {
                                                    "prefix": "--sc",
                                                    "position": 2
                                                },
                                                "id": "sc"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Skip assembly",
                                                "inputBinding": {
                                                    "prefix": "--sa",
                                                    "position": 2
                                                },
                                                "id": "sa"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Reads with noise score exceeding this value are not remapped. numMismatches+(numIndels*2) < readLength*mnr (default - 0.1)",
                                                "inputBinding": {
                                                    "prefix": "--mrn",
                                                    "position": 2
                                                },
                                                "id": "mrn"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Splice junctions definition file",
                                                "inputBinding": {
                                                    "prefix": "--junctions",
                                                    "position": 2
                                                },
                                                "id": "junctions"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Regions containing more reads than this value are not processed. Use -1 to disable. (default - 1000000)",
                                                "inputBinding": {
                                                    "prefix": "--mrr",
                                                    "position": 2
                                                },
                                                "id": "mrr"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Do not use observed indels in original alignments to generate contigs",
                                                "inputBinding": {
                                                    "prefix": "--sobs",
                                                    "position": 2
                                                },
                                                "id": "sobs"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Max read move distance (default - 1000)",
                                                "inputBinding": {
                                                    "prefix": "--dist",
                                                    "position": 2
                                                },
                                                "id": "dist"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Min edge pruning ratio. Default value is appropriate for relatively sensitive somatic cases. May be increased for improved speed in germline only cases. (default - 0.01)",
                                                "inputBinding": {
                                                    "prefix": "--mer",
                                                    "position": 2
                                                },
                                                "id": "mer"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Set mapq for alignments that map equally well to reference and an ABRA generated contig. default of -1 disables (default - -1)",
                                                "inputBinding": {
                                                    "prefix": "--amq",
                                                    "position": 2
                                                },
                                                "id": "amq"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Assembly minimum contig length (default - -1)",
                                                "inputBinding": {
                                                    "prefix": "--mcl",
                                                    "position": 2
                                                },
                                                "id": "mcl"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Regions with average depth exceeding this value will be downsampled (default - 1000)",
                                                "inputBinding": {
                                                    "prefix": "--mad",
                                                    "position": 2
                                                },
                                                "id": "mad"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Input is single end",
                                                "inputBinding": {
                                                    "prefix": "--single",
                                                    "position": 2
                                                },
                                                "id": "single"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Processing window size and overlap (size,overlap) (default - 400,200)",
                                                "inputBinding": {
                                                    "prefix": "--ws",
                                                    "position": 2
                                                },
                                                "id": "ws"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Max assembled contigs (default - 64)",
                                                "inputBinding": {
                                                    "prefix": "--mac",
                                                    "position": 2
                                                },
                                                "id": "mac"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "VCF containing known (or suspected) variant sites. Very large files should be avoided.",
                                                "inputBinding": {
                                                    "prefix": "--in-vcf",
                                                    "position": 2
                                                },
                                                "id": "in_vcf"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "BED-like file containing target regions with per region kmer sizes in 4th column",
                                                "inputBinding": {
                                                    "prefix": "--target-kmers",
                                                    "position": 2
                                                },
                                                "id": "target_kmers"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "File",
                                                    "string"
                                                ],
                                                "doc": "BED file containing target regions",
                                                "inputBinding": {
                                                    "prefix": "--targets",
                                                    "position": 2
                                                },
                                                "id": "targets"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Logging level (trace,debug,info,warn, error) (default - info)",
                                                "inputBinding": {
                                                    "prefix": "--log",
                                                    "position": 2
                                                },
                                                "id": "log"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Max number of cached reads per sample per thread (default - 1000000)",
                                                "inputBinding": {
                                                    "prefix": "--mcr",
                                                    "position": 2
                                                },
                                                "id": "mcr"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File"
                                                },
                                                "outputBinding": {
                                                    "glob": "${\n  return inputs.out;\n}\n"
                                                },
                                                "id": "outbams"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "abra_ram_min",
                                            "id": "abra_ram_min"
                                        },
                                        {
                                            "source": "bams",
                                            "id": "in"
                                        },
                                        {
                                            "source": "ref_fasta",
                                            "id": "ref"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.in.map(function(x){ return x.basename.replace(\".bam\", \".abra.bam\"); }); }",
                                            "id": "out"
                                        },
                                        {
                                            "source": "list2bed/output_file",
                                            "id": "targets"
                                        }
                                    ],
                                    "out": [
                                        "outbams"
                                    ],
                                    "id": "abra"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "baseCommand": [
                                            "cmo_index"
                                        ],
                                        "label": "cmo-index",
                                        "requirements": [
                                            {
                                                "ramMin": 16000,
                                                "coresMin": 1,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-cmo-utils:1.9.15",
                                                "class": "DockerRequirement"
                                            },
                                            {
                                                "listing": [
                                                    "$(inputs.bam)"
                                                ],
                                                "class": "InitialWorkDirRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": "File",
                                                "inputBinding": {
                                                    "prefix": "--bam"
                                                },
                                                "id": "bam"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "$(inputs.bam.basename)"
                                                },
                                                "secondaryFiles": [
                                                    "^.bai",
                                                    ".bai"
                                                ],
                                                "id": "bam_indexed"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "abra/outbams",
                                            "id": "bam"
                                        }
                                    ],
                                    "scatter": [
                                        "bam"
                                    ],
                                    "scatterMethod": "dotproduct",
                                    "out": [
                                        "bam_indexed"
                                    ],
                                    "id": "index_bams"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "id": "gatk-BaseRecalibrator",
                                        "baseCommand": [
                                            "java"
                                        ],
                                        "arguments": [
                                            {
                                                "valueFrom": "/usr/bin/gatk.jar",
                                                "prefix": "-jar",
                                                "position": 1,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "BaseRecalibrator",
                                                "prefix": "-T",
                                                "position": 1,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-XX:-UseGCOverheadLimit",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                "position": 0,
                                                "shellQuote": false
                                            }
                                        ],
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 24000,
                                                "coresMin": 4,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-gatk:3.3-0",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "None\n",
                                        "inputs": [
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Reads arguments from the specified file",
                                                "inputBinding": {
                                                    "prefix": "--arg_file",
                                                    "position": 2
                                                },
                                                "id": "arg_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "File",
                                                        "inputBinding": {
                                                            "prefix": "--input_file"
                                                        }
                                                    }
                                                ],
                                                "inputBinding": {
                                                    "position": 2
                                                },
                                                "doc": "Input file containing sequence data (SAM or BAM)",
                                                "secondaryFiles": [
                                                    "^.bai"
                                                ],
                                                "id": "input_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Number of reads per SAM file to buffer in memory",
                                                "inputBinding": {
                                                    "prefix": "--read_buffer_size",
                                                    "position": 2
                                                },
                                                "id": "read_buffer_size"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Run reporting mode (NO_ET|AWS|STDOUT)",
                                                "inputBinding": {
                                                    "prefix": "--phone_home",
                                                    "position": 2
                                                },
                                                "id": "phone_home"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "GATK key file required to run with -et NO_ET",
                                                "inputBinding": {
                                                    "prefix": "--gatk_key",
                                                    "position": 2
                                                },
                                                "id": "gatk_key"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Tag to identify this GATK run as part of a group of runs",
                                                "inputBinding": {
                                                    "prefix": "--tag",
                                                    "position": 2
                                                },
                                                "id": "tag"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Filters to apply to reads before analysis",
                                                "inputBinding": {
                                                    "prefix": "--read_filter",
                                                    "position": 2
                                                },
                                                "id": "read_filter"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "One or more genomic intervals over which to operate",
                                                "inputBinding": {
                                                    "prefix": "--intervals",
                                                    "position": 2
                                                },
                                                "id": "intervals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "One or more genomic intervals to exclude from processing",
                                                "inputBinding": {
                                                    "prefix": "--excludeIntervals",
                                                    "position": 2
                                                },
                                                "id": "excludeIntervals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Set merging approach to use for combining interval inputs (UNION|INTERSECTION)",
                                                "inputBinding": {
                                                    "prefix": "--interval_set_rule",
                                                    "position": 2
                                                },
                                                "id": "interval_set_rule"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Interval merging rule for abutting intervals (ALL| OVERLAPPING_ONLY)",
                                                "inputBinding": {
                                                    "prefix": "--interval_merging",
                                                    "position": 2
                                                },
                                                "id": "interval_merging"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Amount of padding (in bp) to add to each interval",
                                                "inputBinding": {
                                                    "prefix": "--interval_padding",
                                                    "position": 2
                                                },
                                                "id": "interval_padding"
                                            },
                                            {
                                                "type": "File",
                                                "secondaryFiles": [
                                                    ".amb",
                                                    ".ann",
                                                    ".bwt",
                                                    ".pac",
                                                    ".sa",
                                                    ".fai",
                                                    "^.dict"
                                                ],
                                                "inputBinding": {
                                                    "prefix": "--reference_sequence",
                                                    "position": 2
                                                },
                                                "id": "reference_sequence"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Use a non-deterministic random seed",
                                                "inputBinding": {
                                                    "prefix": "--nonDeterministicRandomSeed",
                                                    "position": 2
                                                },
                                                "id": "nonDeterministicRandomSeed"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Stop execution cleanly as soon as maxRuntime has been reached",
                                                "inputBinding": {
                                                    "prefix": "--maxRuntime",
                                                    "position": 2
                                                },
                                                "id": "maxRuntime"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Unit of time used by maxRuntime (NANOSECONDS|MICROSECONDS| MILLISECONDS|SECONDS|MINUTES| HOURS|DAYS)",
                                                "inputBinding": {
                                                    "prefix": "--maxRuntimeUnits",
                                                    "position": 2
                                                },
                                                "id": "maxRuntimeUnits"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Type of read downsampling to employ at a given locus (NONE|ALL_READS|BY_SAMPLE)",
                                                "inputBinding": {
                                                    "prefix": "--downsampling_type",
                                                    "position": 2
                                                },
                                                "id": "downsampling_type"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Fraction of reads to downsample to",
                                                "inputBinding": {
                                                    "prefix": "--downsample_to_fraction",
                                                    "position": 2
                                                },
                                                "id": "downsample_to_fraction"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Target coverage threshold for downsampling to coverage",
                                                "inputBinding": {
                                                    "prefix": "--downsample_to_coverage",
                                                    "position": 2
                                                },
                                                "id": "downsample_to_coverage"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Type of BAQ calculation to apply in the engine (OFF| CALCULATE_AS_NECESSARY| RECALCULATE)",
                                                "inputBinding": {
                                                    "prefix": "--baq",
                                                    "position": 2
                                                },
                                                "id": "baq"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "BAQ gap open penalty",
                                                "inputBinding": {
                                                    "prefix": "--baqGapOpenPenalty",
                                                    "position": 2
                                                },
                                                "id": "baqGapOpenPenalty"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "refactor cigar string with NDN elements to one element",
                                                "inputBinding": {
                                                    "prefix": "--refactor_NDN_cigar_string",
                                                    "position": 2
                                                },
                                                "id": "refactor_NDN_cigar_string"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Fix mis-encoded base quality scores",
                                                "inputBinding": {
                                                    "prefix": "--fix_misencoded_quality_scores",
                                                    "position": 2
                                                },
                                                "id": "fix_misencoded_quality_scores"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Ignore warnings about base quality score encoding",
                                                "inputBinding": {
                                                    "prefix": "--allow_potentially_misencoded_quality_scores",
                                                    "position": 2
                                                },
                                                "id": "allow_potentially_misencoded_quality_scores"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Use the base quality scores from the OQ tag",
                                                "inputBinding": {
                                                    "prefix": "--useOriginalQualities",
                                                    "position": 2
                                                },
                                                "id": "useOriginalQualities"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Assign a default base quality",
                                                "inputBinding": {
                                                    "prefix": "--defaultBaseQualities",
                                                    "position": 2
                                                },
                                                "id": "defaultBaseQualities"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Write GATK runtime performance log to this file",
                                                "inputBinding": {
                                                    "prefix": "--performanceLog",
                                                    "position": 2
                                                },
                                                "id": "performanceLog"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Input covariates table file for on-the-fly base quality score recalibration",
                                                "inputBinding": {
                                                    "prefix": "--BQSR",
                                                    "position": 2
                                                },
                                                "id": "BQSR"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Disable printing of base insertion and deletion tags (with -BQSR)",
                                                "inputBinding": {
                                                    "prefix": "--disable_indel_quals",
                                                    "position": 2
                                                },
                                                "id": "disable_indel_quals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Emit the OQ tag with the original base qualities (with -BQSR)",
                                                "inputBinding": {
                                                    "prefix": "--emit_original_quals",
                                                    "position": 2
                                                },
                                                "id": "emit_original_quals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Don't recalibrate bases with quality scores less than this threshold (with -BQSR)",
                                                "inputBinding": {
                                                    "prefix": "--preserve_qscores_less_than",
                                                    "position": 2
                                                },
                                                "id": "preserve_qscores_less_than"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Global Qscore Bayesian prior to use for BQSR",
                                                "inputBinding": {
                                                    "prefix": "--globalQScorePrior",
                                                    "position": 2
                                                },
                                                "id": "globalQScorePrior"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "How strict should we be with validation (STRICT|LENIENT| SILENT)",
                                                "inputBinding": {
                                                    "prefix": "--validation_strictness",
                                                    "position": 2
                                                },
                                                "id": "validation_strictness"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Remove program records from the SAM header",
                                                "inputBinding": {
                                                    "prefix": "--remove_program_records",
                                                    "position": 2
                                                },
                                                "id": "remove_program_records"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Keep program records in the SAM header",
                                                "inputBinding": {
                                                    "prefix": "--keep_program_records",
                                                    "position": 2
                                                },
                                                "id": "keep_program_records"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Rename sample IDs on-the-fly at runtime using the provided mapping file",
                                                "inputBinding": {
                                                    "prefix": "--sample_rename_mapping_file",
                                                    "position": 2
                                                },
                                                "id": "sample_rename_mapping_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Enable unsafe operations - nothing will be checked at runtime (ALLOW_N_CIGAR_READS| ALLOW_UNINDEXED_BAM| ALLOW_UNSET_BAM_SORT_ORDER| NO_READ_ORDER_VERIFICATION| ALLOW_SEQ_DICT_INCOMPATIBILITY| LENIENT_VCF_PROCESSING|ALL)",
                                                "inputBinding": {
                                                    "prefix": "--unsafe",
                                                    "position": 2
                                                },
                                                "id": "unsafe"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Just output sites without genotypes (i.e. only the first 8 columns of the VCF)",
                                                "inputBinding": {
                                                    "prefix": "--sites_only",
                                                    "position": 2
                                                },
                                                "id": "sites_only"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Always output all the records in VCF FORMAT fields, even if some are missing",
                                                "inputBinding": {
                                                    "prefix": "--never_trim_vcf_format_field",
                                                    "position": 2
                                                },
                                                "id": "never_trim_vcf_format_field"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Compression level to use for writing BAM files (0 - 9, higher is more compressed)",
                                                "inputBinding": {
                                                    "prefix": "--bam_compression",
                                                    "position": 2
                                                },
                                                "id": "bam_compression"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "If provided, output BAM files will be simplified to include just key reads for downstream variation discovery analyses (removing duplicates, PF-, non-primary reads), as well stripping all extended tags from the kept reads except the read group identifier",
                                                "inputBinding": {
                                                    "prefix": "--simplifyBAM",
                                                    "position": 2
                                                },
                                                "id": "simplifyBAM"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Turn off on-the-fly creation of",
                                                "inputBinding": {
                                                    "prefix": "--disable_bam_indexing",
                                                    "position": 2
                                                },
                                                "id": "disable_bam_indexing"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Enable on-the-fly creation of",
                                                "inputBinding": {
                                                    "prefix": "--generate_md5",
                                                    "position": 2
                                                },
                                                "id": "generate_md5"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Number of data threads to allocate to this analysis",
                                                "inputBinding": {
                                                    "prefix": "--num_threads",
                                                    "position": 2
                                                },
                                                "id": "num_threads"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "default": "8",
                                                "doc": "Number of CPU threads to allocate per data thread",
                                                "inputBinding": {
                                                    "prefix": "--num_cpu_threads_per_data_thread",
                                                    "position": 2
                                                },
                                                "id": "num_cpu_threads_per_data_thread"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Enable threading efficiency monitoring",
                                                "inputBinding": {
                                                    "prefix": "--monitorThreadEfficiency",
                                                    "position": 2
                                                },
                                                "id": "monitorThreadEfficiency"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Total number of BAM file handles to keep open simultaneously",
                                                "inputBinding": {
                                                    "prefix": "--num_bam_file_handles",
                                                    "position": 2
                                                },
                                                "id": "num_bam_file_handles"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Exclude read groups based on tags",
                                                "inputBinding": {
                                                    "prefix": "--read_group_black_list",
                                                    "position": 2
                                                },
                                                "id": "read_group_black_list"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Pedigree files for samples",
                                                "inputBinding": {
                                                    "prefix": "--pedigree",
                                                    "position": 2
                                                },
                                                "id": "pedigree"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Pedigree string for samples",
                                                "inputBinding": {
                                                    "prefix": "--pedigreeString",
                                                    "position": 2
                                                },
                                                "id": "pedigreeString"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Validation strictness for pedigree information (STRICT| SILENT)",
                                                "inputBinding": {
                                                    "prefix": "--pedigreeValidationType",
                                                    "position": 2
                                                },
                                                "id": "pedigreeValidationType"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Type of IndexCreator to use for VCF/BCF indices (DYNAMIC_SEEK| DYNAMIC_SIZE|LINEAR|INTERVAL)",
                                                "inputBinding": {
                                                    "prefix": "--variant_index_type",
                                                    "position": 2
                                                },
                                                "id": "variant_index_type"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Parameter to pass to the VCF/BCF IndexCreator",
                                                "inputBinding": {
                                                    "prefix": "--variant_index_parameter",
                                                    "position": 2
                                                },
                                                "id": "variant_index_parameter"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Set the minimum level of logging",
                                                "inputBinding": {
                                                    "prefix": "--logging_level",
                                                    "position": 2
                                                },
                                                "id": "logging_level"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Set the logging location",
                                                "inputBinding": {
                                                    "prefix": "--log_to_file",
                                                    "position": 2
                                                },
                                                "id": "log_to_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "The output recalibration table file to create",
                                                "inputBinding": {
                                                    "prefix": "--out",
                                                    "position": 2
                                                },
                                                "id": "out"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "File",
                                                    "inputBinding": {
                                                        "prefix": "--knownSites"
                                                    }
                                                },
                                                "inputBinding": {
                                                    "position": 2
                                                },
                                                "doc": "A database of known polymorphic sites to skip over in the recalibration algorithm",
                                                "secondaryFiles": [
                                                    ".idx"
                                                ],
                                                "id": "knownSites"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "List the available covariates and exit",
                                                "inputBinding": {
                                                    "prefix": "--list",
                                                    "position": 2
                                                },
                                                "id": "list"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": "string",
                                                    "inputBinding": {
                                                        "prefix": "--covariate"
                                                    }
                                                },
                                                "inputBinding": {
                                                    "position": 2
                                                },
                                                "doc": "One or more covariates to be used in the recalibration. Can be specified multiple times",
                                                "id": "covariate"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Do not use the standard set of covariates, but rather just the ones listed using the -cov argumentthout_dbsnp_potentially_ruining_quality,--run_without_dbsnp_potentially_ruining_quality If specified, allows the recalibrator to be used without a dbsnp rod. Very unsafe and for expert users only.",
                                                "inputBinding": {
                                                    "prefix": "--no_standard_covs",
                                                    "position": 2
                                                },
                                                "id": "no_standard_covs"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "How should we recalibrate solid bases in which the reference was inserted? Options = DO_NOTHING, SET_Q_ZERO, SET_Q_ZERO_BASE_N, or REMOVE_REF_BIAS (DO_NOTHING| SET_Q_ZERO|SET_Q_ZERO_BASE_N| REMOVE_REF_BIAS)",
                                                "inputBinding": {
                                                    "prefix": "--solid_recal_mode",
                                                    "position": 2
                                                },
                                                "id": "solid_recal_mode"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Defines the behavior of the recalibrator when it encounters no calls in the color space. Options = THROW_EXCEPTION, LEAVE_READ_UNRECALIBRATED, or PURGE_READ (THROW_EXCEPTION| LEAVE_READ_UNRECALIBRATED| PURGE_READ)",
                                                "inputBinding": {
                                                    "prefix": "--solid_nocall_strategy",
                                                    "position": 2
                                                },
                                                "id": "solid_nocall_strategy"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Size of the k-mer context to be used for base mismatches",
                                                "inputBinding": {
                                                    "prefix": "--mismatches_context_size",
                                                    "position": 2
                                                },
                                                "id": "mismatches_context_size"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Size of the k-mer context to be used for base insertions and deletions",
                                                "inputBinding": {
                                                    "prefix": "--indels_context_size",
                                                    "position": 2
                                                },
                                                "id": "indels_context_size"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "The maximum cycle value permitted for the Cycle covariate",
                                                "inputBinding": {
                                                    "prefix": "--maximum_cycle_value",
                                                    "position": 2
                                                },
                                                "id": "maximum_cycle_value"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "default quality for the base mismatches covariate",
                                                "inputBinding": {
                                                    "prefix": "--mismatches_default_quality",
                                                    "position": 2
                                                },
                                                "id": "mismatches_default_quality"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "default quality for the base insertions covariate",
                                                "inputBinding": {
                                                    "prefix": "--insertions_default_quality",
                                                    "position": 2
                                                },
                                                "id": "insertions_default_quality"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "default quality for the base deletions covariate",
                                                "inputBinding": {
                                                    "prefix": "--deletions_default_quality",
                                                    "position": 2
                                                },
                                                "id": "deletions_default_quality"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "minimum quality for the bases in the tail of the reads to be considered",
                                                "inputBinding": {
                                                    "prefix": "--low_quality_tail",
                                                    "position": 2
                                                },
                                                "id": "low_quality_tail"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "number of distinct quality scores in the quantized output",
                                                "inputBinding": {
                                                    "prefix": "--quantizing_levels",
                                                    "position": 2
                                                },
                                                "id": "quantizing_levels"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "the binary tag covariate name if using it",
                                                "inputBinding": {
                                                    "prefix": "--binary_tag_name",
                                                    "position": 2
                                                },
                                                "id": "binary_tag_name"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Sort the rows in the tables of reports",
                                                "inputBinding": {
                                                    "prefix": "--sort_by_all_columns",
                                                    "position": 2
                                                },
                                                "id": "sort_by_all_columns"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Reduce memory usage in multi-threaded code at the expense of threading efficiency",
                                                "inputBinding": {
                                                    "prefix": "--lowMemoryMode",
                                                    "position": 2
                                                },
                                                "id": "lowMemoryMode"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "BQSR BAQ gap open penalty (Phred Scaled). Default value is 40. 30 is perhaps better for whole genome call sets",
                                                "inputBinding": {
                                                    "prefix": "--bqsrBAQGapOpenPenalty",
                                                    "position": 2
                                                },
                                                "id": "bqsrBAQGapOpenPenalty"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "filter out reads with CIGAR containing the N operator, instead of stop processing and report an error.",
                                                "inputBinding": {
                                                    "prefix": "--filter_reads_with_N_cigar",
                                                    "position": 2
                                                },
                                                "id": "filter_reads_with_N_cigar"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "if a read has mismatching number of bases and base qualities, filter out the read instead of blowing up.",
                                                "inputBinding": {
                                                    "prefix": "--filter_mismatching_base_and_quals",
                                                    "position": 2
                                                },
                                                "id": "filter_mismatching_base_and_quals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "if a read has no stored bases (i.e. a '*'), filter out the read instead of blowing up.",
                                                "inputBinding": {
                                                    "prefix": "--filter_bases_not_stored",
                                                    "position": 2
                                                },
                                                "id": "filter_bases_not_stored"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.out)\n    return inputs.out;\n  return null;\n}\n"
                                                },
                                                "id": "recal_matrix"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "ref_fasta",
                                            "id": "reference_sequence"
                                        },
                                        {
                                            "source": "index_bams/bam_indexed",
                                            "id": "input_file"
                                        },
                                        {
                                            "source": "dbsnp",
                                            "id": "dbsnp"
                                        },
                                        {
                                            "source": "hapmap",
                                            "id": "hapmap"
                                        },
                                        {
                                            "source": "indels_1000g",
                                            "id": "indels_1000g"
                                        },
                                        {
                                            "source": "snps_1000g",
                                            "id": "snps_1000g"
                                        },
                                        {
                                            "valueFrom": "${return [inputs.dbsnp,inputs.hapmap, inputs.indels_1000g, inputs.snps_1000g]}",
                                            "id": "knownSites"
                                        },
                                        {
                                            "source": "covariates",
                                            "id": "covariate"
                                        },
                                        {
                                            "valueFrom": "${ return \"recal.matrix\"; }",
                                            "id": "out"
                                        },
                                        {
                                            "valueFrom": "${ return [\"BadCigar\"]; }",
                                            "id": "read_filter"
                                        }
                                    ],
                                    "out": [
                                        "recal_matrix"
                                    ],
                                    "id": "gatk_base_recalibrator"
                                },
                                {
                                    "in": [
                                        {
                                            "source": "index_bams/bam_indexed",
                                            "id": "input_file"
                                        },
                                        {
                                            "source": "ref_fasta",
                                            "id": "reference_sequence"
                                        },
                                        {
                                            "source": "gatk_base_recalibrator/recal_matrix",
                                            "id": "BQSR"
                                        }
                                    ],
                                    "out": [
                                        "out",
                                        "qual_metrics",
                                        "qual_pdf"
                                    ],
                                    "scatter": [
                                        "input_file"
                                    ],
                                    "scatterMethod": "dotproduct",
                                    "run": {
                                        "class": "Workflow",
                                        "id": "parallel_printreads",
                                        "inputs": [
                                            {
                                                "type": "File",
                                                "id": "input_file"
                                            },
                                            {
                                                "type": "File",
                                                "id": "reference_sequence"
                                            },
                                            {
                                                "type": "File",
                                                "id": "BQSR"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "secondaryFiles": [
                                                    "^.bai"
                                                ],
                                                "outputSource": "gatk_print_reads/out_bam",
                                                "id": "out"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "quality_metrics/qual_file",
                                                "id": "qual_metrics"
                                            },
                                            {
                                                "type": "File",
                                                "outputSource": "quality_metrics/qual_hist",
                                                "id": "qual_pdf"
                                            }
                                        ],
                                        "steps": [
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "id": "gatk-PrintReads",
                                                    "baseCommand": [
                                                        "java"
                                                    ],
                                                    "arguments": [
                                                        {
                                                            "valueFrom": "/usr/bin/gatk.jar",
                                                            "prefix": "-jar",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "PrintReads",
                                                            "prefix": "-T",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-XX:-UseGCOverheadLimit",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "ramMin": 36000,
                                                            "coresMin": 2,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-gatk:3.3-0",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "doc": "None\n",
                                                    "inputs": [
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "if a read has no stored bases (i.e. a '*'), filter out the read instead of blowing up.",
                                                            "inputBinding": {
                                                                "prefix": "--filter_bases_not_stored",
                                                                "position": 2
                                                            },
                                                            "id": "filter_bases_not_stored"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Write output to this BAM filename instead of STDOUT",
                                                            "inputBinding": {
                                                                "prefix": "--out",
                                                                "position": 2
                                                            },
                                                            "id": "out"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Exclude all reads with this read group from the output",
                                                            "inputBinding": {
                                                                "prefix": "--readGroup",
                                                                "position": 2
                                                            },
                                                            "id": "readGroup"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Exclude all reads with this platform from the output",
                                                            "inputBinding": {
                                                                "prefix": "--platform",
                                                                "position": 2
                                                            },
                                                            "id": "platform"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Print the first n reads from the file, discarding the rest",
                                                            "inputBinding": {
                                                                "prefix": "--number",
                                                                "position": 2
                                                            },
                                                            "id": "number"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "File containing a list of samples (one per line). Can be specified multiple times",
                                                            "inputBinding": {
                                                                "prefix": "--sample_file",
                                                                "position": 2
                                                            },
                                                            "id": "sample_file"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Sample name to be included in the analysis. Can be specified multiple times.",
                                                            "inputBinding": {
                                                                "prefix": "--sample_name",
                                                                "position": 2
                                                            },
                                                            "id": "sample_name"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Simplify all reads.",
                                                            "inputBinding": {
                                                                "prefix": "--simplify",
                                                                "position": 2
                                                            },
                                                            "id": "simplify"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Reads arguments from the specified file",
                                                            "inputBinding": {
                                                                "prefix": "--arg_file",
                                                                "position": 2
                                                            },
                                                            "id": "arg_file"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "doc": "Input file containing sequence data (SAM or BAM)",
                                                            "inputBinding": {
                                                                "prefix": "--input_file",
                                                                "position": 2
                                                            },
                                                            "id": "input_file"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Number of reads per SAM file to buffer in memory",
                                                            "inputBinding": {
                                                                "prefix": "--read_buffer_size",
                                                                "position": 2
                                                            },
                                                            "id": "read_buffer_size"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Run reporting mode (NO_ET|AWS| STDOUT)",
                                                            "inputBinding": {
                                                                "prefix": "--phone_home",
                                                                "position": 2
                                                            },
                                                            "id": "phone_home"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "GATK key file required to run with -et NO_ET",
                                                            "inputBinding": {
                                                                "prefix": "--gatk_key",
                                                                "position": 2
                                                            },
                                                            "id": "gatk_key"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Tag to identify this GATK run as part of a group of runs",
                                                            "inputBinding": {
                                                                "prefix": "--tag",
                                                                "position": 2
                                                            },
                                                            "id": "tag"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Filters to apply to reads before analysis",
                                                            "inputBinding": {
                                                                "prefix": "--read_filter",
                                                                "position": 2
                                                            },
                                                            "id": "read_filter"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "One or more genomic intervals over which to operate",
                                                            "inputBinding": {
                                                                "prefix": "--intervals",
                                                                "position": 2
                                                            },
                                                            "id": "intervals"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "One or more genomic intervals to exclude from processing",
                                                            "inputBinding": {
                                                                "prefix": "--excludeIntervals",
                                                                "position": 2
                                                            },
                                                            "id": "excludeIntervals"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Set merging approach to use for combining interval inputs (UNION|INTERSECTION)",
                                                            "inputBinding": {
                                                                "prefix": "--interval_set_rule",
                                                                "position": 2
                                                            },
                                                            "id": "interval_set_rule"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Interval merging rule for abutting intervals (ALL| OVERLAPPING_ONLY)",
                                                            "inputBinding": {
                                                                "prefix": "--interval_merging",
                                                                "position": 2
                                                            },
                                                            "id": "interval_merging"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Amount of padding (in bp) to add to each interval",
                                                            "inputBinding": {
                                                                "prefix": "--interval_padding",
                                                                "position": 2
                                                            },
                                                            "id": "interval_padding"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "secondaryFiles": [
                                                                ".amb",
                                                                ".ann",
                                                                ".bwt",
                                                                ".pac",
                                                                ".sa",
                                                                ".fai",
                                                                "^.dict"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "--reference_sequence",
                                                                "position": 2
                                                            },
                                                            "id": "reference_sequence"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Use a non-deterministic random seed",
                                                            "inputBinding": {
                                                                "prefix": "--nonDeterministicRandomSeed",
                                                                "position": 2
                                                            },
                                                            "id": "nonDeterministicRandomSeed"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Stop execution cleanly as soon as maxRuntime has been reached",
                                                            "inputBinding": {
                                                                "prefix": "--maxRuntime",
                                                                "position": 2
                                                            },
                                                            "id": "maxRuntime"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Unit of time used by maxRuntime (NANOSECONDS|MICROSECONDS| MILLISECONDS|SECONDS|MINUTES| HOURS|DAYS)",
                                                            "inputBinding": {
                                                                "prefix": "--maxRuntimeUnits",
                                                                "position": 2
                                                            },
                                                            "id": "maxRuntimeUnits"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Type of read downsampling to employ at a given locus (NONE| ALL_READS|BY_SAMPLE)",
                                                            "inputBinding": {
                                                                "prefix": "--downsampling_type",
                                                                "position": 2
                                                            },
                                                            "id": "downsampling_type"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Fraction of reads to downsample to",
                                                            "inputBinding": {
                                                                "prefix": "--downsample_to_fraction",
                                                                "position": 2
                                                            },
                                                            "id": "downsample_to_fraction"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Target coverage threshold for downsampling to coverage",
                                                            "inputBinding": {
                                                                "prefix": "--downsample_to_coverage",
                                                                "position": 2
                                                            },
                                                            "id": "downsample_to_coverage"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Type of BAQ calculation to apply in the engine (OFF| CALCULATE_AS_NECESSARY| RECALCULATE)",
                                                            "inputBinding": {
                                                                "prefix": "--baq",
                                                                "position": 2
                                                            },
                                                            "id": "baq"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "BAQ gap open penalty",
                                                            "inputBinding": {
                                                                "prefix": "--baqGapOpenPenalty",
                                                                "position": 2
                                                            },
                                                            "id": "baqGapOpenPenalty"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "refactor cigar string with NDN elements to one element",
                                                            "inputBinding": {
                                                                "prefix": "--refactor_NDN_cigar_string",
                                                                "position": 2
                                                            },
                                                            "id": "refactor_NDN_cigar_string"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Fix mis-encoded base quality scores",
                                                            "inputBinding": {
                                                                "prefix": "--fix_misencoded_quality_scores",
                                                                "position": 2
                                                            },
                                                            "id": "fix_misencoded_quality_scores"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Ignore warnings about base quality score encoding",
                                                            "inputBinding": {
                                                                "prefix": "--allow_potentially_misencoded_quality_scores",
                                                                "position": 2
                                                            },
                                                            "id": "allow_potentially_misencoded_quality_scores"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Use the base quality scores from the OQ tag",
                                                            "inputBinding": {
                                                                "prefix": "--useOriginalQualities",
                                                                "position": 2
                                                            },
                                                            "id": "useOriginalQualities"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Assign a default base quality",
                                                            "inputBinding": {
                                                                "prefix": "--defaultBaseQualities",
                                                                "position": 2
                                                            },
                                                            "id": "defaultBaseQualities"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Write GATK runtime performance log to this file",
                                                            "inputBinding": {
                                                                "prefix": "--performanceLog",
                                                                "position": 2
                                                            },
                                                            "id": "performanceLog"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string",
                                                                "File"
                                                            ],
                                                            "doc": "Input covariates table file for on-the-fly base quality score recalibration",
                                                            "inputBinding": {
                                                                "prefix": "--BQSR",
                                                                "position": 2
                                                            },
                                                            "id": "BQSR"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Disable printing of base insertion and deletion tags (with -BQSR)",
                                                            "inputBinding": {
                                                                "prefix": "--disable_indel_quals",
                                                                "position": 2
                                                            },
                                                            "id": "disable_indel_quals"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Emit the OQ tag with the original base qualities (with -BQSR)",
                                                            "inputBinding": {
                                                                "prefix": "--emit_original_quals",
                                                                "position": 2
                                                            },
                                                            "id": "emit_original_quals"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Don't recalibrate bases with quality scores less than this threshold (with -BQSR)",
                                                            "inputBinding": {
                                                                "prefix": "--preserve_qscores_less_than",
                                                                "position": 2
                                                            },
                                                            "id": "preserve_qscores_less_than"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Global Qscore Bayesian prior to use for BQSR",
                                                            "inputBinding": {
                                                                "prefix": "--globalQScorePrior",
                                                                "position": 2
                                                            },
                                                            "id": "globalQScorePrior"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "How strict should we be with validation (STRICT|LENIENT| SILENT)",
                                                            "inputBinding": {
                                                                "prefix": "--validation_strictness",
                                                                "position": 2
                                                            },
                                                            "id": "validation_strictness"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Remove program records from the SAM header",
                                                            "inputBinding": {
                                                                "prefix": "--remove_program_records",
                                                                "position": 2
                                                            },
                                                            "id": "remove_program_records"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Keep program records in the SAM header",
                                                            "inputBinding": {
                                                                "prefix": "--keep_program_records",
                                                                "position": 2
                                                            },
                                                            "id": "keep_program_records"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Rename sample IDs on-the-fly at runtime using the provided mapping file",
                                                            "inputBinding": {
                                                                "prefix": "--sample_rename_mapping_file",
                                                                "position": 2
                                                            },
                                                            "id": "sample_rename_mapping_file"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Enable unsafe operations - nothing will be checked at runtime (ALLOW_N_CIGAR_READS| ALLOW_UNINDEXED_BAM| ALLOW_UNSET_BAM_SORT_ORDER| NO_READ_ORDER_VERIFICATION| ALLOW_SEQ_DICT_INCOMPATIBILITY| LENIENT_VCF_PROCESSING|ALL)",
                                                            "inputBinding": {
                                                                "prefix": "--unsafe",
                                                                "position": 2
                                                            },
                                                            "id": "unsafe"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Just output sites without genotypes (i.e. only the first 8 columns of the VCF)",
                                                            "inputBinding": {
                                                                "prefix": "--sites_only",
                                                                "position": 2
                                                            },
                                                            "id": "sites_only"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Always output all the records in VCF FORMAT fields, even if some are missing",
                                                            "inputBinding": {
                                                                "prefix": "--never_trim_vcf_format_field",
                                                                "position": 2
                                                            },
                                                            "id": "never_trim_vcf_format_field"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Compression level to use for writing BAM files (0 - 9, higher is more compressed)",
                                                            "inputBinding": {
                                                                "prefix": "--bam_compression",
                                                                "position": 2
                                                            },
                                                            "id": "bam_compression"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "If provided, output BAM files will be simplified to include just key reads for downstream variation discovery analyses (removing duplicates, PF-, non-primary reads), as well stripping all extended tags from the kept reads except the read group identifier",
                                                            "inputBinding": {
                                                                "prefix": "--simplifyBAM",
                                                                "position": 2
                                                            },
                                                            "id": "simplifyBAM"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Turn off on-the-fly creation of",
                                                            "inputBinding": {
                                                                "prefix": "--disable_bam_indexing",
                                                                "position": 2
                                                            },
                                                            "id": "disable_bam_indexing"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Enable on-the-fly creation of",
                                                            "inputBinding": {
                                                                "prefix": "--generate_md5",
                                                                "position": 2
                                                            },
                                                            "id": "generate_md5"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Number of data threads to allocate to this analysis",
                                                            "inputBinding": {
                                                                "prefix": "--num_threads",
                                                                "position": 2
                                                            },
                                                            "id": "num_threads"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "default": "2",
                                                            "doc": "Number of CPU threads to allocate per data thread",
                                                            "inputBinding": {
                                                                "prefix": "--num_cpu_threads_per_data_thread",
                                                                "position": 2
                                                            },
                                                            "id": "num_cpu_threads_per_data_thread"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "Enable threading efficiency monitoring",
                                                            "inputBinding": {
                                                                "prefix": "--monitorThreadEfficiency",
                                                                "position": 2
                                                            },
                                                            "id": "monitorThreadEfficiency"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Total number of BAM file handles to keep open simultaneously",
                                                            "inputBinding": {
                                                                "prefix": "--num_bam_file_handles",
                                                                "position": 2
                                                            },
                                                            "id": "num_bam_file_handles"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Exclude read groups based on tags",
                                                            "inputBinding": {
                                                                "prefix": "--read_group_black_list",
                                                                "position": 2
                                                            },
                                                            "id": "read_group_black_list"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Pedigree files for samples",
                                                            "inputBinding": {
                                                                "prefix": "--pedigree",
                                                                "position": 2
                                                            },
                                                            "id": "pedigree"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Pedigree string for samples",
                                                            "inputBinding": {
                                                                "prefix": "--pedigreeString",
                                                                "position": 2
                                                            },
                                                            "id": "pedigreeString"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Validation strictness for pedigree information (STRICT| SILENT)",
                                                            "inputBinding": {
                                                                "prefix": "--pedigreeValidationType",
                                                                "position": 2
                                                            },
                                                            "id": "pedigreeValidationType"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Type of IndexCreator to use for VCF/BCF indices (DYNAMIC_SEEK| DYNAMIC_SIZE|LINEAR|INTERVAL)",
                                                            "inputBinding": {
                                                                "prefix": "--variant_index_type",
                                                                "position": 2
                                                            },
                                                            "id": "variant_index_type"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Parameter to pass to the VCF/BCF IndexCreator",
                                                            "inputBinding": {
                                                                "prefix": "--variant_index_parameter",
                                                                "position": 2
                                                            },
                                                            "id": "variant_index_parameter"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Set the minimum level of logging",
                                                            "inputBinding": {
                                                                "prefix": "--logging_level",
                                                                "position": 2
                                                            },
                                                            "id": "logging_level"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string"
                                                                }
                                                            ],
                                                            "doc": "Set the logging location",
                                                            "inputBinding": {
                                                                "prefix": "--log_to_file",
                                                                "position": 2
                                                            },
                                                            "id": "log_to_file"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "filter out reads with CIGAR containing the N operator, instead of stop processing and report an error.",
                                                            "inputBinding": {
                                                                "prefix": "--filter_reads_with_N_cigar",
                                                                "position": 2
                                                            },
                                                            "id": "filter_reads_with_N_cigar"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "doc": "if a read has mismatching number of bases and base qualities, filter out the read instead of blowing up.",
                                                            "inputBinding": {
                                                                "prefix": "--filter_mismatching_base_and_quals",
                                                                "position": 2
                                                            },
                                                            "id": "filter_mismatching_base_and_quals"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "secondaryFiles": [
                                                                "^.bai"
                                                            ],
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.out)\n    return inputs.out;\n  return null;\n}\n"
                                                            },
                                                            "id": "out_bam"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "reference_sequence",
                                                        "id": "reference_sequence"
                                                    },
                                                    {
                                                        "source": "BQSR",
                                                        "id": "BQSR"
                                                    },
                                                    {
                                                        "source": "input_file",
                                                        "id": "input_file"
                                                    },
                                                    {
                                                        "valueFrom": "${ return \"5\"; }",
                                                        "id": "num_cpu_threads_per_data_thread"
                                                    },
                                                    {
                                                        "valueFrom": "${ return true; }",
                                                        "id": "emit_original_quals"
                                                    },
                                                    {
                                                        "valueFrom": "${ return ['RECALCULATE'];}",
                                                        "id": "baq"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.input_file.basename.replace(\".bam\", \".printreads.bam\");}",
                                                        "id": "out"
                                                    }
                                                ],
                                                "out": [
                                                    "out_bam"
                                                ],
                                                "id": "gatk_print_reads"
                                            },
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "id": "picard-CollectMultipleMetrics",
                                                    "baseCommand": [
                                                        "java"
                                                    ],
                                                    "arguments": [
                                                        {
                                                            "valueFrom": "/usr/bin/picard-tools/picard.jar",
                                                            "prefix": "-jar",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "CollectMultipleMetrics",
                                                            "position": 1,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-XX:-UseGCOverheadLimit",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                            "position": 0,
                                                            "shellQuote": false
                                                        },
                                                        {
                                                            "valueFrom": "TMP_DIR=$(runtime.tmpdir)",
                                                            "position": 2,
                                                            "shellQuote": false
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "ramMin": 16000,
                                                            "coresMin": 1,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-picard:2.9",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "doc": "None\n",
                                                    "inputs": [
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "I=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "I"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "inputBinding": {
                                                                "prefix": "REFERENCE_SEQUENCE=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "REFERENCE_SEQUENCE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Append the given file extension to all metric file names (ex. OUTPUT.insert_size_metrics.EXT). None if null Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "FILE_EXTENSION=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "EXT"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                {
                                                                    "type": "array",
                                                                    "items": "string",
                                                                    "inputBinding": {
                                                                        "prefix": "PROGRAM=",
                                                                        "separate": false
                                                                    }
                                                                }
                                                            ],
                                                            "inputBinding": {
                                                                "position": 2
                                                            },
                                                            "doc": "List of metrics programs to apply during the pass through the SAM file. Possible values - {CollectAlignmentSummaryMetrics, CollectInsertSizeMetrics, QualityScoreDistribution, MeanQualityByCycle} This option may be specified 0 or more times. This option can be set to 'null' to clear the default list.",
                                                            "id": "PROGRAM"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "An optional list of intervals to restrict analysis to. Only pertains to some of the PROGRAMs. Programs whose stand-alone CLP does not have an INTERVALS argument will silently ignore this argument. Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "INTERVALS=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "INTERVALS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "VCF format dbSNP file, used to exclude regions around known polymorphisms from analysis by some PROGRAMs; PROGRAMs whose CLP doesn't allow for this argument will quietly ignore it. Default value - null.",
                                                            "inputBinding": {
                                                                "prefix": "DB_SNP=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "DB_SNP"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "Include unpaired reads in CollectSequencingArtifactMetrics. If set to true then all paired reads will be included as well - MINIMUM_INSERT_SIZE and MAXIMUM_INSERT_SIZE will be ignored in CollectSequencingArtifactMetrics. Default value - false. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                            "inputBinding": {
                                                                "prefix": "INCLUDE_UNPAIRED=True",
                                                                "position": 2
                                                            },
                                                            "id": "UNPAIRED"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "Base name of output files. Required.",
                                                            "inputBinding": {
                                                                "prefix": "OUTPUT=",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "O"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "If true (default), then the sort order in the header file will be ignored. Default value - true. This option can be set to 'null' to clear the default value. Possible values - {true, false}",
                                                            "inputBinding": {
                                                                "prefix": "ASSUME_SORTED=True",
                                                                "separate": false,
                                                                "position": 2
                                                            },
                                                            "id": "AS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Stop after processing N reads, mainly for debugging. Default value - 0. This option can be set to 'null' to clear the default value.",
                                                            "inputBinding": {
                                                                "prefix": "STOP_AFTER=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "STOP_AFTER"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "QUIET=True",
                                                                "position": 2
                                                            },
                                                            "id": "QUIET"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_MD5_FILE=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_MD5_FILE"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "default": false,
                                                            "inputBinding": {
                                                                "prefix": "CREATE_INDEX=True",
                                                                "position": 2
                                                            },
                                                            "id": "CREATE_INDEX"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "VERBOSITY=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "VERBOSITY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "default": "SILENT",
                                                            "inputBinding": {
                                                                "prefix": "VALIDATION_STRINGENCY=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "VALIDATION_STRINGENCY"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "COMPRESSION_LEVEL=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "COMPRESSION_LEVEL"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "inputBinding": {
                                                                "prefix": "MAX_RECORDS_IN_RAM=",
                                                                "position": 2,
                                                                "separate": false
                                                            },
                                                            "id": "MAX_RECORDS_IN_RAM"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.O)\n    return inputs.O.concat('.quality_by_cycle_metrics');\n  return null;\n}\n"
                                                            },
                                                            "id": "qual_file"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.O)\n    return inputs.O.concat('.quality_by_cycle.pdf');\n  return null;\n}\n"
                                                            },
                                                            "id": "qual_hist"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.O)\n    return inputs.O.concat('.insert_size_metrics');\n  return null;\n}\n"
                                                            },
                                                            "id": "is_file"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "outputBinding": {
                                                                "glob": "${\n  if (inputs.O)\n    return inputs.O.concat('.insert_size_histogram.pdf');\n  return null;\n}\n"
                                                            },
                                                            "id": "is_hist"
                                                        }
                                                    ]
                                                },
                                                "in": [
                                                    {
                                                        "source": "gatk_print_reads/out_bam",
                                                        "id": "I"
                                                    },
                                                    {
                                                        "source": "reference_sequence",
                                                        "id": "REFERENCE_SEQUENCE"
                                                    },
                                                    {
                                                        "valueFrom": "${return [\"null\",\"MeanQualityByCycle\"]}",
                                                        "id": "PROGRAM"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.I.basename.replace(\".bam\", \".qmetrics\")}",
                                                        "id": "O"
                                                    }
                                                ],
                                                "out": [
                                                    "qual_file",
                                                    "qual_hist"
                                                ],
                                                "id": "quality_metrics"
                                            }
                                        ],
                                        "requirements": []
                                    },
                                    "id": "parallel_printreads"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "pair",
                                "id": "pair"
                            },
                            {
                                "source": "sample_alignment/bam",
                                "id": "bams"
                            },
                            {
                                "source": "hapmap",
                                "id": "hapmap"
                            },
                            {
                                "source": "dbsnp",
                                "id": "dbsnp"
                            },
                            {
                                "source": "indels_1000g",
                                "id": "indels_1000g"
                            },
                            {
                                "source": "snps_1000g",
                                "id": "snps_1000g"
                            },
                            {
                                "source": "covariates",
                                "id": "covariates"
                            },
                            {
                                "source": "genome",
                                "id": "genome"
                            },
                            {
                                "source": "ref_fasta",
                                "id": "ref_fasta"
                            },
                            {
                                "source": "intervals",
                                "id": "intervals"
                            },
                            {
                                "source": "abra_ram_min",
                                "id": "abra_ram_min"
                            }
                        ],
                        "out": [
                            "outbams",
                            "covint_list",
                            "covint_bed",
                            "qual_metrics",
                            "qual_pdf"
                        ],
                        "id": "realignment"
                    }
                ]
            },
            "in": [
                {
                    "source": "runparams",
                    "id": "runparams"
                },
                {
                    "source": "db_files",
                    "id": "db_files"
                },
                {
                    "source": "pair",
                    "id": "pair"
                },
                {
                    "valueFrom": "${ return inputs.runparams.genome }",
                    "id": "genome"
                },
                {
                    "valueFrom": "${ return inputs.runparams.intervals }",
                    "id": "intervals"
                },
                {
                    "valueFrom": "${ return inputs.runparams.opt_dup_pix_dist }",
                    "id": "opt_dup_pix_dist"
                },
                {
                    "source": "hapmap",
                    "id": "hapmap"
                },
                {
                    "source": "dbsnp",
                    "id": "dbsnp"
                },
                {
                    "source": "indels_1000g",
                    "id": "indels_1000g"
                },
                {
                    "source": "snps_1000g",
                    "id": "snps_1000g"
                },
                {
                    "valueFrom": "${ return inputs.runparams.covariates }",
                    "id": "covariates"
                },
                {
                    "valueFrom": "${ return inputs.runparams.abra_scratch }",
                    "id": "abra_scratch"
                },
                {
                    "valueFrom": "${ return inputs.runparams.abra_ram_min }",
                    "id": "abra_ram_min"
                },
                {
                    "valueFrom": "${ return inputs.runparams.gatk_jar_path }",
                    "id": "gatk_jar_path"
                },
                {
                    "valueFrom": "${ return inputs.db_files.bait_intervals }",
                    "id": "bait_intervals"
                },
                {
                    "valueFrom": "${ return inputs.db_files.target_intervals }",
                    "id": "target_intervals"
                },
                {
                    "valueFrom": "${ return inputs.db_files.fp_intervals }",
                    "id": "fp_intervals"
                },
                {
                    "source": "mouse_fasta",
                    "id": "mouse_fasta"
                },
                {
                    "source": "ref_fasta",
                    "id": "ref_fasta"
                },
                {
                    "valueFrom": "${ return inputs.db_files.conpair_markers_bed }",
                    "id": "conpair_markers_bed"
                }
            ],
            "out": [
                "bams",
                "clstats1",
                "clstats2",
                "md_metrics",
                "covint_list",
                "bed",
                "as_metrics",
                "hs_metrics",
                "insert_metrics",
                "insert_pdf",
                "per_target_coverage",
                "qual_metrics",
                "qual_pdf",
                "doc_basecounts",
                "gcbias_pdf",
                "gcbias_metrics",
                "gcbias_summary",
                "conpair_pileup"
            ],
            "id": "alignment"
        },
        {
            "run": {
                "cwlVersion": "v1.0",
                "class": "Workflow",
                "id": "variants-pair",
                "requirements": [
                    {
                        "class": "MultipleInputFeatureRequirement"
                    },
                    {
                        "class": "ScatterFeatureRequirement"
                    },
                    {
                        "class": "SubworkflowFeatureRequirement"
                    },
                    {
                        "class": "InlineJavascriptRequirement"
                    },
                    {
                        "class": "StepInputExpressionRequirement"
                    }
                ],
                "inputs": [
                    {
                        "type": "File",
                        "id": "tumor_bam"
                    },
                    {
                        "type": "File",
                        "id": "normal_bam"
                    },
                    {
                        "type": "File",
                        "id": "bed"
                    },
                    {
                        "type": "string",
                        "id": "normal_sample_name"
                    },
                    {
                        "type": "string",
                        "id": "tumor_sample_name"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".idx"
                        ],
                        "id": "dbsnp"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".idx"
                        ],
                        "id": "cosmic"
                    },
                    {
                        "type": "int",
                        "id": "mutect_dcov"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "string"
                        },
                        "id": "mutect_rf"
                    },
                    {
                        "type": "File",
                        "id": "refseq"
                    },
                    {
                        "type": "string",
                        "id": "hotspot_vcf"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".amb",
                            ".ann",
                            ".bwt",
                            ".pac",
                            ".sa",
                            ".fai",
                            "^.dict"
                        ],
                        "id": "ref_fasta"
                    },
                    {
                        "type": "File",
                        "id": "facets_snps"
                    },
                    {
                        "type": "float",
                        "id": "complex_nn"
                    },
                    {
                        "type": "float",
                        "id": "complex_tn"
                    }
                ],
                "outputs": [
                    {
                        "type": "File",
                        "outputSource": "tabix_index/tabix_output_file",
                        "secondaryFiles": [
                            ".tbi"
                        ],
                        "id": "combine_vcf"
                    },
                    {
                        "type": "File",
                        "outputSource": "annotate/annotate_vcf_output_file",
                        "id": "annotate_vcf"
                    },
                    {
                        "type": "File",
                        "outputSource": "call_variants/snp_pileup",
                        "id": "snp_pileup"
                    },
                    {
                        "type": "File",
                        "outputSource": "call_variants/mutect_vcf",
                        "id": "mutect_vcf"
                    },
                    {
                        "type": "File",
                        "outputSource": "call_variants/mutect_callstats",
                        "id": "mutect_callstats"
                    },
                    {
                        "type": "File",
                        "outputSource": "call_variants/vardict_vcf",
                        "id": "vardict_vcf"
                    },
                    {
                        "type": "File",
                        "outputSource": "filtering/vardict_vcf_filtering_output",
                        "secondaryFiles": [
                            ".tbi"
                        ],
                        "id": "vardict_norm_vcf"
                    },
                    {
                        "type": "File",
                        "outputSource": "filtering/mutect_vcf_filtering_output",
                        "secondaryFiles": [
                            ".tbi"
                        ],
                        "id": "mutect_norm_vcf"
                    }
                ],
                "steps": [
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "cmo_index"
                            ],
                            "label": "cmo-index",
                            "requirements": [
                                {
                                    "ramMin": 16000,
                                    "coresMin": 1,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-cmo-utils:1.9.15",
                                    "class": "DockerRequirement"
                                },
                                {
                                    "listing": [
                                        "$(inputs.bam)"
                                    ],
                                    "class": "InitialWorkDirRequirement"
                                }
                            ],
                            "inputs": [
                                {
                                    "type": "File",
                                    "inputBinding": {
                                        "prefix": "--bam"
                                    },
                                    "id": "bam"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "$(inputs.bam.basename)"
                                    },
                                    "secondaryFiles": [
                                        "^.bai",
                                        ".bai"
                                    ],
                                    "id": "bam_indexed"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "normal_bam",
                                "id": "bam"
                            }
                        ],
                        "out": [
                            "bam_indexed"
                        ],
                        "id": "normal_index"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "cmo_index"
                            ],
                            "label": "cmo-index",
                            "requirements": [
                                {
                                    "ramMin": 16000,
                                    "coresMin": 1,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-cmo-utils:1.9.15",
                                    "class": "DockerRequirement"
                                },
                                {
                                    "listing": [
                                        "$(inputs.bam)"
                                    ],
                                    "class": "InitialWorkDirRequirement"
                                }
                            ],
                            "inputs": [
                                {
                                    "type": "File",
                                    "inputBinding": {
                                        "prefix": "--bam"
                                    },
                                    "id": "bam"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "$(inputs.bam.basename)"
                                    },
                                    "secondaryFiles": [
                                        "^.bai",
                                        ".bai"
                                    ],
                                    "id": "bam_indexed"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "tumor_bam",
                                "id": "bam"
                            }
                        ],
                        "out": [
                            "bam_indexed"
                        ],
                        "id": "tumor_index"
                    },
                    {
                        "in": [
                            {
                                "source": "tumor_index/bam_indexed",
                                "id": "tumor_bam"
                            },
                            {
                                "source": "normal_index/bam_indexed",
                                "id": "normal_bam"
                            },
                            {
                                "source": "ref_fasta",
                                "id": "ref_fasta"
                            },
                            {
                                "source": "normal_sample_name",
                                "id": "normal_sample_name"
                            },
                            {
                                "source": "tumor_sample_name",
                                "id": "tumor_sample_name"
                            },
                            {
                                "source": "dbsnp",
                                "id": "dbsnp"
                            },
                            {
                                "source": "cosmic",
                                "id": "cosmic"
                            },
                            {
                                "source": "mutect_dcov",
                                "id": "mutect_dcov"
                            },
                            {
                                "source": "mutect_rf",
                                "id": "mutect_rf"
                            },
                            {
                                "source": "bed",
                                "id": "bed"
                            },
                            {
                                "source": "refseq",
                                "id": "refseq"
                            },
                            {
                                "source": "facets_snps",
                                "id": "facets_snps"
                            }
                        ],
                        "out": [
                            "vardict_vcf",
                            "mutect_vcf",
                            "mutect_callstats",
                            "snp_pileup"
                        ],
                        "run": {
                            "class": "Workflow",
                            "id": "call-variants",
                            "inputs": [
                                {
                                    "type": "File",
                                    "id": "normal_bam"
                                },
                                {
                                    "type": "File",
                                    "id": "tumor_bam"
                                },
                                {
                                    "type": "File",
                                    "id": "ref_fasta"
                                },
                                {
                                    "type": "string",
                                    "id": "normal_sample_name"
                                },
                                {
                                    "type": "string",
                                    "id": "tumor_sample_name"
                                },
                                {
                                    "type": "File",
                                    "id": "dbsnp"
                                },
                                {
                                    "type": "File",
                                    "id": "cosmic"
                                },
                                {
                                    "type": "int",
                                    "id": "mutect_dcov"
                                },
                                {
                                    "type": {
                                        "type": "array",
                                        "items": "string"
                                    },
                                    "id": "mutect_rf"
                                },
                                {
                                    "type": "File",
                                    "id": "bed"
                                },
                                {
                                    "type": "File",
                                    "id": "refseq"
                                },
                                {
                                    "type": "File",
                                    "id": "facets_snps"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputSource": "mutect/output",
                                    "id": "mutect_vcf"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "mutect/callstats_output",
                                    "id": "mutect_callstats"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "vardict/output",
                                    "id": "vardict_vcf"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "snp_pileup/out_file",
                                    "id": "snp_pileup"
                                }
                            ],
                            "steps": [
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "baseCommand": [
                                            "/usr/bin/snp-pileup"
                                        ],
                                        "id": "htstools-snp-pileup",
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 8000,
                                                "coresMin": 1,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-htstools:0.1.1",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "run snp-pileup\n",
                                        "inputs": [
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Do not discard anomalous read pairs.",
                                                "inputBinding": {
                                                    "prefix": "--count-orphans"
                                                },
                                                "id": "count_orphans"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Sets the maximum depth. Default is 4000.",
                                                "inputBinding": {
                                                    "prefix": "--max-depth"
                                                },
                                                "id": "max_depth"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Compresses the output file with BGZF.",
                                                "inputBinding": {
                                                    "prefix": "--gzip"
                                                },
                                                "id": "gzip"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Show a progress bar. WARNING - requires additionaltime to calculate number of SNPs, and will takelonger than normal.",
                                                "inputBinding": {
                                                    "prefix": "--progress"
                                                },
                                                "id": "progress"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Every MULTIPLE positions, if there is no SNP,insert a blank record with the total count at theposition.",
                                                "inputBinding": {
                                                    "prefix": "--pseudo-snps"
                                                },
                                                "id": "pseudo_snps"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Sets the minimum threshold for mappingquality. Default is 0.",
                                                "inputBinding": {
                                                    "prefix": "--min-map-quality"
                                                },
                                                "id": "min_map_quality"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Sets the minimum threshold for base quality.Default is 0.",
                                                "inputBinding": {
                                                    "prefix": "--min-base-quality"
                                                },
                                                "id": "min_base_quality"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "default": "10,0",
                                                "doc": "Comma separated list of minimum read counts fora position to be output. Default is 0.",
                                                "inputBinding": {
                                                    "prefix": "--min-read-counts"
                                                },
                                                "id": "min_read_counts"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Show detailed messages.",
                                                "inputBinding": {
                                                    "prefix": "--verbose"
                                                },
                                                "id": "verbose"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Disable read-pair overlap detection.",
                                                "inputBinding": {
                                                    "prefix": "--ignore-overlaps"
                                                },
                                                "id": "ignore_overlaps"
                                            },
                                            {
                                                "type": "File",
                                                "doc": "vcf file",
                                                "inputBinding": {
                                                    "position": 1
                                                },
                                                "id": "vcf"
                                            },
                                            {
                                                "type": "string",
                                                "doc": "output file",
                                                "inputBinding": {
                                                    "position": 2
                                                },
                                                "id": "output_file"
                                            },
                                            {
                                                "type": "File",
                                                "doc": "normal bam",
                                                "inputBinding": {
                                                    "position": 3
                                                },
                                                "id": "normal_bam"
                                            },
                                            {
                                                "type": "File",
                                                "doc": "tumor bam",
                                                "inputBinding": {
                                                    "position": 4
                                                },
                                                "id": "tumor_bam"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "log stderr to file",
                                                "inputBinding": {
                                                    "prefix": "--stderr"
                                                },
                                                "id": "stderr"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "log stdout to file",
                                                "inputBinding": {
                                                    "prefix": "--stdout"
                                                },
                                                "id": "stdout"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.output_file)\n    return inputs.output_file;\n  return null;\n}\n"
                                                },
                                                "id": "out_file"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "normal_bam",
                                            "id": "normal_bam"
                                        },
                                        {
                                            "source": "tumor_bam",
                                            "id": "tumor_bam"
                                        },
                                        {
                                            "source": "facets_snps",
                                            "id": "vcf"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.normal_bam.basename.replace(\".bam\", \"\") + \"__\" + inputs.tumor_bam.basename.replace(\".bam\", \"\") + \".dat.gz\"; }",
                                            "id": "output_file"
                                        },
                                        {
                                            "valueFrom": "${ return true; }",
                                            "id": "count_orphans"
                                        },
                                        {
                                            "valueFrom": "${ return true; }",
                                            "id": "gzip"
                                        },
                                        {
                                            "default": "50",
                                            "id": "pseudo_snps"
                                        }
                                    ],
                                    "out": [
                                        "out_file"
                                    ],
                                    "id": "snp_pileup"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "Workflow",
                                        "id": "vardict",
                                        "label": "vardict",
                                        "requirements": [
                                            {
                                                "class": "MultipleInputFeatureRequirement"
                                            },
                                            {
                                                "class": "ScatterFeatureRequirement"
                                            },
                                            {
                                                "class": "SubworkflowFeatureRequirement"
                                            },
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "class": "StepInputExpressionRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": [
                                                    "null",
                                                    "File"
                                                ],
                                                "id": "bedfile"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "File"
                                                ],
                                                "secondaryFiles": [
                                                    ".bai"
                                                ],
                                                "id": "b2"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "File"
                                                ],
                                                "secondaryFiles": [
                                                    ".bai"
                                                ],
                                                "id": "b"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "id": "C"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "id": "D"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "N"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "N2"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "x"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "z"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "th"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "M"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "I"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "id": "H"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "F"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "E"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "T"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "m"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "k"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "id": "i"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "id": "hh"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "g"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "f"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "e"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "d"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "c"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "a"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "O"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "P"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "Q"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "R"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "V"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "VS"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "X"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "Z"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "id": "B"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "S"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "n"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "o"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "id": "p"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "q"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "r"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "id": "t"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "vcf"
                                            },
                                            {
                                                "type": "File",
                                                "secondaryFiles": [
                                                    ".fai"
                                                ],
                                                "id": "G"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "id": "f_1"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputSource": "vardict_1/output",
                                                "id": "output"
                                            }
                                        ],
                                        "steps": [
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "baseCommand": [
                                                        "/usr/bin/vardict/bin/VarDict"
                                                    ],
                                                    "id": "vardict",
                                                    "arguments": [
                                                        {
                                                            "position": 1,
                                                            "prefix": "-b",
                                                            "valueFrom": "${\n    return inputs.b.path + \"|\" + inputs.b2.path;\n}"
                                                        },
                                                        {
                                                            "position": 0,
                                                            "prefix": "-N",
                                                            "valueFrom": "${\n    if (inputs.N2)\n        return [inputs.N, inputs.N2];\n    else\n        return inputs.N;\n}"
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "coresMin": 4,
                                                            "ramMin": 24000,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-vardict:1.5.1",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "inputs": [
                                                        {
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "doc": "The minimum",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-B"
                                                            },
                                                            "id": "B"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "Indicate the chromosome names are just numbers, such as 1, 2, not chr1, chr2",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-C"
                                                            },
                                                            "id": "C"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "Debug mode. Will print some error messages and append full genotype at the end.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-D"
                                                            },
                                                            "id": "D"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The column for region end, e.g. gene end",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-E"
                                                            },
                                                            "id": "E"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The hexical to filter reads using samtools. Default - 0x500 (filter 2nd alignments and duplicates). Use -F 0 to turn it off.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-F"
                                                            },
                                                            "id": "F"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "secondaryFiles": [
                                                                ".fai"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-G"
                                                            },
                                                            "id": "G"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "Print this help page",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-H"
                                                            },
                                                            "id": "H"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The indel size. Default - 120bp",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-I"
                                                            },
                                                            "id": "I"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The minimum matches for a read to be considered. If, after soft-clipping, the matched bp is less than INT, then the read is discarded. It's meant for PCR based targeted sequencing where there's no insert and the matching is only the primers. Default - 0, or no filtering",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-M"
                                                            },
                                                            "id": "M"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Tumor Sample Name",
                                                            "id": "N"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Normal Sample Name",
                                                            "id": "N2"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The reads should have at least mean MapQ to be considered a valid variant. Default - no filtering",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-O"
                                                            },
                                                            "id": "O"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The read position filter. If the mean variants position is less that specified, it's considered false positive. Default - 5",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-P"
                                                            },
                                                            "id": "P"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "If set, reads with mapping quality less than INT will be filtered and ignored",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-Q"
                                                            },
                                                            "id": "Q"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The region of interest. In the format of chr -start-end. If end is omitted, then a single position. No BED is needed.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-R"
                                                            },
                                                            "id": "R"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The column for region start, e.g. gene start",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-S"
                                                            },
                                                            "id": "S"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Trim bases after [INT] bases in the reads",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-T"
                                                            },
                                                            "id": "T"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The lowest frequency in normal sample allowed for a putative somatic mutations. Default to 0.05",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-V"
                                                            },
                                                            "id": "V"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "How strict to be when reading a SAM or BAM. STRICT - throw an exception if something looks wrong. LENIENT - Emit warnings but keep going if possible. SILENT - Like LENIENT, only don't emit warning messages. Default - LENIENT",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-VS"
                                                            },
                                                            "id": "VS"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Extension of bp to look for mismatches after insersion or deletion. Default to 3 bp, or only calls when they're within 3 bp.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-X"
                                                            },
                                                            "id": "X"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "For downsampling fraction. e.g. 0.7 means roughly 70%% downsampling. Default - No downsampling. Use with caution. The downsampling will be random and non-reproducible.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-Z"
                                                            },
                                                            "id": "Z"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Indicate it's amplicon based calling. Reads don't map to the amplicon will be skipped. A read pair is considered belonging the amplicon if the edges are less than int bp to the amplicon, and overlap fraction is at least float. Default - 10 -0.95",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-a"
                                                            },
                                                            "id": "a"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "secondaryFiles": [
                                                                ".bai"
                                                            ],
                                                            "doc": "Tumor bam",
                                                            "id": "b"
                                                        },
                                                        {
                                                            "type": "File",
                                                            "secondaryFiles": [
                                                                ".bai"
                                                            ],
                                                            "doc": "Normal bam",
                                                            "id": "b2"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 1
                                                            },
                                                            "id": "bedfile"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The column for chromosome",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-c"
                                                            },
                                                            "id": "c"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The delimiter for split region_info, default to tab \"\\t\"",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-d"
                                                            },
                                                            "id": "d"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The column for segment ends in the region, e.g. exon ends",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-e"
                                                            },
                                                            "id": "e"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The threshold for allele frequency, default - 0.05 or 5%%",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-f"
                                                            },
                                                            "id": "f"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The column for gene name, or segment annotation",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-g"
                                                            },
                                                            "id": "g"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "Print a header row decribing columns",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-hh"
                                                            },
                                                            "id": "h"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "Output splicing read counts",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-i"
                                                            },
                                                            "id": "i"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Indicate whether to perform local realignment. Default - 1. Set to 0 to disable it. For Ion or PacBio, 0 is recommended.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-k"
                                                            },
                                                            "id": "k"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "If set, reads with mismatches more than INT will be filtered and ignored. Gaps are not counted as mismatches. Valid only for bowtie2/TopHat or BWA aln followed by sampe. BWA mem is calculated as NM - Indels. Default - 8, or reads with more than 8 mismatches will not be used.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-m"
                                                            },
                                                            "id": "m"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The regular expression to extract sample name from bam filenames. Default to - /([^\\/\\._]+?)_[^\\/]*.bam/",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-n"
                                                            },
                                                            "id": "n"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The Qratio of (good_quality_reads)/(bad_quality_reads+0.5). The quality is defined by -q option. Default - 1.5",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-o"
                                                            },
                                                            "id": "o"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "Do pileup regarless the frequency",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-p"
                                                            },
                                                            "id": "p"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The phred score for a base to be considered a good call. Default - 25 (for Illumina) For PGM, set it to ~15, as PGM tends to under estimate base quality.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-q"
                                                            },
                                                            "id": "q"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The minimum",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-r"
                                                            },
                                                            "id": "r"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The column for segment starts in the region, e.g. exon starts",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-s"
                                                            },
                                                            "id": "s"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "Indicate to remove duplicated reads. Only one pair with same start positions will be kept",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-t"
                                                            },
                                                            "id": "t"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Threads count.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-th"
                                                            },
                                                            "id": "th"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "Indicate to move indels to 3-prime if alternative alignment can be achieved.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-3"
                                                            },
                                                            "id": "three"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The number of nucleotide to extend for each segment, default - 0 -y",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-x"
                                                            },
                                                            "id": "x"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Indicate wehther is zero-based cooridates, as IGV does. Default - 1 for BED file or amplicon BED file. Use 0 to turn it off. When use -R option, it's set to 0AUTHOR. Written by Zhongwu Lai, AstraZeneca, Boston, USAREPORTING BUGS. Report bugs to zhongwu@yahoo.comCOPYRIGHT. This is free software - you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-z"
                                                            },
                                                            "id": "z"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "vardict_app_output.vcf"
                                                            },
                                                            "id": "output"
                                                        }
                                                    ],
                                                    "stdout": "vardict_app_output.vcf"
                                                },
                                                "in": [
                                                    {
                                                        "source": "B",
                                                        "id": "B"
                                                    },
                                                    {
                                                        "source": "C",
                                                        "id": "C"
                                                    },
                                                    {
                                                        "source": "D",
                                                        "id": "D"
                                                    },
                                                    {
                                                        "source": "E",
                                                        "id": "E"
                                                    },
                                                    {
                                                        "source": "F",
                                                        "id": "F"
                                                    },
                                                    {
                                                        "source": "G",
                                                        "id": "G"
                                                    },
                                                    {
                                                        "source": "H",
                                                        "id": "H"
                                                    },
                                                    {
                                                        "source": "I",
                                                        "id": "I"
                                                    },
                                                    {
                                                        "source": "M",
                                                        "id": "M"
                                                    },
                                                    {
                                                        "source": "N",
                                                        "id": "N"
                                                    },
                                                    {
                                                        "source": "O",
                                                        "id": "O"
                                                    },
                                                    {
                                                        "source": "P",
                                                        "id": "P"
                                                    },
                                                    {
                                                        "source": "Q",
                                                        "id": "Q"
                                                    },
                                                    {
                                                        "source": "R",
                                                        "id": "R"
                                                    },
                                                    {
                                                        "source": "S",
                                                        "id": "S"
                                                    },
                                                    {
                                                        "source": "T",
                                                        "id": "T"
                                                    },
                                                    {
                                                        "source": "V",
                                                        "id": "V"
                                                    },
                                                    {
                                                        "source": "VS",
                                                        "id": "VS"
                                                    },
                                                    {
                                                        "source": "X",
                                                        "id": "X"
                                                    },
                                                    {
                                                        "source": "Z",
                                                        "id": "Z"
                                                    },
                                                    {
                                                        "source": "a",
                                                        "id": "a"
                                                    },
                                                    {
                                                        "source": "b",
                                                        "id": "b"
                                                    },
                                                    {
                                                        "source": "b2",
                                                        "id": "b2"
                                                    },
                                                    {
                                                        "source": "bedfile",
                                                        "id": "bedfile"
                                                    },
                                                    {
                                                        "source": "c",
                                                        "id": "c"
                                                    },
                                                    {
                                                        "source": "d",
                                                        "id": "d"
                                                    },
                                                    {
                                                        "source": "e",
                                                        "id": "e"
                                                    },
                                                    {
                                                        "source": "f",
                                                        "id": "f"
                                                    },
                                                    {
                                                        "source": "g",
                                                        "id": "g"
                                                    },
                                                    {
                                                        "source": "hh",
                                                        "id": "h"
                                                    },
                                                    {
                                                        "source": "i",
                                                        "id": "i"
                                                    },
                                                    {
                                                        "source": "k",
                                                        "id": "k"
                                                    },
                                                    {
                                                        "source": "m",
                                                        "id": "m"
                                                    },
                                                    {
                                                        "source": "n",
                                                        "id": "n"
                                                    },
                                                    {
                                                        "source": "o",
                                                        "id": "o"
                                                    },
                                                    {
                                                        "source": "p",
                                                        "id": "p"
                                                    },
                                                    {
                                                        "source": "q",
                                                        "id": "q"
                                                    },
                                                    {
                                                        "source": "r",
                                                        "id": "r"
                                                    },
                                                    {
                                                        "source": "t",
                                                        "id": "t"
                                                    },
                                                    {
                                                        "source": "th",
                                                        "id": "th"
                                                    },
                                                    {
                                                        "source": "vcf",
                                                        "id": "vcf"
                                                    },
                                                    {
                                                        "valueFrom": "${ return inputs.vcf.replace(\".vcf\", \"_tmp.vcf\") }",
                                                        "id": "v"
                                                    },
                                                    {
                                                        "source": "x",
                                                        "id": "x"
                                                    },
                                                    {
                                                        "source": "z",
                                                        "id": "z"
                                                    }
                                                ],
                                                "out": [
                                                    "output"
                                                ],
                                                "id": "vardict"
                                            },
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "baseCommand": [
                                                        "Rscript",
                                                        "/usr/bin/vardict/testsomatic.R"
                                                    ],
                                                    "id": "testsomatic",
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "coresMin": 2,
                                                            "ramMin": 12000,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-vardict:1.5.1",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "inputs": [
                                                        {
                                                            "type": "File",
                                                            "id": "input_vardict"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "outputBinding": {
                                                                "glob": "output_testsomatic.var"
                                                            },
                                                            "id": "output_var"
                                                        }
                                                    ],
                                                    "stdin": "$(inputs.input_vardict.path)",
                                                    "stdout": "output_testsomatic.var"
                                                },
                                                "in": [
                                                    {
                                                        "source": "vardict/output",
                                                        "id": "input_vardict"
                                                    }
                                                ],
                                                "out": [
                                                    "output_var"
                                                ],
                                                "id": "testsomatic"
                                            },
                                            {
                                                "run": {
                                                    "cwlVersion": "v1.0",
                                                    "class": "CommandLineTool",
                                                    "baseCommand": [
                                                        "perl",
                                                        "/usr/bin/vardict/var2vcf_paired.pl"
                                                    ],
                                                    "id": "vardict_var2vcf",
                                                    "arguments": [
                                                        {
                                                            "position": 0,
                                                            "prefix": "-N",
                                                            "valueFrom": "${\n    return inputs.N + \"|\" + inputs.N2;\n}"
                                                        }
                                                    ],
                                                    "requirements": [
                                                        {
                                                            "class": "InlineJavascriptRequirement"
                                                        },
                                                        {
                                                            "coresMin": 4,
                                                            "ramMin": 32000,
                                                            "class": "ResourceRequirement"
                                                        },
                                                        {
                                                            "dockerPull": "mskcc/roslin-variant-vardict:1.5.1",
                                                            "class": "DockerRequirement"
                                                        }
                                                    ],
                                                    "inputs": [
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "Indicate the chromosome names are just numbers, such as 1, 2, not chr1, chr2",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-C"
                                                            },
                                                            "id": "C"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "float"
                                                            ],
                                                            "doc": "Debug mode. Will print some error messages and append full genotype at the end.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-D"
                                                            },
                                                            "id": "D"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "float"
                                                            ],
                                                            "doc": "The hexical to filter reads using samtools. Default - 0x500 (filter 2nd alignments and duplicates). Use -F 0 to turn it off.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-F"
                                                            },
                                                            "id": "F"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "doc": "The indel size. Default - 120bp",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-I"
                                                            },
                                                            "id": "I"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "The minimum matches for a read to be considered. If, after soft-clipping, the matched bp is less than INT, then the read is discarded. It's meant for PCR based targeted sequencing where there's no insert and the matching is only the primers. Default - 0, or no filtering",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-M"
                                                            },
                                                            "id": "M"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Tumor Sample Name",
                                                            "id": "N"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "Normal Sample Name",
                                                            "id": "N2"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "float"
                                                            ],
                                                            "doc": "The read position filter. If the mean variants position is less that specified, it's considered false positive. Default - 5",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-P"
                                                            },
                                                            "id": "P"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "If set, reads with mapping quality less than INT will be filtered and ignored",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-Q"
                                                            },
                                                            "id": "Q"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "doc": "The column for region start, e.g. gene start",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-S"
                                                            },
                                                            "id": "S"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "string"
                                                            ],
                                                            "doc": "The threshold for allele frequency, default - 0.05 or 5%%",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-f"
                                                            },
                                                            "id": "f"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "doc": "If set, reads with mismatches more than INT will be filtered and ignored. Gaps are not counted as mismatches. Valid only for bowtie2/TopHat or BWA aln followed by sampe. BWA mem is calculated as NM - Indels. Default - 8, or reads with more than 8 mismatches will not be used.",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-m"
                                                            },
                                                            "id": "m"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "float"
                                                            ],
                                                            "doc": "The Qratio of (good_quality_reads)/(bad_quality_reads+0.5). The quality is defined by -q option. Default - 1.5",
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-o"
                                                            },
                                                            "id": "o"
                                                        },
                                                        {
                                                            "doc": "Do pileup regarless the frequency",
                                                            "type": [
                                                                "null",
                                                                "float"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-p"
                                                            },
                                                            "id": "p"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "doc": "output vcf file",
                                                            "id": "vcf"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "boolean"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-A"
                                                            },
                                                            "id": "A"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-c"
                                                            },
                                                            "id": "c"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "float"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-q"
                                                            },
                                                            "id": "q"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-d"
                                                            },
                                                            "id": "d"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "int"
                                                            ],
                                                            "inputBinding": {
                                                                "position": 0,
                                                                "prefix": "-v"
                                                            },
                                                            "id": "v"
                                                        },
                                                        {
                                                            "type": [
                                                                "null",
                                                                "File"
                                                            ],
                                                            "id": "input_vcf"
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "File",
                                                            "outputBinding": {
                                                                "glob": "${ return inputs.vcf; }"
                                                            },
                                                            "id": "output"
                                                        }
                                                    ],
                                                    "stdin": "$(inputs.input_vcf.path)",
                                                    "stdout": "${ return inputs.vcf; }"
                                                },
                                                "in": [
                                                    {
                                                        "source": "N",
                                                        "id": "N"
                                                    },
                                                    {
                                                        "source": "N2",
                                                        "id": "N2"
                                                    },
                                                    {
                                                        "source": "f_1",
                                                        "id": "f"
                                                    },
                                                    {
                                                        "source": "vcf",
                                                        "id": "vcf"
                                                    },
                                                    {
                                                        "source": "testsomatic/output_var",
                                                        "id": "input_vcf"
                                                    }
                                                ],
                                                "out": [
                                                    "output"
                                                ],
                                                "id": "vardict_1"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "ref_fasta",
                                            "id": "G"
                                        },
                                        {
                                            "source": "tumor_bam",
                                            "id": "b"
                                        },
                                        {
                                            "source": "normal_bam",
                                            "id": "b2"
                                        },
                                        {
                                            "source": "tumor_sample_name",
                                            "id": "N"
                                        },
                                        {
                                            "source": "normal_sample_name",
                                            "id": "N2"
                                        },
                                        {
                                            "source": "bed",
                                            "id": "bedfile"
                                        },
                                        {
                                            "default": true,
                                            "id": "C"
                                        },
                                        {
                                            "default": false,
                                            "id": "D"
                                        },
                                        {
                                            "default": "2000",
                                            "id": "x"
                                        },
                                        {
                                            "default": false,
                                            "id": "H"
                                        },
                                        {
                                            "default": "4",
                                            "id": "th"
                                        },
                                        {
                                            "default": "3",
                                            "id": "E"
                                        },
                                        {
                                            "default": false,
                                            "id": "i"
                                        },
                                        {
                                            "default": false,
                                            "id": "hh"
                                        },
                                        {
                                            "default": "0.01",
                                            "id": "f"
                                        },
                                        {
                                            "default": "1",
                                            "id": "c"
                                        },
                                        {
                                            "default": "20",
                                            "id": "Q"
                                        },
                                        {
                                            "default": "5",
                                            "id": "X"
                                        },
                                        {
                                            "default": "1",
                                            "id": "z"
                                        },
                                        {
                                            "default": "2",
                                            "id": "S"
                                        },
                                        {
                                            "default": false,
                                            "id": "p"
                                        },
                                        {
                                            "default": "20",
                                            "id": "q"
                                        },
                                        {
                                            "default": false,
                                            "id": "t"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.b.basename.replace(\".bam\", \".\") + inputs.b2.basename.replace(\".bam\", \".vardict.vcf\") }",
                                            "id": "vcf"
                                        }
                                    ],
                                    "out": [
                                        "output"
                                    ],
                                    "id": "vardict"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "id": "mutect",
                                        "baseCommand": [
                                            "java"
                                        ],
                                        "arguments": [
                                            {
                                                "valueFrom": "/usr/bin/mutect.jar",
                                                "prefix": "-jar",
                                                "position": 1,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Xms$(Math.round(parseInt(runtime.ram)/1910))G",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Xmx$(Math.floor(parseInt(runtime.ram)/1048) - 1)G",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-XX:-UseGCOverheadLimit",
                                                "position": 0,
                                                "shellQuote": false
                                            },
                                            {
                                                "valueFrom": "-Djava.io.tmpdir=$(runtime.tmpdir)",
                                                "position": 0,
                                                "shellQuote": false
                                            }
                                        ],
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 24000,
                                                "coresMin": 1,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-mutect:1.1.4",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "None\n",
                                        "inputs": [
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "default": "MuTect",
                                                "inputBinding": {
                                                    "prefix": "-T",
                                                    "position": 2
                                                },
                                                "id": "analysis_type"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Reads arguments from the specified file",
                                                "inputBinding": {
                                                    "prefix": "--arg_file",
                                                    "position": 2
                                                },
                                                "id": "arg_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "File"
                                                ],
                                                "doc": "SAM or BAM file(s)",
                                                "inputBinding": {
                                                    "prefix": "--input_file:normal",
                                                    "position": 2
                                                },
                                                "secondaryFiles": [
                                                    ".bai"
                                                ],
                                                "id": "input_file_normal"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "File"
                                                ],
                                                "doc": "SAM or BAM file(s)",
                                                "inputBinding": {
                                                    "prefix": "--input_file:tumor",
                                                    "position": 2
                                                },
                                                "secondaryFiles": [
                                                    ".bai"
                                                ],
                                                "id": "input_file_tumor"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Number of reads per SAM file to buffer in memory",
                                                "inputBinding": {
                                                    "prefix": "--read_buffer_size",
                                                    "position": 2
                                                },
                                                "id": "read_buffer_size"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "What kind of GATK run report should we generate? STANDARD is the default, can be NO_ET so nothing is posted to the run repository. Please see -phone-home-and-how-does-it-affect-me#latest for details. (NO_ET|STANDARD|STDOUT)",
                                                "inputBinding": {
                                                    "prefix": "--phone_home",
                                                    "position": 2
                                                },
                                                "id": "phone_home"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "GATK Key file. Required if running with -et NO_ET. Please see -phone-home-and-how-does-it-affect-me#latest for details.",
                                                "inputBinding": {
                                                    "prefix": "--gatk_key",
                                                    "position": 2
                                                },
                                                "id": "gatk_key"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Arbitrary tag string to identify this GATK run as part of a group of runs, for later analysis",
                                                "inputBinding": {
                                                    "prefix": "--tag",
                                                    "position": 2
                                                },
                                                "id": "tag"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Specify filtration criteria to apply to each read individually",
                                                "inputBinding": {
                                                    "prefix": "--read_filter",
                                                    "position": 2
                                                },
                                                "id": "read_filter"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string",
                                                    "File"
                                                ],
                                                "doc": "One or more genomic intervals over which to operate. Can be explicitly specified on the command line or in a file (including a rod file)",
                                                "inputBinding": {
                                                    "prefix": "--intervals",
                                                    "position": 2
                                                },
                                                "id": "intervals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "One or more genomic intervals to exclude from processing. Can be explicitly specified on the command line or in a file (including a rod file)",
                                                "inputBinding": {
                                                    "prefix": "--excludeIntervals",
                                                    "position": 2
                                                },
                                                "id": "excludeIntervals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Indicates the set merging approach the interval parser should use to combine the various -L or -XL inputs (UNION| INTERSECTION)",
                                                "inputBinding": {
                                                    "prefix": "--interval_set_rule",
                                                    "position": 2
                                                },
                                                "id": "interval_set_rule"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Indicates the interval merging rule we should use for abutting intervals (ALL| OVERLAPPING_ONLY)",
                                                "inputBinding": {
                                                    "prefix": "--interval_merging",
                                                    "position": 2
                                                },
                                                "id": "interval_merging"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Indicates how many basepairs of padding to include around each of the intervals specified with the -L/",
                                                "inputBinding": {
                                                    "prefix": "--interval_padding",
                                                    "position": 2
                                                },
                                                "id": "interval_padding"
                                            },
                                            {
                                                "type": "File",
                                                "secondaryFiles": [
                                                    ".amb",
                                                    ".ann",
                                                    ".bwt",
                                                    ".pac",
                                                    ".sa",
                                                    ".fai",
                                                    "^.dict"
                                                ],
                                                "inputBinding": {
                                                    "prefix": "--reference_sequence",
                                                    "position": 2
                                                },
                                                "id": "reference_sequence"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Makes the GATK behave non deterministically, that is, the random numbers generated will be different in every run",
                                                "inputBinding": {
                                                    "prefix": "--nonDeterministicRandomSeed",
                                                    "position": 2
                                                },
                                                "id": "nonDeterministicRandomSeed"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Completely eliminates randomization from nondeterministic methods. To be used mostly in the testing framework where dynamic parallelism can result in differing numbers of calls to the generator.",
                                                "inputBinding": {
                                                    "prefix": "--disableRandomization",
                                                    "position": 2
                                                },
                                                "id": "disableRandomization"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "If provided, that GATK will stop execution cleanly as soon after maxRuntime has been exceeded, truncating the run but not exiting with a failure. By default the value is interpreted in minutes, but this can be changed by maxRuntimeUnits",
                                                "inputBinding": {
                                                    "prefix": "--maxRuntime",
                                                    "position": 2
                                                },
                                                "id": "maxRuntime"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "The TimeUnit for maxRuntime (NANOSECONDS| MICROSECONDS|MILLISECONDS|SECONDS|MINUTES| HOURS|DAYS)",
                                                "inputBinding": {
                                                    "prefix": "--maxRuntimeUnits",
                                                    "position": 2
                                                },
                                                "id": "maxRuntimeUnits"
                                            },
                                            {
                                                "type": "boolean",
                                                "default": true,
                                                "inputBinding": {
                                                    "prefix": "--enable_extended_output",
                                                    "position": 2
                                                },
                                                "id": "enable_extended_output"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "default": "NONE",
                                                "doc": "Type of reads downsampling to employ at a given locus. Reads will be selected randomly to be removed from the pile based on the method described here (NONE|ALL_READS| BY_SAMPLE) given locus; note that downsampled reads are randomly selected from all possible reads at a locus",
                                                "inputBinding": {
                                                    "prefix": "--downsampling_type",
                                                    "position": 2
                                                },
                                                "id": "downsampling_type"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Type of BAQ calculation to apply in the engine (OFF|CALCULATE_AS_NECESSARY| RECALCULATE)",
                                                "inputBinding": {
                                                    "prefix": "--baq",
                                                    "position": 2
                                                },
                                                "id": "baq"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "BAQ gap open penalty (Phred Scaled). Default value is 40. 30 is perhaps better for whole genome call sets",
                                                "inputBinding": {
                                                    "prefix": "--baqGapOpenPenalty",
                                                    "position": 2
                                                },
                                                "id": "baqGapOpenPenalty"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "If provided, a GATK runtime performance log will be written to this file",
                                                "inputBinding": {
                                                    "prefix": "--performanceLog",
                                                    "position": 2
                                                },
                                                "id": "performanceLog"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "If set, use the original base quality scores from the OQ tag when present instead of the standard scores",
                                                "inputBinding": {
                                                    "prefix": "--useOriginalQualities",
                                                    "position": 2
                                                },
                                                "id": "useOriginalQualities"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "The input covariates table file which enables on-the-fly base quality score recalibration",
                                                "inputBinding": {
                                                    "prefix": "--BQSR",
                                                    "position": 2
                                                },
                                                "id": "BQSR"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "If true, disables printing of base insertion and base deletion tags (with -BQSR)",
                                                "inputBinding": {
                                                    "prefix": "--disable_indel_quals",
                                                    "position": 2
                                                },
                                                "id": "disable_indel_quals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "If true, enables printing of the OQ tag with the original base qualities (with -BQSR)",
                                                "inputBinding": {
                                                    "prefix": "--emit_original_quals",
                                                    "position": 2
                                                },
                                                "id": "emit_original_quals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Bases with quality scores less than this threshold won't be recalibrated (with -BQSR)",
                                                "inputBinding": {
                                                    "prefix": "--preserve_qscores_less_than",
                                                    "position": 2
                                                },
                                                "id": "preserve_qscores_less_than"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "If reads are missing some or all base quality scores, this value will be used for all base quality scores",
                                                "inputBinding": {
                                                    "prefix": "--defaultBaseQualities",
                                                    "position": 2
                                                },
                                                "id": "defaultBaseQualities"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "How strict should we be with validation (STRICT|LENIENT|SILENT)",
                                                "inputBinding": {
                                                    "prefix": "--validation_strictness",
                                                    "position": 2
                                                },
                                                "id": "validation_strictness"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Should we override the Walker's default and remove program records from the SAM header",
                                                "inputBinding": {
                                                    "prefix": "--remove_program_records",
                                                    "position": 2
                                                },
                                                "id": "remove_program_records"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Should we override the Walker's default and keep program records from the SAM header",
                                                "inputBinding": {
                                                    "prefix": "--keep_program_records",
                                                    "position": 2
                                                },
                                                "id": "keep_program_records"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "If set, enables unsafe operations - nothing will be checked at runtime. For expert users only who know what they are doing. We do not support usage of this argument. (ALLOW_UNINDEXED_BAM| ALLOW_UNSET_BAM_SORT_ORDER| NO_READ_ORDER_VERIFICATION| ALLOW_SEQ_DICT_INCOMPATIBILITY| LENIENT_VCF_PROCESSING|ALL)",
                                                "inputBinding": {
                                                    "prefix": "--unsafe",
                                                    "position": 2
                                                },
                                                "id": "unsafe"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "How many data threads should be allocated to running this analysis.",
                                                "inputBinding": {
                                                    "prefix": "--num_threads",
                                                    "position": 2
                                                },
                                                "id": "num_threads"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "How many CPU threads should be allocated per data thread to running this analysis?",
                                                "inputBinding": {
                                                    "prefix": "--num_cpu_threads_per_data_thread",
                                                    "position": 2
                                                },
                                                "id": "num_cpu_threads_per_data_thread"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Enable GATK threading efficiency monitoring",
                                                "inputBinding": {
                                                    "prefix": "--monitorThreadEfficiency",
                                                    "position": 2
                                                },
                                                "id": "monitorThreadEfficiency"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "The total number of BAM file handles to keep open simultaneously",
                                                "inputBinding": {
                                                    "prefix": "--num_bam_file_handles",
                                                    "position": 2
                                                },
                                                "id": "num_bam_file_handles"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Filters out read groups matching <TAG> -<STRING> or a .txt file containing the filter strings one per line.",
                                                "inputBinding": {
                                                    "prefix": "--read_group_black_list",
                                                    "position": 2
                                                },
                                                "id": "read_group_black_list"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Pedigree files for samples",
                                                "inputBinding": {
                                                    "prefix": "--pedigree",
                                                    "position": 2
                                                },
                                                "id": "pedigree"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Pedigree string for samples",
                                                "inputBinding": {
                                                    "prefix": "--pedigreeString",
                                                    "position": 2
                                                },
                                                "id": "pedigreeString"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "How strict should we be in validating the pedigree information? (STRICT|SILENT)",
                                                "inputBinding": {
                                                    "prefix": "--pedigreeValidationType",
                                                    "position": 2
                                                },
                                                "id": "pedigreeValidationType"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Set the minimum level of logging, i.e. setting INFO get's you INFO up to FATAL, setting ERROR gets you ERROR and FATAL level logging.",
                                                "inputBinding": {
                                                    "prefix": "--logging_level",
                                                    "position": 2
                                                },
                                                "id": "logging_level"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Set the logging location",
                                                "inputBinding": {
                                                    "prefix": "--log_to_file",
                                                    "position": 2
                                                },
                                                "id": "log_to_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "used for debugging, basically exit as soon as we get the reads",
                                                "inputBinding": {
                                                    "prefix": "--noop",
                                                    "position": 2
                                                },
                                                "id": "noop"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "name to use for tumor in output files",
                                                "inputBinding": {
                                                    "prefix": "--tumor_sample_name",
                                                    "position": 2
                                                },
                                                "id": "tumor_sample_name"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "if the tumor bam contains multiple samples, only use read groups with SM equal to this value",
                                                "inputBinding": {
                                                    "prefix": "--bam_tumor_sample_name",
                                                    "position": 2
                                                },
                                                "id": "bam_tumor_sample_name"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "name to use for normal in output files",
                                                "inputBinding": {
                                                    "prefix": "--normal_sample_name",
                                                    "position": 2
                                                },
                                                "id": "normal_sample_name"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "force output for each site",
                                                "inputBinding": {
                                                    "prefix": "--force_output",
                                                    "position": 2
                                                },
                                                "id": "force_output"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "force output for all alleles at each site",
                                                "inputBinding": {
                                                    "prefix": "--force_alleles",
                                                    "position": 2
                                                },
                                                "id": "force_alleles"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "only emit passing calls",
                                                "inputBinding": {
                                                    "prefix": "--only_passing_calls",
                                                    "position": 2
                                                },
                                                "id": "only_passing_calls"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Initial LOD threshold for calling tumor variant",
                                                "inputBinding": {
                                                    "prefix": "--initial_tumor_lod",
                                                    "position": 2
                                                },
                                                "id": "initial_tumor_lod"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "LOD threshold for calling tumor variant",
                                                "inputBinding": {
                                                    "prefix": "--tumor_lod",
                                                    "position": 2
                                                },
                                                "id": "tumor_lod"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "estimate of fraction (0-1) of physical contamination with other unrelated samples",
                                                "inputBinding": {
                                                    "prefix": "--fraction_contamination",
                                                    "position": 2
                                                },
                                                "id": "fraction_contamination"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "minimum fraction of cells which are presumed to have a mutation, used to handle non-clonality and contamination",
                                                "inputBinding": {
                                                    "prefix": "--minimum_mutation_cell_fraction",
                                                    "position": 2
                                                },
                                                "id": "minimum_mutation_cell_fraction"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "LOD threshold for calling normal non-germline",
                                                "inputBinding": {
                                                    "prefix": "--normal_lod",
                                                    "position": 2
                                                },
                                                "id": "normal_lod"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "LOD threshold for calling normal non-variant at dbsnp sites",
                                                "inputBinding": {
                                                    "prefix": "--dbsnp_normal_lod",
                                                    "position": 2
                                                },
                                                "id": "dbsnp_normal_lod"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "Power threshold for normal to <somatic_classification_normal_power_threshold> determine germline vs variant",
                                                "inputBinding": {
                                                    "prefix": "--somatic_classification_normal_power_threshold",
                                                    "position": 2
                                                },
                                                "id": "somatic_classification_normal_power_threshold"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "minimum allele fraction to be considered in normal, useful for normal sample contaminated with tumor",
                                                "inputBinding": {
                                                    "prefix": "--minimum_normal_allele_fraction",
                                                    "position": 2
                                                },
                                                "id": "minimum_normal_allele_fraction"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "for computational efficiency, reject sites with allelic fraction below this threshold",
                                                "inputBinding": {
                                                    "prefix": "--tumor_f_pretest",
                                                    "position": 2
                                                },
                                                "id": "tumor_f_pretest"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "threshold for minimum base quality score",
                                                "inputBinding": {
                                                    "prefix": "--min_qscore",
                                                    "position": 2
                                                },
                                                "id": "min_qscore"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "how many gapped events (ins/del) are allowed in proximity to this candidate",
                                                "inputBinding": {
                                                    "prefix": "--gap_events_threshold",
                                                    "position": 2
                                                },
                                                "id": "gap_events_threshold"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "if this fraction or more of the bases in a read are soft/hard clipped, do not use this read for mutation calling",
                                                "inputBinding": {
                                                    "prefix": "--heavily_clipped_read_fraction",
                                                    "position": 2
                                                },
                                                "id": "heavily_clipped_read_fraction"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "pvalue threshold for fishers exact test of clipping bias in mutant reads vs ref reads",
                                                "inputBinding": {
                                                    "prefix": "--clipping_bias_pvalue_threshold",
                                                    "position": 2
                                                },
                                                "id": "clipping_bias_pvalue_threshold"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "threshold for determining if there is relatedness between the alt and ref allele read piles",
                                                "inputBinding": {
                                                    "prefix": "--fraction_mapq0_threshold",
                                                    "position": 2
                                                },
                                                "id": "fraction_mapq0_threshold"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "threshold for clustered read position artifact median",
                                                "inputBinding": {
                                                    "prefix": "--pir_median_threshold",
                                                    "position": 2
                                                },
                                                "id": "pir_median_threshold"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "threshold for clustered read position artifact MAD",
                                                "inputBinding": {
                                                    "prefix": "--pir_mad_threshold",
                                                    "position": 2
                                                },
                                                "id": "pir_mad_threshold"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "required minimum value for <required_maximum_alt_allele_mapping_quality_score> tumor alt allele maximum mapping quality score",
                                                "inputBinding": {
                                                    "prefix": "--required_maximum_alt_allele_mapping_quality_score",
                                                    "position": 2
                                                },
                                                "id": "required_maximum_alt_allele_mapping_quality_score"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "threshold for maximum alternate allele counts in normal",
                                                "inputBinding": {
                                                    "prefix": "--max_alt_alleles_in_normal_count",
                                                    "position": 2
                                                },
                                                "id": "max_alt_alleles_in_normal_count"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "threshold for maximum alternate allele quality score sum in normal",
                                                "inputBinding": {
                                                    "prefix": "--max_alt_alleles_in_normal_qscore_sum",
                                                    "position": 2
                                                },
                                                "id": "max_alt_alleles_in_normal_qscore_sum"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "threshold for maximum alternate allele fraction in normal",
                                                "inputBinding": {
                                                    "prefix": "--max_alt_allele_in_normal_fraction",
                                                    "position": 2
                                                },
                                                "id": "max_alt_allele_in_normal_fraction"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Phred scale quality score constant to use in power calculations",
                                                "inputBinding": {
                                                    "prefix": "--power_constant_qscore",
                                                    "position": 2
                                                },
                                                "id": "power_constant_qscore"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Absolute Copy Number Data, as defined by Absolute, to use in power calculations",
                                                "inputBinding": {
                                                    "prefix": "--absolute_copy_number_data",
                                                    "position": 2
                                                },
                                                "id": "absolute_copy_number_data"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "Allelic fraction constant to use in power calculations",
                                                "inputBinding": {
                                                    "prefix": "--power_constant_af",
                                                    "position": 2
                                                },
                                                "id": "power_constant_af"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string",
                                                    "File"
                                                ],
                                                "doc": "Call-stats output",
                                                "inputBinding": {
                                                    "prefix": "--out",
                                                    "position": 2
                                                },
                                                "id": "out"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "VCF output of mutation candidates",
                                                "inputBinding": {
                                                    "prefix": "--vcf",
                                                    "position": 2
                                                },
                                                "id": "vcf"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "File"
                                                ],
                                                "doc": "VCF file of DBSNP information",
                                                "inputBinding": {
                                                    "prefix": "--dbsnp",
                                                    "position": 2
                                                },
                                                "secondaryFiles": [
                                                    "^.vcf.idx"
                                                ],
                                                "id": "dbsnp"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "File"
                                                ],
                                                "doc": "VCF file of COSMIC sites",
                                                "inputBinding": {
                                                    "prefix": "--cosmic",
                                                    "position": 2
                                                },
                                                "secondaryFiles": [
                                                    "^.vcf.idx"
                                                ],
                                                "id": "cosmic"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "write out coverage in WIGGLE format to this file",
                                                "inputBinding": {
                                                    "prefix": "--coverage_file",
                                                    "position": 2
                                                },
                                                "id": "coverage_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "write out 20x of Q20 coverage in WIGGLE format to this file",
                                                "inputBinding": {
                                                    "prefix": "--coverage_20_q20_file",
                                                    "position": 2
                                                },
                                                "id": "coverage_20_q20_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "write out power in WIGGLE format to this file",
                                                "inputBinding": {
                                                    "prefix": "--power_file",
                                                    "position": 2
                                                },
                                                "id": "power_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "write out tumor read depth in WIGGLE format to this file",
                                                "inputBinding": {
                                                    "prefix": "--tumor_depth_file",
                                                    "position": 2
                                                },
                                                "id": "tumor_depth_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    {
                                                        "type": "array",
                                                        "items": "string"
                                                    }
                                                ],
                                                "doc": "write out normal read depth in WIGGLE format to this file",
                                                "inputBinding": {
                                                    "prefix": "--normal_depth_file",
                                                    "position": 2
                                                },
                                                "id": "normal_depth_file"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "if a read has mismatching number of bases and base qualities, filter out the read instead of blowing up.",
                                                "inputBinding": {
                                                    "prefix": "--filter_mismatching_base_and_quals",
                                                    "position": 2
                                                },
                                                "id": "filter_mismatching_base_and_quals"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "doc": "Target coverage threshold for downsampling to coverage",
                                                "inputBinding": {
                                                    "prefix": "--downsample_to_coverage",
                                                    "position": 2
                                                },
                                                "id": "downsample_to_coverage"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.vcf)\n    return inputs.vcf;\n  return null;\n}\n"
                                                },
                                                "id": "output"
                                            },
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.out)\n    return inputs.out;\n  return null;\n}\n"
                                                },
                                                "id": "callstats_output"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "ref_fasta",
                                            "id": "reference_sequence"
                                        },
                                        {
                                            "source": "dbsnp",
                                            "id": "dbsnp"
                                        },
                                        {
                                            "source": "cosmic",
                                            "id": "cosmic"
                                        },
                                        {
                                            "source": "normal_bam",
                                            "id": "input_file_normal"
                                        },
                                        {
                                            "source": "tumor_bam",
                                            "id": "input_file_tumor"
                                        },
                                        {
                                            "source": "mutect_rf",
                                            "id": "read_filter"
                                        },
                                        {
                                            "source": "mutect_dcov",
                                            "id": "downsample_to_coverage"
                                        },
                                        {
                                            "source": "bed",
                                            "id": "intervals"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.input_file_tumor.basename.replace(\".bam\",\".\") + inputs.input_file_normal.basename.replace(\".bam\", \".mutect.vcf\") }",
                                            "id": "vcf"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.input_file_tumor.basename.replace(\".bam\",\".\") + inputs.input_file_normal.basename.replace(\".bam\", \".mutect.txt\") }",
                                            "id": "out"
                                        }
                                    ],
                                    "out": [
                                        "output",
                                        "callstats_output"
                                    ],
                                    "id": "mutect"
                                }
                            ],
                            "requirements": [
                                {
                                    "class": "SubworkflowFeatureRequirement"
                                }
                            ]
                        },
                        "id": "call_variants"
                    },
                    {
                        "in": [
                            {
                                "source": "complex_nn",
                                "id": "complex_nn"
                            },
                            {
                                "source": "complex_tn",
                                "id": "complex_tn"
                            },
                            {
                                "source": "normal_bam",
                                "id": "normal_bam"
                            },
                            {
                                "source": "tumor_bam",
                                "id": "tumor_bam"
                            },
                            {
                                "source": "call_variants/mutect_vcf",
                                "id": "mutect_vcf"
                            },
                            {
                                "source": "call_variants/mutect_callstats",
                                "id": "mutect_callstats"
                            },
                            {
                                "source": "call_variants/vardict_vcf",
                                "id": "vardict_vcf"
                            },
                            {
                                "source": "tumor_sample_name",
                                "id": "tumor_sample_name"
                            },
                            {
                                "source": "hotspot_vcf",
                                "id": "hotspot_vcf"
                            },
                            {
                                "source": "ref_fasta",
                                "id": "ref_fasta"
                            }
                        ],
                        "out": [
                            "vardict_vcf_filtering_output",
                            "mutect_vcf_filtering_output"
                        ],
                        "run": {
                            "class": "Workflow",
                            "id": "filtering",
                            "inputs": [
                                {
                                    "type": "float",
                                    "id": "complex_nn"
                                },
                                {
                                    "type": "float",
                                    "id": "complex_tn"
                                },
                                {
                                    "type": "File",
                                    "id": "normal_bam"
                                },
                                {
                                    "type": "File",
                                    "id": "tumor_bam"
                                },
                                {
                                    "type": "File",
                                    "id": "mutect_vcf"
                                },
                                {
                                    "type": "File",
                                    "id": "mutect_callstats"
                                },
                                {
                                    "type": "File",
                                    "id": "vardict_vcf"
                                },
                                {
                                    "type": "string",
                                    "id": "hotspot_vcf"
                                },
                                {
                                    "type": "string",
                                    "id": "tumor_sample_name"
                                },
                                {
                                    "type": "File",
                                    "id": "ref_fasta"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputSource": "mutect_filtering_step/vcf",
                                    "secondaryFiles": [
                                        ".tbi"
                                    ],
                                    "id": "mutect_vcf_filtering_output"
                                },
                                {
                                    "type": "File",
                                    "outputSource": "vardict_filtering_step/vcf",
                                    "secondaryFiles": [
                                        ".tbi"
                                    ],
                                    "id": "vardict_vcf_filtering_output"
                                }
                            ],
                            "steps": [
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "baseCommand": [
                                            "python",
                                            "/usr/bin/basicfiltering/filter_mutect.py"
                                        ],
                                        "id": "basic-filtering-mutect",
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 16000,
                                                "coresMin": 2,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-basic-filtering:0.3",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "Filter snps from the output of muTect v1.14\n",
                                        "inputs": [
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "More verbose logging to help with debugging",
                                                "inputBinding": {
                                                    "prefix": "--verbose"
                                                },
                                                "id": "verbose"
                                            },
                                            {
                                                "type": [
                                                    "string",
                                                    "File"
                                                ],
                                                "doc": "Input vcf muTect file which needs to be filtered",
                                                "inputBinding": {
                                                    "prefix": "--inputVcf"
                                                },
                                                "id": "inputVcf"
                                            },
                                            {
                                                "type": [
                                                    "string",
                                                    "File"
                                                ],
                                                "doc": "Input txt muTect file which needs to be filtered",
                                                "inputBinding": {
                                                    "prefix": "--inputTxt"
                                                },
                                                "id": "inputTxt"
                                            },
                                            {
                                                "type": "string",
                                                "doc": "Name of the tumor Sample",
                                                "inputBinding": {
                                                    "prefix": "--tsampleName"
                                                },
                                                "id": "tsampleName"
                                            },
                                            {
                                                "type": [
                                                    "string",
                                                    "File"
                                                ],
                                                "doc": "Reference genome in fasta format",
                                                "inputBinding": {
                                                    "prefix": "--refFasta"
                                                },
                                                "id": "refFasta"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 5,
                                                "doc": "Tumor total depth threshold",
                                                "inputBinding": {
                                                    "prefix": "--totaldepth"
                                                },
                                                "id": "dp"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 3,
                                                "doc": "Tumor allele depth threshold",
                                                "inputBinding": {
                                                    "prefix": "--alleledepth"
                                                },
                                                "id": "ad"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 5,
                                                "doc": "Tumor-Normal variant frequency ratio threshold",
                                                "inputBinding": {
                                                    "prefix": "--tnRatio"
                                                },
                                                "id": "tnr"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "float"
                                                ],
                                                "default": 0.01,
                                                "doc": "Tumor variant frequency threshold",
                                                "inputBinding": {
                                                    "prefix": "--variantfraction"
                                                },
                                                "id": "vf"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string",
                                                    "File"
                                                ],
                                                "doc": "Input vcf file with hotspots that skip VAF ratio filter",
                                                "inputBinding": {
                                                    "prefix": "--hotspotVcf"
                                                },
                                                "id": "hotspotVcf"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Full Path to the output dir.",
                                                "inputBinding": {
                                                    "prefix": "--outDir"
                                                },
                                                "id": "outdir"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.inputVcf)\n    return inputs.inputVcf.basename.replace(\".vcf\",\"_STDfilter.norm.vcf.gz\");\n  return null;\n}\n"
                                                },
                                                "secondaryFiles": [
                                                    "^.tbi",
                                                    ".tbi"
                                                ],
                                                "id": "vcf"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "mutect_vcf",
                                            "id": "inputVcf"
                                        },
                                        {
                                            "source": "mutect_callstats",
                                            "id": "inputTxt"
                                        },
                                        {
                                            "source": "tumor_sample_name",
                                            "id": "tsampleName"
                                        },
                                        {
                                            "source": "hotspot_vcf",
                                            "id": "hotspotVcf"
                                        },
                                        {
                                            "source": "ref_fasta",
                                            "id": "refFasta"
                                        }
                                    ],
                                    "out": [
                                        "vcf"
                                    ],
                                    "id": "mutect_filtering_step"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "baseCommand": [
                                            "python",
                                            "/usr/bin/basicfiltering/filter_complex.py"
                                        ],
                                        "id": "basic-filtering-complex",
                                        "requirements": [
                                            {
                                                "listing": [
                                                    "$(inputs.inputVcf)"
                                                ],
                                                "class": "InitialWorkDirRequirement"
                                            },
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 16000,
                                                "coresMin": 2,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-basic-filtering:0.3",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "Given a VCF listing somatic events and a TN-pair of BAMS, apply a complex filter based on indels/soft-clipping noise\n",
                                        "inputs": [
                                            {
                                                "type": "File",
                                                "doc": "Input VCF file",
                                                "inputBinding": {
                                                    "prefix": "--input-vcf"
                                                },
                                                "id": "inputVcf"
                                            },
                                            {
                                                "type": "File",
                                                "doc": "Normal Bam file",
                                                "inputBinding": {
                                                    "prefix": "--normal-bam"
                                                },
                                                "id": "normal_bam"
                                            },
                                            {
                                                "type": "File",
                                                "doc": "Tumor Bam file",
                                                "inputBinding": {
                                                    "prefix": "--tumor-bam"
                                                },
                                                "id": "tumor_bam"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Tumor sample ID",
                                                "inputBinding": {
                                                    "prefix": "--tumor-id"
                                                },
                                                "id": "tumor_id"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Output VCF file",
                                                "inputBinding": {
                                                    "prefix": "--output-vcf"
                                                },
                                                "id": "output_vcf"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "doc": "Flanking bps around event to check for noise",
                                                "default": 50,
                                                "inputBinding": {
                                                    "prefix": "--flank-len"
                                                },
                                                "id": "flank_len"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "doc": "Minimum mapping quality of noisy reads",
                                                "default": 20,
                                                "inputBinding": {
                                                    "prefix": "--mapping-qual"
                                                },
                                                "id": "mapping_qual"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "float"
                                                ],
                                                "doc": "Maximum allowed normal noise",
                                                "default": 0.1,
                                                "inputBinding": {
                                                    "prefix": "--nrm-noise"
                                                },
                                                "id": "nrm_noise"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "float"
                                                ],
                                                "doc": "Maximum allowed tumor noise",
                                                "default": 0.2,
                                                "inputBinding": {
                                                    "prefix": "--tum-noise"
                                                },
                                                "id": "tum_noise"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.output_vcf)\n    return inputs.output_vcf;\n  return null;\n}"
                                                },
                                                "id": "vcf"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "complex_nn",
                                            "id": "nrm_noise"
                                        },
                                        {
                                            "source": "complex_tn",
                                            "id": "tum_noise"
                                        },
                                        {
                                            "source": "vardict_vcf",
                                            "id": "inputVcf"
                                        },
                                        {
                                            "source": "normal_bam",
                                            "id": "normal_bam"
                                        },
                                        {
                                            "source": "tumor_bam",
                                            "id": "tumor_bam"
                                        },
                                        {
                                            "source": "tumor_sample_name",
                                            "id": "tumor_id"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.inputVcf.basename.replace(\".vcf\", \".complex_filtered.vcf\"); }",
                                            "id": "output_vcf"
                                        }
                                    ],
                                    "out": [
                                        "vcf"
                                    ],
                                    "id": "vardict_complex_filtering_step"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "baseCommand": [
                                            "python",
                                            "/usr/bin/basicfiltering/filter_vardict.py"
                                        ],
                                        "id": "basic-filtering-vardict",
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 10000,
                                                "coresMin": 2,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-basic-filtering:0.3",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "Filter snps/indels from the output of vardict v1.4.6\n",
                                        "inputs": [
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "More verbose logging to help with debugging",
                                                "inputBinding": {
                                                    "prefix": "--verbose"
                                                },
                                                "id": "verbose"
                                            },
                                            {
                                                "type": [
                                                    "string",
                                                    "File"
                                                ],
                                                "doc": "Input vcf vardict file which needs to be filtered",
                                                "inputBinding": {
                                                    "prefix": "--inputVcf"
                                                },
                                                "id": "inputVcf"
                                            },
                                            {
                                                "type": "string",
                                                "doc": "Name of the tumor Sample",
                                                "inputBinding": {
                                                    "prefix": "--tsampleName"
                                                },
                                                "id": "tsampleName"
                                            },
                                            {
                                                "type": [
                                                    "string",
                                                    "File"
                                                ],
                                                "doc": "Reference genome in fasta format",
                                                "inputBinding": {
                                                    "prefix": "--refFasta"
                                                },
                                                "id": "refFasta"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 5,
                                                "doc": "Tumor total depth threshold",
                                                "inputBinding": {
                                                    "prefix": "--totaldepth"
                                                },
                                                "id": "dp"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 3,
                                                "doc": "Tumor allele depth threshold",
                                                "inputBinding": {
                                                    "prefix": "--alleledepth"
                                                },
                                                "id": "ad"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 5,
                                                "doc": "Tumor-Normal variant frequency ratio threshold",
                                                "inputBinding": {
                                                    "prefix": "--tnRatio"
                                                },
                                                "id": "tnr"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "float"
                                                ],
                                                "default": 0.01,
                                                "doc": "Tumor variant frequency threshold",
                                                "inputBinding": {
                                                    "prefix": "--variantfraction"
                                                },
                                                "id": "vf"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 20,
                                                "doc": "Minimum variant call quality",
                                                "inputBinding": {
                                                    "prefix": "--minqual"
                                                },
                                                "id": "mq"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string",
                                                    "File"
                                                ],
                                                "doc": "Input vcf file with hotspots that skip VAF ratio filter",
                                                "inputBinding": {
                                                    "prefix": "--hotspotVcf"
                                                },
                                                "id": "hotspotVcf"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Full Path to the output dir.",
                                                "inputBinding": {
                                                    "prefix": "--outDir"
                                                },
                                                "id": "outdir"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.inputVcf)\n    return inputs.inputVcf.basename.replace(\".vcf\",\"_STDfilter.norm.vcf.gz\");\n  return null;\n}\n"
                                                },
                                                "secondaryFiles": [
                                                    "^.tbi",
                                                    ".tbi"
                                                ],
                                                "id": "vcf"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "vardict_complex_filtering_step/vcf",
                                            "id": "inputVcf"
                                        },
                                        {
                                            "source": "tumor_sample_name",
                                            "id": "tsampleName"
                                        },
                                        {
                                            "source": "hotspot_vcf",
                                            "id": "hotspotVcf"
                                        },
                                        {
                                            "source": "ref_fasta",
                                            "id": "refFasta"
                                        }
                                    ],
                                    "out": [
                                        "vcf"
                                    ],
                                    "id": "vardict_filtering_step"
                                }
                            ],
                            "requirements": []
                        },
                        "id": "filtering"
                    },
                    {
                        "in": [
                            {
                                "source": "filtering/vardict_vcf_filtering_output",
                                "id": "vcf_vardict"
                            },
                            {
                                "source": "filtering/mutect_vcf_filtering_output",
                                "id": "vcf_mutect"
                            }
                        ],
                        "out": [
                            "vcf_files"
                        ],
                        "run": {
                            "class": "ExpressionTool",
                            "id": "create-vcf-file-array",
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                }
                            ],
                            "inputs": [
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        ".tbi"
                                    ],
                                    "id": "vcf_vardict"
                                },
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        ".tbi"
                                    ],
                                    "id": "vcf_mutect"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": {
                                        "type": "array",
                                        "items": "File"
                                    },
                                    "secondaryFiles": [
                                        ".tbi"
                                    ],
                                    "id": "vcf_files"
                                }
                            ],
                            "expression": "${ var project_object = {}; project_object['vcf_files'] = [ inputs.vcf_vardict, inputs.vcf_mutect]; return project_object; }"
                        },
                        "id": "create_vcf_file_array"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "/usr/bin/bcftools",
                                "concat"
                            ],
                            "id": "bcftools-concat",
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "ramMin": 8000,
                                    "coresMin": 1,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-htslib:1.9",
                                    "class": "DockerRequirement"
                                }
                            ],
                            "doc": "concatenate VCF/BCF files from the same set of samples\n",
                            "inputs": [
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<int> Number of extra output compression threads [0]",
                                    "inputBinding": {
                                        "prefix": "--threads"
                                    },
                                    "id": "threads"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "Do not output PS tag at each site, only at the start of a new phase set block.",
                                    "inputBinding": {
                                        "prefix": "--compact-PS"
                                    },
                                    "id": "compact_PS"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "Alias for -d none",
                                    "inputBinding": {
                                        "prefix": "--remove-duplicates"
                                    },
                                    "id": "remove_duplicates"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "Ligate phased VCFs by matching phase at overlapping haplotypes",
                                    "inputBinding": {
                                        "prefix": "--ligate"
                                    },
                                    "id": "ligate"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<b|u|z|v> b - compressed BCF, u - uncompressed BCF, z - compressed VCF, v - uncompressed VCF [v]",
                                    "inputBinding": {
                                        "prefix": "--output-type"
                                    },
                                    "id": "output_type"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "do not append version and command line to the header",
                                    "inputBinding": {
                                        "prefix": "--no-version"
                                    },
                                    "id": "no_version"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "Concatenate BCF files without recompression (dangerous, use with caution)",
                                    "inputBinding": {
                                        "prefix": "--naive"
                                    },
                                    "id": "naive"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "First coordinate of the next file can precede last record of the current file.",
                                    "inputBinding": {
                                        "prefix": "--allow-overlaps"
                                    },
                                    "id": "allow_overlaps"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<int> Break phase set if phasing quality is lower than <int> [30]",
                                    "inputBinding": {
                                        "prefix": "--min-PQ"
                                    },
                                    "id": "min_PQ"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<file> Restrict to regions listed in a file",
                                    "inputBinding": {
                                        "prefix": "--regions-file"
                                    },
                                    "id": "regions_file"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<region> Restrict to comma-separated list of regions",
                                    "inputBinding": {
                                        "prefix": "--regions"
                                    },
                                    "id": "regions"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<string> Output duplicate records present in multiple files only once - <snps|indels|both|all|none>",
                                    "inputBinding": {
                                        "prefix": "--rm-dups"
                                    },
                                    "id": "rm_dups"
                                },
                                {
                                    "type": "string",
                                    "doc": "<file> Write output to a file [standard output]",
                                    "default": "bcftools_concat.vcf",
                                    "inputBinding": {
                                        "prefix": "--output"
                                    },
                                    "id": "output"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<file> Read the list of files from a file.",
                                    "inputBinding": {
                                        "prefix": "--file-list"
                                    },
                                    "id": "list"
                                },
                                {
                                    "type": [
                                        "null",
                                        {
                                            "type": "array",
                                            "items": "File"
                                        }
                                    ],
                                    "secondaryFiles": [
                                        ".tbi"
                                    ],
                                    "doc": "Array of vcf files to be concatenated into one vcf",
                                    "inputBinding": {
                                        "position": 1
                                    },
                                    "id": "vcf_files_tbi"
                                },
                                {
                                    "type": [
                                        "null",
                                        {
                                            "type": "array",
                                            "items": "File"
                                        }
                                    ],
                                    "secondaryFiles": [
                                        "^.bcf.csi"
                                    ],
                                    "doc": "Array of vcf files to be concatenated into one vcf",
                                    "inputBinding": {
                                        "position": 1
                                    },
                                    "id": "vcf_files_csi"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "${\n  if (inputs.output)\n    return inputs.output;\n  return null;\n}"
                                    },
                                    "id": "concat_vcf_output_file"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "create_vcf_file_array/vcf_files",
                                "id": "vcf_files_tbi"
                            },
                            {
                                "source": "tumor_sample_name",
                                "id": "tumor_sample_name"
                            },
                            {
                                "source": "normal_sample_name",
                                "id": "normal_sample_name"
                            },
                            {
                                "valueFrom": "${ return true; }",
                                "id": "allow_overlaps"
                            },
                            {
                                "valueFrom": "${ return \"all\"; }",
                                "id": "rm_dups"
                            },
                            {
                                "valueFrom": "${ return \"z\"; }",
                                "id": "output_type"
                            },
                            {
                                "valueFrom": "${ return inputs.tumor_sample_name + \".\" + inputs.normal_sample_name + \".combined-variants.vcf.gz\" }",
                                "id": "output"
                            }
                        ],
                        "out": [
                            "concat_vcf_output_file"
                        ],
                        "id": "concat"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "/usr/local/bin/tabix"
                            ],
                            "id": "tabix",
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "listing": [
                                        "$(inputs.input_vcf)"
                                    ],
                                    "class": "InitialWorkDirRequirement"
                                },
                                {
                                    "ramMin": 80000,
                                    "coresMin": 1,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-htslib:1.9",
                                    "class": "DockerRequirement"
                                }
                            ],
                            "doc": "Index vcf files\n",
                            "inputs": [
                                {
                                    "type": "File",
                                    "doc": "VCF to tabix index",
                                    "inputBinding": {
                                        "position": 1
                                    },
                                    "id": "input_vcf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "doc": "coordinates are zero-based",
                                    "inputBinding": {
                                        "prefix": "--zero-based"
                                    },
                                    "id": "zero"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "skip comment lines starting with CHAR [null]",
                                    "inputBinding": {
                                        "prefix": "--comment"
                                    },
                                    "id": "comment"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "doc": "generate CSI index for VCF (default is TBI)",
                                    "inputBinding": {
                                        "prefix": "--csi"
                                    },
                                    "id": "csi"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "column number for region end (if no end, set INT to -b) [5]",
                                    "inputBinding": {
                                        "prefix": "--end"
                                    },
                                    "id": "end"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "column number for region start [4]",
                                    "inputBinding": {
                                        "prefix": "--begin"
                                    },
                                    "id": "being"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "doc": "overwrite existing index without asking",
                                    "inputBinding": {
                                        "prefix": "--force"
                                    },
                                    "id": "force"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "set minimal interval size for CSI indices to 2^INT [14]",
                                    "inputBinding": {
                                        "prefix": "--min-shift"
                                    },
                                    "id": "min_shift"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "gff, bed, sam, vcf",
                                    "inputBinding": {
                                        "prefix": "--preset"
                                    },
                                    "id": "preset"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "column number for sequence names (suppressed by -p) [1]",
                                    "inputBinding": {
                                        "prefix": "--sequence"
                                    },
                                    "id": "sequence"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "skip first INT lines [0]",
                                    "inputBinding": {
                                        "prefix": "--skip-lines"
                                    },
                                    "id": "skip_lines"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "doc": "print also the header lines",
                                    "inputBinding": {
                                        "prefix": "--print-header"
                                    },
                                    "id": "print_header"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "doc": "print only the header lines",
                                    "inputBinding": {
                                        "prefix": "--only-header"
                                    },
                                    "id": "only_header"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "doc": "list chromosome names",
                                    "inputBinding": {
                                        "prefix": "--list-chroms"
                                    },
                                    "id": "list_chroms"
                                },
                                {
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "doc": "replace the header with the content of FILE",
                                    "inputBinding": {
                                        "prefix": "--reheader"
                                    },
                                    "id": "reheader"
                                },
                                {
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "doc": "restrict to regions listed in the file",
                                    "inputBinding": {
                                        "prefix": "--regions"
                                    },
                                    "id": "regions"
                                },
                                {
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "doc": "similar to -R but streams rather than index-jumps",
                                    "inputBinding": {
                                        "prefix": "--targets"
                                    },
                                    "id": "targets"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "*.gz"
                                    },
                                    "secondaryFiles": [
                                        ".tbi",
                                        ".csi"
                                    ],
                                    "id": "tabix_output_file"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "concat/concat_vcf_output_file",
                                "id": "input_vcf"
                            },
                            {
                                "valueFrom": "${ return \"vcf\"; }",
                                "id": "preset"
                            }
                        ],
                        "out": [
                            "tabix_output_file"
                        ],
                        "id": "tabix_index"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "/usr/bin/bcftools",
                                "annotate"
                            ],
                            "id": "bcftools-annotate",
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "ramMin": 8000,
                                    "coresMin": 1,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-htslib:1.9",
                                    "class": "DockerRequirement"
                                }
                            ],
                            "doc": "Annotate and edit VCF/BCF files.\n",
                            "inputs": [
                                {
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "doc": "VCF file or tabix-indexed file with annotations CHR\\tPOS[\\tVALUE]+",
                                    "inputBinding": {
                                        "prefix": "--annotations"
                                    },
                                    "id": "annotations"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<int> Number of extra output compression threads [0]",
                                    "inputBinding": {
                                        "prefix": "--threads"
                                    },
                                    "id": "threads"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "matching records by <snps|indels|both|all|some|none>, see man page for details [some]",
                                    "inputBinding": {
                                        "prefix": "--collapse"
                                    },
                                    "id": "collapse"
                                },
                                {
                                    "type": [
                                        "null",
                                        {
                                            "type": "array",
                                            "items": "string"
                                        }
                                    ],
                                    "doc": "list of columns in the annotation file, e.g. CHROM,POS,REF,ALT,-,INFO/TAG. See man page for details",
                                    "inputBinding": {
                                        "itemSeparator": ",",
                                        "prefix": "--columns"
                                    },
                                    "id": "columns"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "exclude sites for which the expression is true (see man page for details)",
                                    "inputBinding": {
                                        "prefix": "--exclude"
                                    },
                                    "id": "exclude"
                                },
                                {
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "doc": "lines which should be appended to the VCF header",
                                    "inputBinding": {
                                        "prefix": "--header-lines"
                                    },
                                    "id": "header_lines"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "set ID column, see man page for details",
                                    "inputBinding": {
                                        "prefix": "--set-id"
                                    },
                                    "id": "set_id"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "select sites for which the expression is true (see man page for details)",
                                    "inputBinding": {
                                        "prefix": "--include"
                                    },
                                    "id": "include"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "doc": "leave -i/-e sites unchanged instead of discarding them",
                                    "inputBinding": {
                                        "prefix": "--keep-sites"
                                    },
                                    "id": "keep_sites"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "add INFO/tag flag to sites which are (\"+\") or are not (\"-\") listed in the -a file",
                                    "inputBinding": {
                                        "prefix": "--mark-sites"
                                    },
                                    "id": "mark_sites"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "do not append version and command line to the header",
                                    "inputBinding": {
                                        "prefix": "--no-version"
                                    },
                                    "id": "no_version"
                                },
                                {
                                    "type": "string",
                                    "doc": "<file> Write output to a file [standard output]",
                                    "default": "bcftools_annotate.vcf",
                                    "inputBinding": {
                                        "prefix": "--output"
                                    },
                                    "id": "output"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<b|u|z|v> b - compressed BCF, u - uncompressed BCF, z - compressed VCF, v - uncompressed VCF [v]",
                                    "inputBinding": {
                                        "prefix": "--output-type"
                                    },
                                    "id": "output_type"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<region> Restrict to comma-separated list of regions",
                                    "inputBinding": {
                                        "prefix": "--regions"
                                    },
                                    "id": "regions"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<file> Restrict to regions listed in a file",
                                    "inputBinding": {
                                        "prefix": "--regions-file"
                                    },
                                    "id": "regions_file"
                                },
                                {
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "doc": "First coordinate of the next file can precede last record of the current file.",
                                    "inputBinding": {
                                        "prefix": "--rename-chrs"
                                    },
                                    "id": "rename_chrs"
                                },
                                {
                                    "type": [
                                        "null",
                                        {
                                            "type": "array",
                                            "items": "string"
                                        }
                                    ],
                                    "doc": "Do not output PS tag at each site, only at the start of a new phase set block.",
                                    "inputBinding": {
                                        "itemSeparator": ",",
                                        "prefix": "--samples"
                                    },
                                    "id": "samples"
                                },
                                {
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "doc": "First coordinate of the next file can precede last record of the current file.",
                                    "inputBinding": {
                                        "prefix": "--samples-file"
                                    },
                                    "id": "samples_file"
                                },
                                {
                                    "type": [
                                        "null",
                                        {
                                            "type": "array",
                                            "items": "string"
                                        }
                                    ],
                                    "doc": "Do not output PS tag at each site, only at the start of a new phase set block.",
                                    "inputBinding": {
                                        "itemSeparator": ",",
                                        "prefix": "--remove"
                                    },
                                    "id": "remove"
                                },
                                {
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "secondaryFiles": [
                                        ".tbi"
                                    ],
                                    "doc": "Vcf file to be annotated",
                                    "inputBinding": {
                                        "position": 1
                                    },
                                    "id": "vcf_file_tbi"
                                },
                                {
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "secondaryFiles": [
                                        "^.bcf.csi"
                                    ],
                                    "doc": "Vcf file to be annotated",
                                    "inputBinding": {
                                        "position": 1
                                    },
                                    "id": "vcf_file_csi"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "${\n  if (inputs.output)\n    return inputs.output;\n  return null;\n}"
                                    },
                                    "id": "annotate_vcf_output_file"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "filtering/mutect_vcf_filtering_output",
                                "id": "annotations"
                            },
                            {
                                "source": "tumor_sample_name",
                                "id": "tumor_sample_name"
                            },
                            {
                                "source": "normal_sample_name",
                                "id": "normal_sample_name"
                            },
                            {
                                "valueFrom": "${ return [\"INFO/FAILURE_REASON\"]; }",
                                "id": "columns"
                            },
                            {
                                "valueFrom": "${ return \"+set=MuTect\"; }",
                                "id": "mark_sites"
                            },
                            {
                                "source": "tabix_index/tabix_output_file",
                                "id": "vcf_file_tbi"
                            },
                            {
                                "valueFrom": "${ return inputs.tumor_sample_name + \".\" + inputs.normal_sample_name + \".annotate-variants.vcf\" }",
                                "id": "output"
                            }
                        ],
                        "out": [
                            "annotate_vcf_output_file"
                        ],
                        "id": "annotate"
                    }
                ]
            },
            "in": [
                {
                    "source": "runparams",
                    "id": "runparams"
                },
                {
                    "source": "db_files",
                    "id": "db_files"
                },
                {
                    "source": "alignment/bams",
                    "id": "bams"
                },
                {
                    "source": "pair",
                    "id": "pair"
                },
                {
                    "valueFrom": "${ return inputs.bams[1]; }",
                    "id": "normal_bam"
                },
                {
                    "valueFrom": "${ return inputs.bams[0]; }",
                    "id": "tumor_bam"
                },
                {
                    "source": "alignment/bed",
                    "id": "bed"
                },
                {
                    "valueFrom": "${ return inputs.pair[1].ID; }",
                    "id": "normal_sample_name"
                },
                {
                    "valueFrom": "${ return inputs.pair[0].ID; }",
                    "id": "tumor_sample_name"
                },
                {
                    "source": "dbsnp",
                    "id": "dbsnp"
                },
                {
                    "source": "cosmic",
                    "id": "cosmic"
                },
                {
                    "valueFrom": "${ return inputs.runparams.mutect_dcov }",
                    "id": "mutect_dcov"
                },
                {
                    "valueFrom": "${ return inputs.runparams.mutect_rf }",
                    "id": "mutect_rf"
                },
                {
                    "valueFrom": "${ return inputs.db_files.refseq }",
                    "id": "refseq"
                },
                {
                    "valueFrom": "${ return inputs.db_files.hotspot_vcf }",
                    "id": "hotspot_vcf"
                },
                {
                    "source": "ref_fasta",
                    "id": "ref_fasta"
                },
                {
                    "valueFrom": "${ return inputs.db_files.facets_snps }",
                    "id": "facets_snps"
                },
                {
                    "valueFrom": "${ return inputs.runparams.complex_tn; }",
                    "id": "complex_tn"
                },
                {
                    "valueFrom": "${ return inputs.runparams.complex_nn; }",
                    "id": "complex_nn"
                }
            ],
            "out": [
                "combine_vcf",
                "annotate_vcf",
                "snp_pileup",
                "mutect_vcf",
                "mutect_callstats",
                "vardict_vcf",
                "vardict_norm_vcf",
                "mutect_norm_vcf"
            ],
            "id": "variant_calling"
        },
        {
            "run": {
                "cwlVersion": "v1.0",
                "class": "Workflow",
                "id": "structural-variants-pair",
                "requirements": [
                    {
                        "class": "MultipleInputFeatureRequirement"
                    },
                    {
                        "class": "ScatterFeatureRequirement"
                    },
                    {
                        "class": "SubworkflowFeatureRequirement"
                    },
                    {
                        "class": "InlineJavascriptRequirement"
                    },
                    {
                        "class": "StepInputExpressionRequirement"
                    }
                ],
                "inputs": [
                    {
                        "type": "File",
                        "id": "tumor_bam"
                    },
                    {
                        "type": "File",
                        "id": "normal_bam"
                    },
                    {
                        "type": "string",
                        "id": "genome"
                    },
                    {
                        "type": "string",
                        "id": "normal_sample_name"
                    },
                    {
                        "type": "string",
                        "id": "tumor_sample_name"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".amb",
                            ".ann",
                            ".bwt",
                            ".pac",
                            ".sa",
                            ".fai",
                            "^.dict"
                        ],
                        "id": "ref_fasta"
                    },
                    {
                        "type": "string",
                        "id": "vep_path"
                    },
                    {
                        "type": "string",
                        "id": "custom_enst"
                    },
                    {
                        "type": "string",
                        "id": "vep_data"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "string"
                        },
                        "id": "delly_type"
                    },
                    {
                        "type": "File",
                        "id": "delly_exclude"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".tbi"
                        ],
                        "id": "exac_filter"
                    }
                ],
                "outputs": [
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "secondaryFiles": [
                            "^.bcf.csi"
                        ],
                        "outputSource": "call_sv_by_delly/delly_sv",
                        "id": "delly_sv"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "outputBinding": {
                            "glob": "*.pass.bcf"
                        },
                        "secondaryFiles": [
                            "^.bcf.csi"
                        ],
                        "outputSource": "call_sv_by_delly/delly_filtered_sv",
                        "id": "delly_filtered_sv"
                    },
                    {
                        "type": "File",
                        "outputSource": "merge_with_bcftools/concat_vcf_output_file",
                        "id": "merged_file"
                    },
                    {
                        "type": "File",
                        "outputSource": "merge_with_bcftools_unfiltered/concat_vcf_output_file",
                        "id": "merged_file_unfiltered"
                    },
                    {
                        "type": "File",
                        "outputSource": "convert_vcf2maf/output",
                        "id": "maf_file"
                    },
                    {
                        "type": "File",
                        "outputSource": "portal_format_output/portal_file",
                        "id": "portal_file"
                    }
                ],
                "steps": [
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "cmo_index"
                            ],
                            "label": "cmo-index",
                            "requirements": [
                                {
                                    "ramMin": 16000,
                                    "coresMin": 1,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-cmo-utils:1.9.15",
                                    "class": "DockerRequirement"
                                },
                                {
                                    "listing": [
                                        "$(inputs.bam)"
                                    ],
                                    "class": "InitialWorkDirRequirement"
                                }
                            ],
                            "inputs": [
                                {
                                    "type": "File",
                                    "inputBinding": {
                                        "prefix": "--bam"
                                    },
                                    "id": "bam"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "$(inputs.bam.basename)"
                                    },
                                    "secondaryFiles": [
                                        "^.bai",
                                        ".bai"
                                    ],
                                    "id": "bam_indexed"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "normal_bam",
                                "id": "bam"
                            }
                        ],
                        "out": [
                            "bam_indexed"
                        ],
                        "id": "normal_index"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "cmo_index"
                            ],
                            "label": "cmo-index",
                            "requirements": [
                                {
                                    "ramMin": 16000,
                                    "coresMin": 1,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-cmo-utils:1.9.15",
                                    "class": "DockerRequirement"
                                },
                                {
                                    "listing": [
                                        "$(inputs.bam)"
                                    ],
                                    "class": "InitialWorkDirRequirement"
                                }
                            ],
                            "inputs": [
                                {
                                    "type": "File",
                                    "inputBinding": {
                                        "prefix": "--bam"
                                    },
                                    "id": "bam"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "$(inputs.bam.basename)"
                                    },
                                    "secondaryFiles": [
                                        "^.bai",
                                        ".bai"
                                    ],
                                    "id": "bam_indexed"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "tumor_bam",
                                "id": "bam"
                            }
                        ],
                        "out": [
                            "bam_indexed"
                        ],
                        "id": "tumor_index"
                    },
                    {
                        "in": [
                            {
                                "source": "tumor_sample_name",
                                "id": "tumor_sample_name"
                            },
                            {
                                "source": "normal_sample_name",
                                "id": "normal_sample_name"
                            },
                            {
                                "valueFrom": "${ return inputs.tumor_sample_name + \"\\ttumor\\n\" + inputs.normal_sample_name + \"\\tcontrol\"; }",
                                "id": "echoString"
                            },
                            {
                                "valueFrom": "${ return \"tn_pair.txt\"; }",
                                "id": "output_filename"
                            }
                        ],
                        "out": [
                            "pairfile"
                        ],
                        "run": {
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "echo",
                                "-e"
                            ],
                            "id": "create_TN_pair",
                            "stdout": "$(inputs.output_filename)",
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "class": "MultipleInputFeatureRequirement"
                                },
                                {
                                    "dockerPull": "alpine:3.8",
                                    "class": "DockerRequirement"
                                }
                            ],
                            "inputs": [
                                {
                                    "type": "string",
                                    "inputBinding": {
                                        "position": 1
                                    },
                                    "id": "echoString"
                                },
                                {
                                    "type": "string",
                                    "id": "output_filename"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "stdout",
                                    "id": "pairfile"
                                }
                            ]
                        },
                        "id": "createTNPair"
                    },
                    {
                        "scatter": [
                            "delly_type"
                        ],
                        "scatterMethod": "dotproduct",
                        "in": [
                            {
                                "source": "tumor_index/bam_indexed",
                                "id": "tumor_bam"
                            },
                            {
                                "source": "normal_index/bam_indexed",
                                "id": "normal_bam"
                            },
                            {
                                "source": "normal_sample_name",
                                "id": "normal_sample_name"
                            },
                            {
                                "source": "tumor_sample_name",
                                "id": "tumor_sample_name"
                            },
                            {
                                "source": "genome",
                                "id": "genome"
                            },
                            {
                                "source": "createTNPair/pairfile",
                                "id": "pairfile"
                            },
                            {
                                "source": "delly_type",
                                "id": "delly_type"
                            },
                            {
                                "source": "delly_exclude",
                                "id": "delly_exclude"
                            },
                            {
                                "source": "ref_fasta",
                                "id": "ref_fasta"
                            }
                        ],
                        "out": [
                            "delly_sv",
                            "delly_filtered_sv"
                        ],
                        "run": {
                            "class": "Workflow",
                            "id": "call_sv_by_delly",
                            "inputs": [
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        ".bai"
                                    ],
                                    "id": "tumor_bam"
                                },
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        ".bai"
                                    ],
                                    "id": "normal_bam"
                                },
                                {
                                    "type": "string",
                                    "id": "genome"
                                },
                                {
                                    "type": "string",
                                    "id": "normal_sample_name"
                                },
                                {
                                    "type": "string",
                                    "id": "tumor_sample_name"
                                },
                                {
                                    "type": "string",
                                    "id": "delly_type"
                                },
                                {
                                    "type": "File",
                                    "id": "pairfile"
                                },
                                {
                                    "type": "File",
                                    "id": "ref_fasta"
                                },
                                {
                                    "type": "File",
                                    "id": "delly_exclude"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        "^.bcf.csi"
                                    ],
                                    "outputSource": "delly_call/sv_file",
                                    "id": "delly_sv"
                                },
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "*.pass.bcf"
                                    },
                                    "secondaryFiles": [
                                        "^.bcf.csi"
                                    ],
                                    "outputSource": "delly_filter/sv_file",
                                    "id": "delly_filtered_sv"
                                }
                            ],
                            "steps": [
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "baseCommand": [
                                            "/usr/local/bin/delly",
                                            "call"
                                        ],
                                        "id": "delly-call",
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "listing": [
                                                    "$(inputs.x)",
                                                    "$(inputs.normal_bam)",
                                                    "$(inputs.tumor_bam)"
                                                ],
                                                "class": "InitialWorkDirRequirement"
                                            },
                                            {
                                                "ramMin": 8000,
                                                "coresMin": 1,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-delly:0.7.7",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "None\n",
                                        "inputs": [
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "default": "DEL",
                                                "doc": "SV type (DEL, DUP, INV, BND, INS)",
                                                "inputBinding": {
                                                    "prefix": "--type"
                                                },
                                                "id": "t"
                                            },
                                            {
                                                "type": "File",
                                                "secondaryFiles": [
                                                    ".amb",
                                                    ".ann",
                                                    ".bwt",
                                                    ".pac",
                                                    ".sa",
                                                    ".fai",
                                                    "^.dict"
                                                ],
                                                "doc": "genome fasta file",
                                                "inputBinding": {
                                                    "prefix": "--genome"
                                                },
                                                "id": "g"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "File"
                                                ],
                                                "doc": "file with regions to exclude",
                                                "inputBinding": {
                                                    "prefix": "--exclude"
                                                },
                                                "id": "x"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "default": "sv.bcf",
                                                "doc": "SV BCF output file",
                                                "inputBinding": {
                                                    "prefix": "--outfile"
                                                },
                                                "id": "o"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 1,
                                                "doc": "min. paired-end mapping quality",
                                                "inputBinding": {
                                                    "prefix": "--map-qual"
                                                },
                                                "id": "q"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 9,
                                                "doc": "insert size cutoff, median+s*MAD (deletions only)",
                                                "inputBinding": {
                                                    "prefix": "--mad-cutoff"
                                                },
                                                "id": "s"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "no small InDel calling",
                                                "inputBinding": {
                                                    "prefix": "--noindels"
                                                },
                                                "id": "n"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "input VCF/BCF file for re-genotyping",
                                                "inputBinding": {
                                                    "prefix": "--vcffile"
                                                },
                                                "id": "v"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 5,
                                                "doc": "min. mapping quality for genotyping",
                                                "inputBinding": {
                                                    "prefix": "--geno-qual"
                                                },
                                                "id": "u"
                                            },
                                            {
                                                "type": "File",
                                                "doc": "Sorted normal bam",
                                                "inputBinding": {
                                                    "position": 1
                                                },
                                                "secondaryFiles": [
                                                    ".bai"
                                                ],
                                                "id": "normal_bam"
                                            },
                                            {
                                                "type": "File",
                                                "doc": "Sorted tumor bam",
                                                "inputBinding": {
                                                    "position": 1
                                                },
                                                "secondaryFiles": [
                                                    ".bai"
                                                ],
                                                "id": "tumor_bam"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "include regions marked in this genome",
                                                "inputBinding": {
                                                    "prefix": "--all_regions"
                                                },
                                                "id": "all_regions"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "log stderr to file",
                                                "inputBinding": {
                                                    "prefix": "--stderr"
                                                },
                                                "id": "stderr"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "log stdout to file",
                                                "inputBinding": {
                                                    "prefix": "--stdout"
                                                },
                                                "id": "stdout"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "secondaryFiles": [
                                                    "^.bcf.csi"
                                                ],
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.o)\n    return inputs.o;\n  return null;\n}\n"
                                                },
                                                "id": "sv_file"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "delly_type",
                                            "id": "t"
                                        },
                                        {
                                            "source": "tumor_bam",
                                            "id": "tumor_bam"
                                        },
                                        {
                                            "source": "normal_bam",
                                            "id": "normal_bam"
                                        },
                                        {
                                            "source": "normal_sample_name",
                                            "id": "normal_sample_name"
                                        },
                                        {
                                            "source": "tumor_sample_name",
                                            "id": "tumor_sample_name"
                                        },
                                        {
                                            "source": "ref_fasta",
                                            "id": "g"
                                        },
                                        {
                                            "source": "delly_exclude",
                                            "id": "x"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.tumor_sample_name + \".\" + inputs.normal_sample_name +\".\" + inputs.t + \".bcf\"; }",
                                            "id": "o"
                                        }
                                    ],
                                    "out": [
                                        "sv_file"
                                    ],
                                    "id": "delly_call"
                                },
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "baseCommand": [
                                            "/usr/local/bin/delly",
                                            "filter"
                                        ],
                                        "id": "delly-filter",
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 8000,
                                                "coresMin": 1,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-delly:0.7.7",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "None\n",
                                        "inputs": [
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "default": "DEL",
                                                "doc": "SV type (DEL, DUP, INV, BND, INS)",
                                                "inputBinding": {
                                                    "prefix": "--type"
                                                },
                                                "id": "t"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "default": "somatic",
                                                "doc": "Filter mode (somatic, germline)",
                                                "inputBinding": {
                                                    "prefix": "--filter"
                                                },
                                                "id": "f"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "default": "sv.bcf",
                                                "doc": "Filtered SV BCF output file",
                                                "inputBinding": {
                                                    "prefix": "--outfile"
                                                },
                                                "id": "o"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "float"
                                                ],
                                                "default": 0.04,
                                                "doc": "min. fractional ALT support",
                                                "inputBinding": {
                                                    "prefix": "--altaf"
                                                },
                                                "id": "a"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 500,
                                                "doc": "min. SV size",
                                                "inputBinding": {
                                                    "prefix": "--minsize"
                                                },
                                                "id": "m"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 500000000,
                                                "doc": "max. SV size",
                                                "inputBinding": {
                                                    "prefix": "--maxsize"
                                                },
                                                "id": "n"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "float"
                                                ],
                                                "default": 0.0,
                                                "doc": "min. fraction of genotyped samples",
                                                "inputBinding": {
                                                    "prefix": "--ratiogeno"
                                                },
                                                "id": "r"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": true,
                                                "doc": "Filter sites for PASS",
                                                "inputBinding": {
                                                    "prefix": "--pass"
                                                },
                                                "id": "p"
                                            },
                                            {
                                                "type": "File",
                                                "doc": "Two-column sample file listing sample name and tumor or control",
                                                "inputBinding": {
                                                    "prefix": "--samples"
                                                },
                                                "id": "s"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 10,
                                                "doc": "min. coverage in tumor",
                                                "inputBinding": {
                                                    "prefix": "--coverage"
                                                },
                                                "id": "v"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 0,
                                                "doc": "max. fractional ALT support in control",
                                                "inputBinding": {
                                                    "prefix": "--controlcontamination"
                                                },
                                                "id": "c"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "int"
                                                ],
                                                "default": 15,
                                                "doc": "min. median GQ for carriers and non-carriers",
                                                "inputBinding": {
                                                    "prefix": "--gq"
                                                },
                                                "id": "q"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "float"
                                                ],
                                                "default": 0.800000012,
                                                "doc": "max. read-depth ratio of carrier vs. non-carrier for a deletion",
                                                "inputBinding": {
                                                    "prefix": "--rddel"
                                                },
                                                "id": "e"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "float"
                                                ],
                                                "default": 1.20000005,
                                                "doc": "min. read-depth ratio of carrier vs. non-carrier for a duplication",
                                                "inputBinding": {
                                                    "prefix": "--rddup"
                                                },
                                                "id": "u"
                                            },
                                            {
                                                "type": "File",
                                                "inputBinding": {
                                                    "position": 1
                                                },
                                                "doc": "Input file (.bcf)",
                                                "id": "i"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "boolean"
                                                ],
                                                "default": false,
                                                "doc": "include regions marked in this genome",
                                                "inputBinding": {
                                                    "prefix": "--all_regions"
                                                },
                                                "id": "all_regions"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "log stderr to file",
                                                "inputBinding": {
                                                    "prefix": "--stderr"
                                                },
                                                "id": "stderr"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "log stdout to file",
                                                "inputBinding": {
                                                    "prefix": "--stdout"
                                                },
                                                "id": "stdout"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "secondaryFiles": [
                                                    "^.bcf.csi"
                                                ],
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.o)\n    return inputs.o;\n  return null;\n}\n"
                                                },
                                                "id": "sv_file"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "delly_call/sv_file",
                                            "id": "i"
                                        },
                                        {
                                            "source": "pairfile",
                                            "id": "s"
                                        },
                                        {
                                            "source": "delly_type",
                                            "id": "t"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.i.basename.replace(\".bcf\", \".pass.bcf\"); }",
                                            "id": "o"
                                        }
                                    ],
                                    "out": [
                                        "sv_file"
                                    ],
                                    "id": "delly_filter"
                                }
                            ],
                            "requirements": []
                        },
                        "id": "call_sv_by_delly"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "/usr/bin/bcftools",
                                "concat"
                            ],
                            "id": "bcftools-concat",
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "ramMin": 8000,
                                    "coresMin": 1,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-htslib:1.9",
                                    "class": "DockerRequirement"
                                }
                            ],
                            "doc": "concatenate VCF/BCF files from the same set of samples\n",
                            "inputs": [
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<int> Number of extra output compression threads [0]",
                                    "inputBinding": {
                                        "prefix": "--threads"
                                    },
                                    "id": "threads"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "Do not output PS tag at each site, only at the start of a new phase set block.",
                                    "inputBinding": {
                                        "prefix": "--compact-PS"
                                    },
                                    "id": "compact_PS"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "Alias for -d none",
                                    "inputBinding": {
                                        "prefix": "--remove-duplicates"
                                    },
                                    "id": "remove_duplicates"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "Ligate phased VCFs by matching phase at overlapping haplotypes",
                                    "inputBinding": {
                                        "prefix": "--ligate"
                                    },
                                    "id": "ligate"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<b|u|z|v> b - compressed BCF, u - uncompressed BCF, z - compressed VCF, v - uncompressed VCF [v]",
                                    "inputBinding": {
                                        "prefix": "--output-type"
                                    },
                                    "id": "output_type"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "do not append version and command line to the header",
                                    "inputBinding": {
                                        "prefix": "--no-version"
                                    },
                                    "id": "no_version"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "Concatenate BCF files without recompression (dangerous, use with caution)",
                                    "inputBinding": {
                                        "prefix": "--naive"
                                    },
                                    "id": "naive"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "First coordinate of the next file can precede last record of the current file.",
                                    "inputBinding": {
                                        "prefix": "--allow-overlaps"
                                    },
                                    "id": "allow_overlaps"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<int> Break phase set if phasing quality is lower than <int> [30]",
                                    "inputBinding": {
                                        "prefix": "--min-PQ"
                                    },
                                    "id": "min_PQ"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<file> Restrict to regions listed in a file",
                                    "inputBinding": {
                                        "prefix": "--regions-file"
                                    },
                                    "id": "regions_file"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<region> Restrict to comma-separated list of regions",
                                    "inputBinding": {
                                        "prefix": "--regions"
                                    },
                                    "id": "regions"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<string> Output duplicate records present in multiple files only once - <snps|indels|both|all|none>",
                                    "inputBinding": {
                                        "prefix": "--rm-dups"
                                    },
                                    "id": "rm_dups"
                                },
                                {
                                    "type": "string",
                                    "doc": "<file> Write output to a file [standard output]",
                                    "default": "bcftools_concat.vcf",
                                    "inputBinding": {
                                        "prefix": "--output"
                                    },
                                    "id": "output"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<file> Read the list of files from a file.",
                                    "inputBinding": {
                                        "prefix": "--file-list"
                                    },
                                    "id": "list"
                                },
                                {
                                    "type": [
                                        "null",
                                        {
                                            "type": "array",
                                            "items": "File"
                                        }
                                    ],
                                    "secondaryFiles": [
                                        ".tbi"
                                    ],
                                    "doc": "Array of vcf files to be concatenated into one vcf",
                                    "inputBinding": {
                                        "position": 1
                                    },
                                    "id": "vcf_files_tbi"
                                },
                                {
                                    "type": [
                                        "null",
                                        {
                                            "type": "array",
                                            "items": "File"
                                        }
                                    ],
                                    "secondaryFiles": [
                                        "^.bcf.csi"
                                    ],
                                    "doc": "Array of vcf files to be concatenated into one vcf",
                                    "inputBinding": {
                                        "position": 1
                                    },
                                    "id": "vcf_files_csi"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "${\n  if (inputs.output)\n    return inputs.output;\n  return null;\n}"
                                    },
                                    "id": "concat_vcf_output_file"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "tumor_sample_name",
                                "id": "tumor_sample_name"
                            },
                            {
                                "source": "normal_sample_name",
                                "id": "normal_sample_name"
                            },
                            {
                                "valueFrom": "${ return true; }",
                                "id": "allow_overlaps"
                            },
                            {
                                "source": "call_sv_by_delly/delly_sv",
                                "id": "vcf_files_csi"
                            },
                            {
                                "valueFrom": "${ return inputs.tumor_sample_name + \".\" + inputs.normal_sample_name + \".svs.vcf\"; }",
                                "id": "output"
                            }
                        ],
                        "out": [
                            "concat_vcf_output_file"
                        ],
                        "id": "merge_with_bcftools_unfiltered"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "/usr/bin/bcftools",
                                "concat"
                            ],
                            "id": "bcftools-concat",
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "ramMin": 8000,
                                    "coresMin": 1,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-htslib:1.9",
                                    "class": "DockerRequirement"
                                }
                            ],
                            "doc": "concatenate VCF/BCF files from the same set of samples\n",
                            "inputs": [
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<int> Number of extra output compression threads [0]",
                                    "inputBinding": {
                                        "prefix": "--threads"
                                    },
                                    "id": "threads"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "Do not output PS tag at each site, only at the start of a new phase set block.",
                                    "inputBinding": {
                                        "prefix": "--compact-PS"
                                    },
                                    "id": "compact_PS"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "Alias for -d none",
                                    "inputBinding": {
                                        "prefix": "--remove-duplicates"
                                    },
                                    "id": "remove_duplicates"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "Ligate phased VCFs by matching phase at overlapping haplotypes",
                                    "inputBinding": {
                                        "prefix": "--ligate"
                                    },
                                    "id": "ligate"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<b|u|z|v> b - compressed BCF, u - uncompressed BCF, z - compressed VCF, v - uncompressed VCF [v]",
                                    "inputBinding": {
                                        "prefix": "--output-type"
                                    },
                                    "id": "output_type"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "do not append version and command line to the header",
                                    "inputBinding": {
                                        "prefix": "--no-version"
                                    },
                                    "id": "no_version"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "Concatenate BCF files without recompression (dangerous, use with caution)",
                                    "inputBinding": {
                                        "prefix": "--naive"
                                    },
                                    "id": "naive"
                                },
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "First coordinate of the next file can precede last record of the current file.",
                                    "inputBinding": {
                                        "prefix": "--allow-overlaps"
                                    },
                                    "id": "allow_overlaps"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<int> Break phase set if phasing quality is lower than <int> [30]",
                                    "inputBinding": {
                                        "prefix": "--min-PQ"
                                    },
                                    "id": "min_PQ"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<file> Restrict to regions listed in a file",
                                    "inputBinding": {
                                        "prefix": "--regions-file"
                                    },
                                    "id": "regions_file"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<region> Restrict to comma-separated list of regions",
                                    "inputBinding": {
                                        "prefix": "--regions"
                                    },
                                    "id": "regions"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<string> Output duplicate records present in multiple files only once - <snps|indels|both|all|none>",
                                    "inputBinding": {
                                        "prefix": "--rm-dups"
                                    },
                                    "id": "rm_dups"
                                },
                                {
                                    "type": "string",
                                    "doc": "<file> Write output to a file [standard output]",
                                    "default": "bcftools_concat.vcf",
                                    "inputBinding": {
                                        "prefix": "--output"
                                    },
                                    "id": "output"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "<file> Read the list of files from a file.",
                                    "inputBinding": {
                                        "prefix": "--file-list"
                                    },
                                    "id": "list"
                                },
                                {
                                    "type": [
                                        "null",
                                        {
                                            "type": "array",
                                            "items": "File"
                                        }
                                    ],
                                    "secondaryFiles": [
                                        ".tbi"
                                    ],
                                    "doc": "Array of vcf files to be concatenated into one vcf",
                                    "inputBinding": {
                                        "position": 1
                                    },
                                    "id": "vcf_files_tbi"
                                },
                                {
                                    "type": [
                                        "null",
                                        {
                                            "type": "array",
                                            "items": "File"
                                        }
                                    ],
                                    "secondaryFiles": [
                                        "^.bcf.csi"
                                    ],
                                    "doc": "Array of vcf files to be concatenated into one vcf",
                                    "inputBinding": {
                                        "position": 1
                                    },
                                    "id": "vcf_files_csi"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "${\n  if (inputs.output)\n    return inputs.output;\n  return null;\n}"
                                    },
                                    "id": "concat_vcf_output_file"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "tumor_sample_name",
                                "id": "tumor_sample_name"
                            },
                            {
                                "source": "normal_sample_name",
                                "id": "normal_sample_name"
                            },
                            {
                                "valueFrom": "${ return true; }",
                                "id": "allow_overlaps"
                            },
                            {
                                "source": "call_sv_by_delly/delly_filtered_sv",
                                "id": "vcf_files_csi"
                            },
                            {
                                "valueFrom": "${ return inputs.tumor_sample_name + \".\" + inputs.normal_sample_name + \".svs.pass.vcf\"; }",
                                "id": "output"
                            }
                        ],
                        "out": [
                            "concat_vcf_output_file"
                        ],
                        "id": "merge_with_bcftools"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "perl",
                                "/usr/bin/vcf2maf/vcf2maf.pl"
                            ],
                            "arguments": [
                                {
                                    "valueFrom": "$(runtime.tmpdir)",
                                    "prefix": "--tmp-dir",
                                    "shellQuote": false
                                }
                            ],
                            "label": "vcf2maf",
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "ramMin": 8000,
                                    "coresMin": 2,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-vcf2maf:1.6.17",
                                    "class": "DockerRequirement"
                                }
                            ],
                            "doc": "None\n",
                            "inputs": [
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "86",
                                    "doc": "Version of VEP and its cache to use",
                                    "inputBinding": {
                                        "prefix": "--cache-version"
                                    },
                                    "id": "cache_version"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "homo_sapiens",
                                    "doc": "Species of variants in input",
                                    "inputBinding": {
                                        "prefix": "--species"
                                    },
                                    "id": "species"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "GRCh37",
                                    "doc": "Genome build of variants in input",
                                    "inputBinding": {
                                        "prefix": "--ncbi-build"
                                    },
                                    "id": "ncbi_build"
                                },
                                {
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "doc": "Reference FASTA file",
                                    "inputBinding": {
                                        "prefix": "--ref-fasta"
                                    },
                                    "id": "ref_fasta"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "mskcc.org",
                                    "doc": "Variant calling center to report in MAF",
                                    "inputBinding": {
                                        "prefix": "--maf-center"
                                    },
                                    "id": "maf_center"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Path to output MAF file",
                                    "inputBinding": {
                                        "prefix": "--output-maf"
                                    },
                                    "id": "output_maf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "int"
                                    ],
                                    "default": 10,
                                    "doc": "Use tag common_variant if the filter-vcf reports a subpopulation AC higher than this",
                                    "inputBinding": {
                                        "prefix": "--max-filter-ac"
                                    },
                                    "id": "max_filter_ac"
                                },
                                {
                                    "type": [
                                        "null",
                                        "float"
                                    ],
                                    "default": 0.7,
                                    "doc": "If GT undefined in VCF, minimum allele fraction to call a variant homozygous",
                                    "inputBinding": {
                                        "prefix": "--min-hom-vaf"
                                    },
                                    "id": "min_hom_vaf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Chain file to remap variants to a different assembly before running VEP",
                                    "inputBinding": {
                                        "prefix": "--remap-chain"
                                    },
                                    "id": "remap_chain"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "NORMAL",
                                    "doc": "Matched_Norm_Sample_Barcode to report in the MAF",
                                    "inputBinding": {
                                        "prefix": "--normal-id"
                                    },
                                    "id": "normal_id"
                                },
                                {
                                    "type": [
                                        "null",
                                        "int"
                                    ],
                                    "default": 5000,
                                    "doc": "Number of variants VEP loads at a time; Reduce this for low memory systems",
                                    "inputBinding": {
                                        "prefix": "--buffer-size"
                                    },
                                    "id": "buffer_size"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "List of custom ENST IDs that override canonical selection",
                                    "inputBinding": {
                                        "prefix": "--custom-enst"
                                    },
                                    "id": "custom_enst"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "NORMAL",
                                    "doc": "Matched normal ID used in VCFs genotype columns",
                                    "inputBinding": {
                                        "prefix": "--vcf-normal-id"
                                    },
                                    "id": "vcf_normal_id"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Folder containing variant_effect_predictor.pl or vep binary",
                                    "inputBinding": {
                                        "prefix": "--vep-path"
                                    },
                                    "id": "vep_path"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "VEPs base cache/plugin directory",
                                    "inputBinding": {
                                        "prefix": "--vep-data"
                                    },
                                    "id": "vep_data"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "When reporting co-located variants, allow mismatched variant alleles too",
                                    "inputBinding": {
                                        "prefix": "--any-allele"
                                    },
                                    "id": "any_allele"
                                },
                                {
                                    "type": [
                                        "string",
                                        "File"
                                    ],
                                    "doc": "Path to input file in VCF format",
                                    "inputBinding": {
                                        "prefix": "--input-vcf"
                                    },
                                    "id": "input_vcf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "int"
                                    ],
                                    "default": 4,
                                    "doc": "Number of forked processes to use when running VEP",
                                    "inputBinding": {
                                        "prefix": "--vep-forks"
                                    },
                                    "id": "vep_forks"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "TUMOR",
                                    "doc": "Tumor sample ID used in VCFs genotype columns",
                                    "inputBinding": {
                                        "prefix": "--vcf-tumor-id"
                                    },
                                    "id": "vcf_tumor_id"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "TUMOR",
                                    "doc": "Tumor_Sample_Barcode to report in the MAF",
                                    "inputBinding": {
                                        "prefix": "--tumor-id"
                                    },
                                    "id": "tumor_id"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string",
                                        "File"
                                    ],
                                    "doc": "The non-TCGA VCF from exac.broadinstitute.org",
                                    "inputBinding": {
                                        "prefix": "--filter-vcf"
                                    },
                                    "secondaryFiles": [
                                        ".tbi"
                                    ],
                                    "id": "filter_vcf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Comma-delimited names of INFO fields to retain as extra columns in MAF",
                                    "inputBinding": {
                                        "prefix": "--retain-info"
                                    },
                                    "id": "retain_info"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Comma-delimited names of FORMAT fields to retain as extra columns in MAF []",
                                    "inputBinding": {
                                        "prefix": "--retain-fmt"
                                    },
                                    "id": "retain_fmt"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "${\n  if (inputs.output_maf)\n    return inputs.output_maf;\n  return null;\n}\n"
                                    },
                                    "id": "output"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "vep_data",
                                "id": "vep_data"
                            },
                            {
                                "source": "vep_path",
                                "id": "vep_path"
                            },
                            {
                                "valueFrom": "${ return \"86\"; }",
                                "id": "vep_release"
                            },
                            {
                                "source": "ref_fasta",
                                "id": "ref_fasta"
                            },
                            {
                                "source": "genome",
                                "id": "ncbi_build"
                            },
                            {
                                "source": "exac_filter",
                                "id": "filter_vcf"
                            },
                            {
                                "source": "custom_enst",
                                "id": "custom_enst"
                            },
                            {
                                "source": "normal_sample_name",
                                "id": "normal_id"
                            },
                            {
                                "source": "tumor_sample_name",
                                "id": "tumor_id"
                            },
                            {
                                "source": "normal_sample_name",
                                "id": "vcf_normal_id"
                            },
                            {
                                "source": "tumor_sample_name",
                                "id": "vcf_tumor_id"
                            },
                            {
                                "source": "merge_with_bcftools/concat_vcf_output_file",
                                "id": "input_vcf"
                            },
                            {
                                "valueFrom": "$(inputs.input_vcf.basename.replace('vcf','vep.maf'))",
                                "id": "output_maf"
                            }
                        ],
                        "out": [
                            "output"
                        ],
                        "id": "convert_vcf2maf"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "Workflow",
                            "id": "format-maf",
                            "requirements": [
                                {
                                    "class": "MultipleInputFeatureRequirement"
                                },
                                {
                                    "class": "ScatterFeatureRequirement"
                                },
                                {
                                    "class": "SubworkflowFeatureRequirement"
                                },
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "class": "StepInputExpressionRequirement"
                                }
                            ],
                            "inputs": [
                                {
                                    "type": "File",
                                    "id": "input_maf"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputSource": "portal_format_output/portal_formatted",
                                    "id": "portal_file"
                                }
                            ],
                            "steps": [
                                {
                                    "in": [
                                        {
                                            "source": "input_maf",
                                            "id": "input_maf"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.input_maf.basename.replace(\".maf\", \".grepped.txt\"); }",
                                            "id": "output_filename"
                                        }
                                    ],
                                    "out": [
                                        "comment_removed"
                                    ],
                                    "run": {
                                        "class": "CommandLineTool",
                                        "id": "formatting_remove_comments",
                                        "baseCommand": [
                                            "grep",
                                            "^[^#;]"
                                        ],
                                        "stdout": "$(inputs.output_filename)",
                                        "requirements": [
                                            {
                                                "dockerPull": "alpine:3.8",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": "File",
                                                "inputBinding": {
                                                    "position": 1
                                                },
                                                "id": "input_maf"
                                            },
                                            {
                                                "type": "string",
                                                "id": "output_filename"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "stdout",
                                                "id": "comment_removed"
                                            }
                                        ]
                                    },
                                    "id": "formatting_remove_comments"
                                },
                                {
                                    "in": [
                                        {
                                            "source": "formatting_remove_comments/comment_removed",
                                            "id": "grepped_file"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.grepped_file.basename.replace(\".grepped.txt\", \".extracted.txt\"); }",
                                            "id": "output_filename"
                                        }
                                    ],
                                    "out": [
                                        "extracted_file"
                                    ],
                                    "run": {
                                        "class": "CommandLineTool",
                                        "id": "extract_columns",
                                        "baseCommand": [],
                                        "arguments": [
                                            "awk",
                                            "-F",
                                            "\t",
                                            "NR==1 { for(i=1;i<=NF;i++){ f[$i]=i } print \"Hugo_Symbol\\\\tEntrez_Gene_Id\\\\tCenter\\\\tTumor_Sample_Barcode\\\\tFusion\\\\tMethod\\\\tFrame\" } NR>1 { print \\$(f[\"Hugo_Symbol\"])\"\\\\t\"\\$(f[\"Entrez_Gene_Id\"])\"\\\\t\"\\$(f[\"Center\"])\"\\\\t\"\\$(f[\"Tumor_Sample_Barcode\"])\"\\\\t\"\\$(f[\"Fusion\"])\"\\\\t\"\\$(f[\"Method\"])\"\\\\t\"\\$(f[\"Frame\"])}"
                                        ],
                                        "stdout": "$(inputs.output_filename)",
                                        "requirements": [
                                            {
                                                "dockerPull": "alpine:3.8",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": "File",
                                                "inputBinding": {
                                                    "position": 1
                                                },
                                                "id": "grepped_file"
                                            },
                                            {
                                                "type": "string",
                                                "id": "output_filename"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "stdout",
                                                "id": "extracted_file"
                                            }
                                        ]
                                    },
                                    "id": "extract_columns"
                                },
                                {
                                    "in": [
                                        {
                                            "source": "extract_columns/extracted_file",
                                            "id": "extracted_file"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.extracted_file.basename.replace(\".extracted.txt\", \".columns_added.txt\"); }",
                                            "id": "output_filename"
                                        }
                                    ],
                                    "out": [
                                        "columns_added"
                                    ],
                                    "run": {
                                        "class": "CommandLineTool",
                                        "id": "add_two_columns",
                                        "baseCommand": [
                                            "sed",
                                            "1s/$/\\tDNA_support\\tRNA_support/;2,$s/$/\\tyes\\tno/"
                                        ],
                                        "stdout": "$(inputs.output_filename)",
                                        "requirements": [
                                            {
                                                "dockerPull": "alpine:3.8",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": "File",
                                                "inputBinding": {
                                                    "position": 1
                                                },
                                                "id": "extracted_file"
                                            },
                                            {
                                                "type": "string",
                                                "id": "output_filename"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "stdout",
                                                "id": "columns_added"
                                            }
                                        ]
                                    },
                                    "id": "add_two_columns"
                                },
                                {
                                    "in": [
                                        {
                                            "source": "add_two_columns/columns_added",
                                            "id": "sed_file"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.sed_file.basename.replace(\".columns_added.txt\", \".portal.txt\"); }",
                                            "id": "output_filename"
                                        }
                                    ],
                                    "out": [
                                        "portal_formatted"
                                    ],
                                    "run": {
                                        "class": "CommandLineTool",
                                        "id": "portal_format_output",
                                        "baseCommand": [],
                                        "arguments": [
                                            "awk",
                                            "-F",
                                            "\t",
                                            "NR==1 { for(i=1;i<=NF;i++){ f[$i]=i } } { print \\$(f[\"Hugo_Symbol\"])\"\\\\t\"\\$(f[\"Entrez_Gene_Id\"])\"\\\\t\"\\$(f[\"Center\"])\"\\\\t\"\\$(f[\"Tumor_Sample_Barcode\"])\"\\\\t\"\\$(f[\"Fusion\"])\"\\\\t\"\\$(f[\"DNA_support\"])\"\\\\t\"\\$(f[\"RNA_support\"])\"\\\\t\"\\$(f[\"Method\"])\"\\\\t\"\\$(f[\"Frame\"])}"
                                        ],
                                        "stdout": "$(inputs.output_filename)",
                                        "requirements": [
                                            {
                                                "dockerPull": "alpine:3.8",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "inputs": [
                                            {
                                                "type": "File",
                                                "inputBinding": {
                                                    "position": 1
                                                },
                                                "id": "sed_file"
                                            },
                                            {
                                                "type": "string",
                                                "id": "output_filename"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "stdout",
                                                "id": "portal_formatted"
                                            }
                                        ]
                                    },
                                    "id": "portal_format_output"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "convert_vcf2maf/output",
                                "id": "input_maf"
                            }
                        ],
                        "out": [
                            "portal_file"
                        ],
                        "id": "portal_format_output"
                    }
                ]
            },
            "in": [
                {
                    "source": "runparams",
                    "id": "runparams"
                },
                {
                    "source": "db_files",
                    "id": "db_files"
                },
                {
                    "source": "exac_filter",
                    "id": "exac_filter"
                },
                {
                    "source": "alignment/bams",
                    "id": "bams"
                },
                {
                    "source": "pair",
                    "id": "pair"
                },
                {
                    "valueFrom": "${ return inputs.bams[1]; }",
                    "id": "normal_bam"
                },
                {
                    "valueFrom": "${ return inputs.bams[0]; }",
                    "id": "tumor_bam"
                },
                {
                    "valueFrom": "${ return inputs.runparams.genome }",
                    "id": "genome"
                },
                {
                    "valueFrom": "${ return inputs.pair[1].ID; }",
                    "id": "normal_sample_name"
                },
                {
                    "valueFrom": "${ return inputs.pair[0].ID; }",
                    "id": "tumor_sample_name"
                },
                {
                    "source": "ref_fasta",
                    "id": "ref_fasta"
                },
                {
                    "valueFrom": "${ return inputs.db_files.vep_path }",
                    "id": "vep_path"
                },
                {
                    "valueFrom": "${ return inputs.db_files.custom_enst }",
                    "id": "custom_enst"
                },
                {
                    "valueFrom": "${ return inputs.db_files.vep_data }",
                    "id": "vep_data"
                },
                {
                    "valueFrom": "${ return inputs.db_files.delly_exclude }",
                    "id": "delly_exclude"
                },
                {
                    "valueFrom": "${ return inputs.runparams.delly_type; }",
                    "id": "delly_type"
                }
            ],
            "out": [
                "delly_sv",
                "delly_filtered_sv",
                "merged_file",
                "merged_file_unfiltered",
                "maf_file",
                "portal_file"
            ],
            "id": "structural_variants"
        },
        {
            "run": {
                "cwlVersion": "v1.0",
                "class": "Workflow",
                "id": "maf-processing-pair",
                "requirements": [
                    {
                        "class": "MultipleInputFeatureRequirement"
                    },
                    {
                        "class": "ScatterFeatureRequirement"
                    },
                    {
                        "class": "SubworkflowFeatureRequirement"
                    },
                    {
                        "class": "InlineJavascriptRequirement"
                    },
                    {
                        "class": "StepInputExpressionRequirement"
                    }
                ],
                "inputs": [
                    {
                        "type": {
                            "type": "array",
                            "items": {
                                "type": "record",
                                "fields": [
                                    {
                                        "type": "string",
                                        "name": "CN"
                                    },
                                    {
                                        "type": "string",
                                        "name": "LB"
                                    },
                                    {
                                        "type": "string",
                                        "name": "ID"
                                    },
                                    {
                                        "type": "string",
                                        "name": "PL"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "string"
                                        },
                                        "name": "PU"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "R1"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "R2"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "zR1"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "zR2"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "bam"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "string"
                                        },
                                        "name": "RG_ID"
                                    },
                                    {
                                        "type": "string",
                                        "name": "adapter"
                                    },
                                    {
                                        "type": "string",
                                        "name": "adapter2"
                                    },
                                    {
                                        "type": "string",
                                        "name": "bwa_output"
                                    }
                                ]
                            }
                        },
                        "id": "pair"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "secondaryFiles": [
                            "^.bai"
                        ],
                        "id": "bams"
                    },
                    {
                        "type": "File",
                        "id": "annotate_vcf"
                    },
                    {
                        "type": "string",
                        "id": "normal_sample_name"
                    },
                    {
                        "type": "string",
                        "id": "tumor_sample_name"
                    },
                    {
                        "type": "string",
                        "id": "genome"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".amb",
                            ".ann",
                            ".bwt",
                            ".pac",
                            ".sa",
                            ".fai",
                            "^.dict"
                        ],
                        "id": "ref_fasta"
                    },
                    {
                        "type": "string",
                        "id": "vep_path"
                    },
                    {
                        "type": "string",
                        "id": "custom_enst"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            ".tbi"
                        ],
                        "id": "exac_filter"
                    },
                    {
                        "type": "string",
                        "id": "vep_data"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "secondaryFiles": [
                            "^.bai"
                        ],
                        "id": "curated_bams"
                    },
                    {
                        "type": "string",
                        "id": "hotspot_list"
                    }
                ],
                "outputs": [
                    {
                        "type": "File",
                        "outputSource": "ngs_filters/output",
                        "id": "maf"
                    },
                    {
                        "type": "File",
                        "outputSource": "fillout_tumor_normal/portal_fillout",
                        "id": "portal_fillout"
                    }
                ],
                "steps": [
                    {
                        "in": [
                            {
                                "source": "pair",
                                "id": "pair"
                            },
                            {
                                "valueFrom": "${ return inputs.pair[1].ID + \"\\t\" + inputs.pair[0].ID; }",
                                "id": "echoString"
                            },
                            {
                                "valueFrom": "${ return \"tn_pairing_file.txt\"; }",
                                "id": "output_filename"
                            }
                        ],
                        "out": [
                            "pairfile"
                        ],
                        "run": {
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "echo",
                                "-e"
                            ],
                            "id": "create_TN_pair",
                            "stdout": "$(inputs.output_filename)",
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "class": "MultipleInputFeatureRequirement"
                                },
                                {
                                    "dockerPull": "alpine:3.8",
                                    "class": "DockerRequirement"
                                }
                            ],
                            "inputs": [
                                {
                                    "type": {
                                        "type": "array",
                                        "items": {
                                            "type": "record",
                                            "fields": [
                                                {
                                                    "type": "string",
                                                    "name": "ID"
                                                }
                                            ]
                                        }
                                    },
                                    "id": "pair"
                                },
                                {
                                    "type": "string",
                                    "inputBinding": {
                                        "position": 1
                                    },
                                    "id": "echoString"
                                },
                                {
                                    "type": "string",
                                    "id": "output_filename"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "stdout",
                                    "id": "pairfile"
                                }
                            ]
                        },
                        "id": "create_pairing_file"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "perl",
                                "/usr/bin/vcf2maf/vcf2maf.pl"
                            ],
                            "arguments": [
                                {
                                    "valueFrom": "$(runtime.tmpdir)",
                                    "prefix": "--tmp-dir",
                                    "shellQuote": false
                                }
                            ],
                            "label": "vcf2maf",
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "ramMin": 8000,
                                    "coresMin": 2,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-vcf2maf:1.6.17",
                                    "class": "DockerRequirement"
                                }
                            ],
                            "doc": "None\n",
                            "inputs": [
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "86",
                                    "doc": "Version of VEP and its cache to use",
                                    "inputBinding": {
                                        "prefix": "--cache-version"
                                    },
                                    "id": "cache_version"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "homo_sapiens",
                                    "doc": "Species of variants in input",
                                    "inputBinding": {
                                        "prefix": "--species"
                                    },
                                    "id": "species"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "GRCh37",
                                    "doc": "Genome build of variants in input",
                                    "inputBinding": {
                                        "prefix": "--ncbi-build"
                                    },
                                    "id": "ncbi_build"
                                },
                                {
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "doc": "Reference FASTA file",
                                    "inputBinding": {
                                        "prefix": "--ref-fasta"
                                    },
                                    "id": "ref_fasta"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "mskcc.org",
                                    "doc": "Variant calling center to report in MAF",
                                    "inputBinding": {
                                        "prefix": "--maf-center"
                                    },
                                    "id": "maf_center"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Path to output MAF file",
                                    "inputBinding": {
                                        "prefix": "--output-maf"
                                    },
                                    "id": "output_maf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "int"
                                    ],
                                    "default": 10,
                                    "doc": "Use tag common_variant if the filter-vcf reports a subpopulation AC higher than this",
                                    "inputBinding": {
                                        "prefix": "--max-filter-ac"
                                    },
                                    "id": "max_filter_ac"
                                },
                                {
                                    "type": [
                                        "null",
                                        "float"
                                    ],
                                    "default": 0.7,
                                    "doc": "If GT undefined in VCF, minimum allele fraction to call a variant homozygous",
                                    "inputBinding": {
                                        "prefix": "--min-hom-vaf"
                                    },
                                    "id": "min_hom_vaf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Chain file to remap variants to a different assembly before running VEP",
                                    "inputBinding": {
                                        "prefix": "--remap-chain"
                                    },
                                    "id": "remap_chain"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "NORMAL",
                                    "doc": "Matched_Norm_Sample_Barcode to report in the MAF",
                                    "inputBinding": {
                                        "prefix": "--normal-id"
                                    },
                                    "id": "normal_id"
                                },
                                {
                                    "type": [
                                        "null",
                                        "int"
                                    ],
                                    "default": 5000,
                                    "doc": "Number of variants VEP loads at a time; Reduce this for low memory systems",
                                    "inputBinding": {
                                        "prefix": "--buffer-size"
                                    },
                                    "id": "buffer_size"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "List of custom ENST IDs that override canonical selection",
                                    "inputBinding": {
                                        "prefix": "--custom-enst"
                                    },
                                    "id": "custom_enst"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "NORMAL",
                                    "doc": "Matched normal ID used in VCFs genotype columns",
                                    "inputBinding": {
                                        "prefix": "--vcf-normal-id"
                                    },
                                    "id": "vcf_normal_id"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Folder containing variant_effect_predictor.pl or vep binary",
                                    "inputBinding": {
                                        "prefix": "--vep-path"
                                    },
                                    "id": "vep_path"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "VEPs base cache/plugin directory",
                                    "inputBinding": {
                                        "prefix": "--vep-data"
                                    },
                                    "id": "vep_data"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "When reporting co-located variants, allow mismatched variant alleles too",
                                    "inputBinding": {
                                        "prefix": "--any-allele"
                                    },
                                    "id": "any_allele"
                                },
                                {
                                    "type": [
                                        "string",
                                        "File"
                                    ],
                                    "doc": "Path to input file in VCF format",
                                    "inputBinding": {
                                        "prefix": "--input-vcf"
                                    },
                                    "id": "input_vcf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "int"
                                    ],
                                    "default": 4,
                                    "doc": "Number of forked processes to use when running VEP",
                                    "inputBinding": {
                                        "prefix": "--vep-forks"
                                    },
                                    "id": "vep_forks"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "TUMOR",
                                    "doc": "Tumor sample ID used in VCFs genotype columns",
                                    "inputBinding": {
                                        "prefix": "--vcf-tumor-id"
                                    },
                                    "id": "vcf_tumor_id"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "default": "TUMOR",
                                    "doc": "Tumor_Sample_Barcode to report in the MAF",
                                    "inputBinding": {
                                        "prefix": "--tumor-id"
                                    },
                                    "id": "tumor_id"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string",
                                        "File"
                                    ],
                                    "doc": "The non-TCGA VCF from exac.broadinstitute.org",
                                    "inputBinding": {
                                        "prefix": "--filter-vcf"
                                    },
                                    "secondaryFiles": [
                                        ".tbi"
                                    ],
                                    "id": "filter_vcf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Comma-delimited names of INFO fields to retain as extra columns in MAF",
                                    "inputBinding": {
                                        "prefix": "--retain-info"
                                    },
                                    "id": "retain_info"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Comma-delimited names of FORMAT fields to retain as extra columns in MAF []",
                                    "inputBinding": {
                                        "prefix": "--retain-fmt"
                                    },
                                    "id": "retain_fmt"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "${\n  if (inputs.output_maf)\n    return inputs.output_maf;\n  return null;\n}\n"
                                    },
                                    "id": "output"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "annotate_vcf",
                                "id": "input_vcf"
                            },
                            {
                                "source": "tumor_sample_name",
                                "id": "tumor_id"
                            },
                            {
                                "source": "tumor_sample_name",
                                "id": "vcf_tumor_id"
                            },
                            {
                                "source": "normal_sample_name",
                                "id": "normal_id"
                            },
                            {
                                "source": "normal_sample_name",
                                "id": "vcf_normal_id"
                            },
                            {
                                "source": "genome",
                                "id": "ncbi_build"
                            },
                            {
                                "source": "exac_filter",
                                "id": "filter_vcf"
                            },
                            {
                                "source": "vep_data",
                                "id": "vep_data"
                            },
                            {
                                "source": "ref_fasta",
                                "id": "ref_fasta"
                            },
                            {
                                "source": "vep_path",
                                "id": "vep_path"
                            },
                            {
                                "source": "custom_enst",
                                "id": "custom_enst"
                            },
                            {
                                "default": "set,TYPE,FAILURE_REASON,MSI,MSILEN,SSF,LSEQ,RSEQ,STATUS,VSB",
                                "id": "retain_info"
                            },
                            {
                                "default": "QUAL,BIAS,HIAF,PMEAN,PSTD,ALD,RD,NM,MQ,IS",
                                "id": "retain_fmt"
                            },
                            {
                                "valueFrom": "${ return inputs.tumor_id + \".\" + inputs.normal_id + \".combined-variants.vep.maf\" }",
                                "id": "output_maf"
                            }
                        ],
                        "out": [
                            "output"
                        ],
                        "id": "vcf2maf"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "id": "remove-variants",
                            "baseCommand": [
                                "python",
                                "/usr/bin/remove_variants.py"
                            ],
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "ramMin": 8000,
                                    "coresMin": 1,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-remove-variants:0.1.1",
                                    "class": "DockerRequirement"
                                }
                            ],
                            "doc": "Remove snps/indels from the output maf where a complex variant is called\n",
                            "inputs": [
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "make lots of noise",
                                    "inputBinding": {
                                        "prefix": "--verbose"
                                    },
                                    "id": "verbose"
                                },
                                {
                                    "type": [
                                        "string",
                                        "File"
                                    ],
                                    "doc": "Input maf file which needs to be fixed",
                                    "inputBinding": {
                                        "prefix": "--input-maf"
                                    },
                                    "id": "inputMaf"
                                },
                                {
                                    "type": "string",
                                    "doc": "Output maf file name",
                                    "inputBinding": {
                                        "prefix": "--output-maf"
                                    },
                                    "id": "outputMaf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Full Path to the output dir.",
                                    "inputBinding": {
                                        "prefix": "--outDir"
                                    },
                                    "id": "outdir"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "${\n  if (inputs.outputMaf )\n    return inputs.outputMaf;\n  return null;\n}\n"
                                    },
                                    "id": "maf"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "vcf2maf/output",
                                "id": "inputMaf"
                            },
                            {
                                "valueFrom": "${ return inputs.inputMaf.basename.replace(\".vep.maf\", \".vep.rmv.maf\") }",
                                "id": "outputMaf"
                            }
                        ],
                        "out": [
                            "maf"
                        ],
                        "id": "remove_variants"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "baseCommand": [
                                "cmo_fillout"
                            ],
                            "id": "cmo-fillout",
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "ramMin": 48000,
                                    "coresMin": 4,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-cmo-utils:1.9.15",
                                    "class": "DockerRequirement"
                                }
                            ],
                            "doc": "Fillout allele counts for a MAF file using GetBaseCountsMultiSample on BAMs\n",
                            "inputs": [
                                {
                                    "type": "File",
                                    "doc": "MAF file on which to fillout",
                                    "inputBinding": {
                                        "prefix": "--maf"
                                    },
                                    "id": "maf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "doc": "Tab separated pairing file, normal tumor",
                                    "inputBinding": {
                                        "prefix": "--pairing-file"
                                    },
                                    "id": "pairing"
                                },
                                {
                                    "type": {
                                        "type": "array",
                                        "items": [
                                            "string",
                                            "File"
                                        ]
                                    },
                                    "doc": "BAM files to fillout with",
                                    "inputBinding": {
                                        "prefix": "--bams"
                                    },
                                    "id": "bams"
                                },
                                {
                                    "type": "File",
                                    "doc": "Reference assembly file of BAM files, e.g. hg19/grch37/b37",
                                    "inputBinding": {
                                        "prefix": "--ref-fasta"
                                    },
                                    "id": "ref_fasta"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Filename for output of raw fillout data in MAF/VCF format",
                                    "inputBinding": {
                                        "prefix": "--output"
                                    },
                                    "id": "output"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Filename for a portal-friendly output MAF",
                                    "inputBinding": {
                                        "prefix": "--portal-output"
                                    },
                                    "id": "portal_output"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "Precomputed fillout file from GBCMS (using this skips GBCMS)",
                                    "inputBinding": {
                                        "prefix": "--fillout"
                                    },
                                    "id": "fillout"
                                },
                                {
                                    "type": "string",
                                    "doc": "Output format MAF(1) or tab-delimited with VCF based coordinates(2)",
                                    "inputBinding": {
                                        "prefix": "--format"
                                    },
                                    "id": "output_format"
                                }
                            ],
                            "arguments": [
                                {
                                    "position": 0,
                                    "prefix": "--n_threads",
                                    "valueFrom": "$(runtime.cores)"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "${\n  if (inputs.output)\n    return inputs.output;\n  else\n    return inputs.maf.basename.replace(\".maf\", \".fillout\");\n}\n"
                                    },
                                    "id": "fillout_out"
                                },
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "${\n  if (inputs.portal_output)\n    return inputs.portal_output;\n  else\n    return inputs.maf.basename.replace(\".maf\", \".fillout.portal.maf\");\n}\n"
                                    },
                                    "id": "portal_fillout"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "create_pairing_file/pairfile",
                                "id": "pairing"
                            },
                            {
                                "source": "remove_variants/maf",
                                "id": "maf"
                            },
                            {
                                "source": "bams",
                                "id": "bams"
                            },
                            {
                                "source": "ref_fasta",
                                "id": "ref_fasta"
                            },
                            {
                                "default": "1",
                                "id": "output_format"
                            }
                        ],
                        "out": [
                            "fillout_out",
                            "portal_fillout"
                        ],
                        "id": "fillout_tumor_normal"
                    },
                    {
                        "in": [
                            {
                                "source": "fillout_tumor_normal/portal_fillout",
                                "id": "maf"
                            },
                            {
                                "source": "ref_fasta",
                                "id": "ref_fasta"
                            },
                            {
                                "source": "curated_bams",
                                "id": "curated_bams"
                            }
                        ],
                        "out": [
                            "fillout_curated_bams"
                        ],
                        "run": {
                            "class": "Workflow",
                            "id": "fillout_second",
                            "inputs": [
                                {
                                    "type": "File",
                                    "id": "maf"
                                },
                                {
                                    "type": "File",
                                    "secondaryFiles": [
                                        ".amb",
                                        ".ann",
                                        ".bwt",
                                        ".pac",
                                        ".sa",
                                        ".fai",
                                        "^.dict"
                                    ],
                                    "id": "ref_fasta"
                                },
                                {
                                    "type": {
                                        "type": "array",
                                        "items": "File"
                                    },
                                    "id": "curated_bams"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputSource": "fillout_curated_bams_step/fillout_out",
                                    "id": "fillout_curated_bams"
                                }
                            ],
                            "steps": [
                                {
                                    "run": {
                                        "cwlVersion": "v1.0",
                                        "class": "CommandLineTool",
                                        "baseCommand": [
                                            "cmo_fillout"
                                        ],
                                        "id": "cmo-fillout",
                                        "requirements": [
                                            {
                                                "class": "InlineJavascriptRequirement"
                                            },
                                            {
                                                "ramMin": 48000,
                                                "coresMin": 4,
                                                "class": "ResourceRequirement"
                                            },
                                            {
                                                "dockerPull": "mskcc/roslin-variant-cmo-utils:1.9.15",
                                                "class": "DockerRequirement"
                                            }
                                        ],
                                        "doc": "Fillout allele counts for a MAF file using GetBaseCountsMultiSample on BAMs\n",
                                        "inputs": [
                                            {
                                                "type": "File",
                                                "doc": "MAF file on which to fillout",
                                                "inputBinding": {
                                                    "prefix": "--maf"
                                                },
                                                "id": "maf"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "File"
                                                ],
                                                "doc": "Tab separated pairing file, normal tumor",
                                                "inputBinding": {
                                                    "prefix": "--pairing-file"
                                                },
                                                "id": "pairing"
                                            },
                                            {
                                                "type": {
                                                    "type": "array",
                                                    "items": [
                                                        "string",
                                                        "File"
                                                    ]
                                                },
                                                "doc": "BAM files to fillout with",
                                                "inputBinding": {
                                                    "prefix": "--bams"
                                                },
                                                "id": "bams"
                                            },
                                            {
                                                "type": "File",
                                                "doc": "Reference assembly file of BAM files, e.g. hg19/grch37/b37",
                                                "inputBinding": {
                                                    "prefix": "--ref-fasta"
                                                },
                                                "id": "ref_fasta"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Filename for output of raw fillout data in MAF/VCF format",
                                                "inputBinding": {
                                                    "prefix": "--output"
                                                },
                                                "id": "output"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Filename for a portal-friendly output MAF",
                                                "inputBinding": {
                                                    "prefix": "--portal-output"
                                                },
                                                "id": "portal_output"
                                            },
                                            {
                                                "type": [
                                                    "null",
                                                    "string"
                                                ],
                                                "doc": "Precomputed fillout file from GBCMS (using this skips GBCMS)",
                                                "inputBinding": {
                                                    "prefix": "--fillout"
                                                },
                                                "id": "fillout"
                                            },
                                            {
                                                "type": "string",
                                                "doc": "Output format MAF(1) or tab-delimited with VCF based coordinates(2)",
                                                "inputBinding": {
                                                    "prefix": "--format"
                                                },
                                                "id": "output_format"
                                            }
                                        ],
                                        "arguments": [
                                            {
                                                "position": 0,
                                                "prefix": "--n_threads",
                                                "valueFrom": "$(runtime.cores)"
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.output)\n    return inputs.output;\n  else\n    return inputs.maf.basename.replace(\".maf\", \".fillout\");\n}\n"
                                                },
                                                "id": "fillout_out"
                                            },
                                            {
                                                "type": "File",
                                                "outputBinding": {
                                                    "glob": "${\n  if (inputs.portal_output)\n    return inputs.portal_output;\n  else\n    return inputs.maf.basename.replace(\".maf\", \".fillout.portal.maf\");\n}\n"
                                                },
                                                "id": "portal_fillout"
                                            }
                                        ]
                                    },
                                    "in": [
                                        {
                                            "source": "maf",
                                            "id": "maf"
                                        },
                                        {
                                            "source": "curated_bams",
                                            "id": "bams"
                                        },
                                        {
                                            "source": "ref_fasta",
                                            "id": "ref_fasta"
                                        },
                                        {
                                            "default": "1",
                                            "id": "output_format"
                                        },
                                        {
                                            "valueFrom": "${ return inputs.maf.basename.replace(\".maf\", \".curated.fillout\"); }",
                                            "id": "output"
                                        }
                                    ],
                                    "out": [
                                        "fillout_out"
                                    ],
                                    "id": "fillout_curated_bams_step"
                                }
                            ],
                            "requirements": []
                        },
                        "id": "fillout_second"
                    },
                    {
                        "run": {
                            "cwlVersion": "v1.0",
                            "class": "CommandLineTool",
                            "id": "ngs-filters",
                            "baseCommand": [
                                "python",
                                "/usr/bin/ngs-filters/run_ngs-filters.py"
                            ],
                            "requirements": [
                                {
                                    "class": "InlineJavascriptRequirement"
                                },
                                {
                                    "ramMin": 36000,
                                    "coresMin": 1,
                                    "class": "ResourceRequirement"
                                },
                                {
                                    "dockerPull": "mskcc/roslin-variant-ngs-filters:1.4",
                                    "class": "DockerRequirement"
                                }
                            ],
                            "doc": "This tool flags false-positive somatic calls in a given MAF file\n",
                            "inputs": [
                                {
                                    "type": [
                                        "null",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "doc": "make lots of noise",
                                    "inputBinding": {
                                        "prefix": "--verbose"
                                    },
                                    "id": "verbose"
                                },
                                {
                                    "type": [
                                        "File"
                                    ],
                                    "doc": "Input maf file which needs to be tagged",
                                    "inputBinding": {
                                        "prefix": "--input-maf"
                                    },
                                    "id": "inputMaf"
                                },
                                {
                                    "type": "string",
                                    "doc": "Output maf file name",
                                    "inputBinding": {
                                        "prefix": "--output-maf"
                                    },
                                    "id": "outputMaf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string",
                                        "File"
                                    ],
                                    "doc": "Path to fillout maf file of panel of standard normals",
                                    "inputBinding": {
                                        "prefix": "--normal-panel-maf"
                                    },
                                    "id": "NormalPanelMaf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string",
                                        "File"
                                    ],
                                    "doc": "Path to fillout maf file of cohort normals",
                                    "inputBinding": {
                                        "prefix": "--normal-cohort-maf"
                                    },
                                    "id": "NormalCohortMaf"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string"
                                    ],
                                    "doc": "File with list of normal samples",
                                    "inputBinding": {
                                        "prefix": "--normalSamplesFile"
                                    },
                                    "id": "NormalCohortSamples"
                                },
                                {
                                    "type": [
                                        "null",
                                        "string",
                                        "File"
                                    ],
                                    "doc": "Input txt file which has hotspots",
                                    "inputBinding": {
                                        "prefix": "--input-hotspot"
                                    },
                                    "id": "inputHSP"
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "File",
                                    "outputBinding": {
                                        "glob": "${\n  if (inputs.outputMaf)\n    return inputs.outputMaf;\n  return null;\n}\n"
                                    },
                                    "id": "output"
                                }
                            ]
                        },
                        "in": [
                            {
                                "source": "tumor_sample_name",
                                "id": "tumor_sample_name"
                            },
                            {
                                "source": "normal_sample_name",
                                "id": "normal_sample_name"
                            },
                            {
                                "source": "fillout_tumor_normal/portal_fillout",
                                "id": "inputMaf"
                            },
                            {
                                "valueFrom": "${ return inputs.tumor_sample_name + \".\" + inputs.normal_sample_name + \".muts.maf\" }",
                                "id": "outputMaf"
                            },
                            {
                                "source": "fillout_second/fillout_curated_bams",
                                "id": "NormalPanelMaf"
                            },
                            {
                                "source": "hotspot_list",
                                "id": "inputHSP"
                            }
                        ],
                        "out": [
                            "output"
                        ],
                        "id": "ngs_filters"
                    }
                ]
            },
            "in": [
                {
                    "source": "runparams",
                    "id": "runparams"
                },
                {
                    "source": "db_files",
                    "id": "db_files"
                },
                {
                    "source": "alignment/bams",
                    "id": "bams"
                },
                {
                    "source": "variant_calling/annotate_vcf",
                    "id": "annotate_vcf"
                },
                {
                    "source": "pair",
                    "id": "pair"
                },
                {
                    "valueFrom": "${ return inputs.runparams.genome }",
                    "id": "genome"
                },
                {
                    "source": "ref_fasta",
                    "id": "ref_fasta"
                },
                {
                    "valueFrom": "${ return inputs.db_files.vep_path }",
                    "id": "vep_path"
                },
                {
                    "valueFrom": "${ return inputs.db_files.custom_enst }",
                    "id": "custom_enst"
                },
                {
                    "source": "exac_filter",
                    "id": "exac_filter"
                },
                {
                    "valueFrom": "${ return inputs.db_files.vep_data }",
                    "id": "vep_data"
                },
                {
                    "valueFrom": "${ return inputs.pair[1].ID; }",
                    "id": "normal_sample_name"
                },
                {
                    "valueFrom": "${ return inputs.pair[0].ID; }",
                    "id": "tumor_sample_name"
                },
                {
                    "source": "curated_bams",
                    "id": "curated_bams"
                },
                {
                    "valueFrom": "${ return inputs.db_files.hotspot_list }",
                    "id": "hotspot_list"
                }
            ],
            "out": [
                "maf",
                "portal_fillout"
            ],
            "id": "maf_processing"
        },
        {
            "run": {
                "cwlVersion": "v1.0",
                "class": "ExpressionTool",
                "id": "consolidate-files",
                "requirements": [
                    {
                        "class": "InlineJavascriptRequirement"
                    }
                ],
                "inputs": [
                    {
                        "type": {
                            "type": "record",
                            "fields": [
                                {
                                    "type": "string",
                                    "name": "genome"
                                },
                                {
                                    "type": "string",
                                    "name": "assay"
                                },
                                {
                                    "type": "string",
                                    "name": "pi"
                                },
                                {
                                    "type": "string",
                                    "name": "pi_email"
                                },
                                {
                                    "type": "string",
                                    "name": "project_prefix"
                                }
                            ]
                        },
                        "id": "runparams"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": {
                                "type": "record",
                                "fields": [
                                    {
                                        "type": "string",
                                        "name": "CN"
                                    },
                                    {
                                        "type": "string",
                                        "name": "LB"
                                    },
                                    {
                                        "type": "string",
                                        "name": "ID"
                                    },
                                    {
                                        "type": "string",
                                        "name": "PL"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "string"
                                        },
                                        "name": "PU"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "R1"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "R2"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "zR1"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "zR2"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "File"
                                        },
                                        "name": "bam"
                                    },
                                    {
                                        "type": {
                                            "type": "array",
                                            "items": "string"
                                        },
                                        "name": "RG_ID"
                                    },
                                    {
                                        "type": "string",
                                        "name": "adapter"
                                    },
                                    {
                                        "type": "string",
                                        "name": "adapter2"
                                    },
                                    {
                                        "type": "string",
                                        "name": "bwa_output"
                                    }
                                ]
                            }
                        },
                        "id": "pair"
                    },
                    {
                        "type": {
                            "type": "array",
                            "items": "File"
                        },
                        "secondaryFiles": [
                            "^.bai"
                        ],
                        "id": "bams"
                    }
                ],
                "outputs": [
                    {
                        "type": "string",
                        "id": "genome"
                    },
                    {
                        "type": "string",
                        "id": "assay"
                    },
                    {
                        "type": "string",
                        "id": "pi"
                    },
                    {
                        "type": "string",
                        "id": "pi_email"
                    },
                    {
                        "type": "string",
                        "id": "project_prefix"
                    },
                    {
                        "type": "string",
                        "id": "normal_sample_name"
                    },
                    {
                        "type": "string",
                        "id": "tumor_sample_name"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            "^.bai"
                        ],
                        "id": "normal_bam"
                    },
                    {
                        "type": "File",
                        "secondaryFiles": [
                            "^.bai"
                        ],
                        "id": "tumor_bam"
                    }
                ],
                "expression": "${\n  var output = {};\n  output['genome'] = inputs.runparams.genome;\n  output['assay'] = inputs.runparams.assay;\n  output['pi'] = inputs.runparams.pi;\n  output['pi_email'] = inputs.runparams.pi_email;\n  output['project_prefix'] = inputs.runparams.project_prefix;\n  output['normal_bam'] = inputs.bams[1];\n  output['tumor_bam'] = inputs.bams[0];\n  output['normal_sample_name'] = inputs.pair[1].ID;\n  output['tumor_sample_name'] = inputs.pair[0].ID;\n  return output;\n}\n"
            },
            "in": [
                {
                    "source": "runparams",
                    "id": "runparams"
                },
                {
                    "source": "pair",
                    "id": "pair"
                },
                {
                    "source": "alignment/bams",
                    "id": "bams"
                }
            ],
            "out": [
                "genome",
                "assay",
                "pi",
                "pi_email",
                "project_prefix",
                "normal_sample_name",
                "tumor_sample_name",
                "normal_bam",
                "tumor_bam"
            ],
            "id": "format_output"
        }
    ]
}